[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Graphic Design with ggplot2",
    "section": "",
    "text": "Instructor\n\nDr. Cédric Scherer (he/him) is a graduated computational ecologist with a passion for design. After his PhD, he combined his expertise in analyzing and visualizing large data sets in R with his passion to become an independent data visualization designer and specialist. Cédric has created visualizations across all disciplines, purposes, and styles and regularly teaches data visualization principles, the R programing language, and ggplot2. Due to regular participation in social data challenges such as #TidyTuesday, he is now well known for complex and visually appealing figures, entirely made with ggplot2, that look as if they have been created with a vector design tool."
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "This work is licensed under a Creative Commons Attribution 4.0 International License."
  },
  {
    "objectID": "materials/01_introduction.html#conversation-starters",
    "href": "materials/01_introduction.html#conversation-starters",
    "title": "Graphic Design with ggplot2",
    "section": "Conversation Starters",
    "text": "Conversation Starters\n\nWhat’s your name?\nWhere do you feel home?\nWhen did you use R for the first time?\nWhat’s your favorite animal / plant / color / typeface?\nWhom would you like to meet during the rstudio::conf?\nWhich R package are you looking forward to try?\n\n\n\n\n10:00"
  },
  {
    "objectID": "materials/01_introduction.html#announcements",
    "href": "materials/01_introduction.html#announcements",
    "title": "Graphic Design with ggplot2",
    "section": "Announcements",
    "text": "Announcements\n\nWiFi:\nUsername: conf22 - Password: together!\nCourse Materials\nWebpage: rstudio-conf-2022.github.io/ggplot2-graphic-design\nRstudio Cloud: rstudio.cloud/spaces/235465"
  },
  {
    "objectID": "materials/01_introduction.html#announcements-1",
    "href": "materials/01_introduction.html#announcements-1",
    "title": "Graphic Design with ggplot2",
    "section": "Announcements",
    "text": "Announcements\n\n\ngender neutral bathrooms by the National Harbor rooms\nmeditation room is located at National Harbor 9, open 8am-5pm, Monday-Thursday\nthere is also has a dedicated room behind the reception\nlactation room is located at Potomac Dressing Room, open 8am-5pm, Monday-Thursday.\nparticipants with red lanyards wish to be not photographed, please note everyone’s lanyard colors before taking a photo\nThe Code of Conduct and COVID policies can be found at rstudio.com/conference/2022/2022-conf-code-of-conduct, please review them carefully"
  },
  {
    "objectID": "materials/01_introduction.html#communication-strategy",
    "href": "materials/01_introduction.html#communication-strategy",
    "title": "Graphic Design with ggplot2",
    "section": "Communication Strategy",
    "text": "Communication Strategy\n\n\n\nGreen sticky note — I am done with the exercise\nPink sticky note — I need help or support\nYou can ask questions / comment at any time during the course.\nPlease avoid questions during the breaks to give us a chance to recover and reflect.\nTeam up with your neighbors for exercises — and lunch!\nWe will collect feedback twice during the day (more later)."
  },
  {
    "objectID": "materials/01_introduction.html#section-14",
    "href": "materials/01_introduction.html#section-14",
    "title": "Graphic Design with ggplot2",
    "section": "",
    "text": "{ggplot2} package description\n\n\n\n{ggplot2} is a system for declaratively creating graphics,based on “The Grammar of Graphics” (Wilkinson, 2005).\n\nYou provide the data, tell {ggplot2} how tomap variables to aesthetics,what graphical primitives to use, and it takes care of the details."
  },
  {
    "objectID": "materials/01_introduction.html#advantages-of-ggplot2",
    "href": "materials/01_introduction.html#advantages-of-ggplot2",
    "title": "Graphic Design with ggplot2",
    "section": "Advantages of {ggplot2}",
    "text": "Advantages of {ggplot2}\n\n\nconsistent underlying “grammar of graphics” (Wilkinson 2005)\n\nvery flexible, layered plot specification\n\ntheme system for polishing plot appearance\n\nlots of additional functionality thanks to extensions\n\nactive and helpful community"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#the-ggplot2-package",
    "href": "materials/02_concepts_pt1.html#the-ggplot2-package",
    "title": "Graphic Design with ggplot2",
    "section": "The ggplot2 Package",
    "text": "The ggplot2 Package\n\n… is an R package to visualize data created by Hadley Wickham in 2005\n\n# install.packages(\"ggplot2\")\nlibrary(ggplot2)\n\n\n\n… is part of the {tidyverse}\n\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#the-grammar-of-ggplot2-1",
    "href": "materials/02_concepts_pt1.html#the-grammar-of-ggplot2-1",
    "title": "Graphic Design with ggplot2",
    "section": "The Grammar of {ggplot2}",
    "text": "The Grammar of {ggplot2}\n 31b8e172-b470-440e-83d8-e6b185028602:dAB5AHAAZQA6AE8AQQBCAGwAQQBHAFkAQQBOAFEAQgBoAEEARABjAEEATgB3AEEAeQBBAEMAMABBAFoAQQBCAGsAQQBEAFkAQQBNAHcAQQB0AEEARABRAEEATgBnAEEAeQBBAEQASQBBAEwAUQBBADQAQQBEAFEAQQBZAGcAQgBtAEEAQwAwAEEAWQBRAEIAbQBBAEQARQBBAE8AUQBBADUAQQBEAFUAQQBZAFEAQQB4AEEARwBJAEEATQBnAEIAaQBBAEQAawBBAAoAcABvAHMAaQB0AGkAbwBuADoATQBRAEEANABBAEQAUQBBAE0AdwBBAD0ACgBwAHIAZQBmAGkAeAA6AAoAcwBvAHUAcgBjAGUAOgBQAEEAQgAwAEEARwBFAEEAWQBnAEIAcwBBAEcAVQBBAEkAQQBCAHoAQQBIAFEAQQBlAFEAQgBzAEEARwBVAEEAUABRAEEAbgBBAEgAYwBBAGEAUQBCAGsAQQBIAFEAQQBhAEEAQQA2AEEARABFAEEATQBBAEEAdwBBAEMAVQBBAE8AdwBCAG0AQQBHADgAQQBiAGcAQgAwAEEAQwAwAEEAYwB3AEIAcABBAEgAbwBBAFoAUQBBADYAQQBEAEUAQQBOAEEAQgB3AEEASABRAEEATwB3AEEAbgBBAEQANABBAEMAZwBBAGcAQQBDAEEAQQBQAEEAQgAwAEEASABJAEEAUABnAEEASwBBAEMAQQBBAEkAQQBBAGcAQQBDAEEAQQBQAEEAQgAwAEEARwBnAEEAUABnAEIARABBAEcAOABBAGIAUQBCAHcAQQBHADgAQQBiAGcAQgBsAEEARwA0AEEAZABBAEEAOABBAEMAOABBAGQAQQBCAG8AQQBEADQAQQBDAGcAQQBnAEEAQwBBAEEASQBBAEEAZwBBAEQAdwBBAGQAQQBCAG8AQQBEADQAQQBSAGcAQgAxAEEARwA0AEEAWQB3AEIAMABBAEcAawBBAGIAdwBCAHUAQQBEAHcAQQBMAHcAQgAwAEEARwBnAEEAUABnAEEASwBBAEMAQQBBAEkAQQBBAGcAQQBDAEEAQQBQAEEAQgAwAEEARwBnAEEAUABnAEIARgBBAEgAZwBBAGMAQQBCAHMAQQBHAEUAQQBiAGcAQgBoAEEASABRAEEAYQBRAEIAdgBBAEcANABBAFAAQQBBAHYAQQBIAFEAQQBhAEEAQQArAEEAQQBvAEEASQBBAEEAZwBBAEQAdwBBAEwAdwBCADAAQQBIAEkAQQBQAGcAQQBLAEEAQwBBAEEASQBBAEEAOABBAEgAUQBBAGMAZwBBACsAQQBBAG8AQQBJAEEAQQBnAEEAQwBBAEEASQBBAEEAOABBAEgAUQBBAFoAQQBBACsAQQBEAHcAQQBZAGcAQQBnAEEASABNAEEAZABBAEIANQBBAEcAdwBBAFoAUQBBADkAQQBDAGMAQQBZAHcAQgB2AEEARwB3AEEAYgB3AEIAeQBBAEQAbwBBAEkAdwBBADIAQQBEAGMAQQBOAGcAQQAzAEEARABZAEEATwB3AEEAbgBBAEQANABBAFIAQQBCAGgAQQBIAFEAQQBZAFEAQQA4AEEAQwA4AEEAWQBnAEEAKwBBAEQAdwBBAEwAdwBCADAAQQBHAFEAQQBQAGcAQQBLAEEAQwBBAEEASQBBAEEAZwBBAEMAQQBBAFAAQQBCADAAQQBHAFEAQQBQAGcAQQA4AEEARwBNAEEAYgB3AEIAawBBAEcAVQBBAFAAZwBCAG4AQQBHAGMAQQBjAEEAQgBzAEEARwA4AEEAZABBAEEAbwBBAEcAUQBBAFkAUQBCADAAQQBHAEUAQQBLAFEAQQA4AEEAQwA4AEEAWQB3AEIAdgBBAEcAUQBBAFoAUQBBACsAQQBDAFkAQQBiAGcAQgBpAEEASABNAEEAYwBBAEEANwBBAEMAWQBBAGIAZwBCAGkAQQBIAE0AQQBjAEEAQQA3AEEAQwBZAEEAYgBnAEIAaQBBAEgATQBBAGMAQQBBADcAQQBDAFkAQQBiAGcAQgBpAEEASABNAEEAYwBBAEEANwBBAEMAWQBBAGIAZwBCAGkAQQBIAE0AQQBjAEEAQQA3AEEAQwBZAEEAYgBnAEIAaQBBAEgATQBBAGMAQQBBADcAQQBDAFkAQQBiAGcAQgBpAEEASABNAEEAYwBBAEEANwBBAEMAWQBBAGIAZwBCAGkAQQBIAE0AQQBjAEEAQQA3AEEAQwBZAEEAYgBnAEIAaQBBAEgATQBBAGMAQQBBADcAQQBEAHcAQQBMAHcAQgAwAEEARwBRAEEAUABnAEEASwBBAEMAQQBBAEkAQQBBAGcAQQBDAEEAQQBQAEEAQgAwAEEARwBRAEEAUABnAEEAcQBBAEYAUQBBAGEAQQBCAGwAQQBDAEEAQQBjAGcAQgBoAEEASABjAEEASQBBAEIAawBBAEcARQBBAGQAQQBCAGgAQQBDAEEAQQBkAEEAQgBvAEEARwBFAEEAZABBAEEAZwBBAEgAawBBAGIAdwBCADEAQQBDAEEAQQBkAHcAQgBoAEEARwA0AEEAZABBAEEAZwBBAEgAUQBBAGIAdwBBAGcAQQBIAFkAQQBhAFEAQgB6AEEASABVAEEAWQBRAEIAcwBBAEcAawBBAGMAdwBCAGwAQQBDADQAQQBLAGcAQQA4AEEAQwA4AEEAZABBAEIAawBBAEQANABBAEMAZwBBAGcAQQBDAEEAQQBQAEEAQQB2AEEASABRAEEAYwBnAEEAKwBBAEEAbwBBAEkAQQBBAGcAQQBEAHcAQQBkAEEAQgB5AEEARAA0AEEAQwBnAEEAZwBBAEMAQQBBAEkAQQBBAGcAQQBEAHcAQQBkAEEAQgBrAEEARAA0AEEAUABBAEIAaQBBAEMAQQBBAGMAdwBCADAAQQBIAGsAQQBiAEEAQgBsAEEARAAwAEEASgB3AEIAagBBAEcAOABBAGIAQQBCAHYAQQBIAEkAQQBPAGcAQQBqAEEARABZAEEATgB3AEEAMgBBAEQAYwBBAE4AZwBBADcAQQBDAGMAQQBQAGcAQgBCAEEARwBVAEEAYwB3AEIAMABBAEcAZwBBAFoAUQBCADAAQQBHAGsAQQBZAHcAQgB6AEEAQwBZAEEAYgBnAEIAaQBBAEgATQBBAGMAQQBBADcAQQBDAFkAQQBiAGcAQgBpAEEASABNAEEAYwBBAEEANwBBAEMAWQBBAGIAZwBCAGkAQQBIAE0AQQBjAEEAQQA3AEEAQwBZAEEAYgBnAEIAaQBBAEgATQBBAGMAQQBBADcAQQBDAFkAQQBiAGcAQgBpAEEASABNAEEAYwBBAEEANwBBAEMAWQBBAGIAZwBCAGkAQQBIAE0AQQBjAEEAQQA3AEEAQwBZAEEAYgBnAEIAaQBBAEgATQBBAGMAQQBBADcAQQBDAFkAQQBiAGcAQgBpAEEASABNAEEAYwBBAEEANwBBAEMAWQBBAGIAZwBCAGkAQQBIAE0AQQBjAEEAQQA3AEEAQwBZAEEAYgBnAEIAaQBBAEgATQBBAGMAQQBBADcAQQBEAHcAQQBMAHcAQgBpAEEARAA0AEEAUABBAEEAdgBBAEgAUQBBAFoAQQBBACsAQQBBAG8AQQBJAEEAQQBnAEEAQwBBAEEASQBBAEEAOABBAEgAUQBBAFoAQQBBACsAQQBEAHcAQQBZAHcAQgB2AEEARwBRAEEAWgBRAEEAKwBBAEcARQBBAFoAUQBCAHoAQQBDAGcAQQBLAFEAQQA4AEEAQwA4AEEAWQB3AEIAdgBBAEcAUQBBAFoAUQBBACsAQQBEAHcAQQBMAHcAQgAwAEEARwBRAEEAUABnAEEASwBBAEMAQQBBAEkAQQBBAGcAQQBDAEEAQQBQAEEAQgAwAEEARwBRAEEAUABnAEEAcQBBAEUARQBBAFoAUQBCAHoAQQBIAFEAQQBhAEEAQgBsAEEASABRAEEAYQBRAEIAagBBAEMAQQBBAGIAUQBCAGgAQQBIAEEAQQBjAEEAQgBwAEEARwA0AEEAWgB3AEIAegBBAEMAQQBBAFkAZwBCAGwAQQBIAFEAQQBkAHcAQgBsAEEARwBVAEEAYgBnAEEAZwBBAEgAWQBBAFkAUQBCAHkAQQBHAGsAQQBZAFEAQgBpAEEARwB3AEEAWgBRAEIAegBBAEMAQQBBAFkAUQBCAHUAQQBHAFEAQQBJAEEAQgAyAEEARwBrAEEAYwB3AEIAMQBBAEcARQBBAGIAQQBBAGcAQQBIAEEAQQBjAGcAQgB2AEEASABBAEEAWgBRAEIAeQBBAEgAUQBBAGEAUQBCAGwAQQBIAE0AQQBMAGcAQQB1AEEAQwBvAEEAUABBAEEAdgBBAEgAUQBBAFoAQQBBACsAQQBBAG8AQQBJAEEAQQBnAEEARAB3AEEAZABBAEIAeQBBAEQANABBAEMAZwBBAGcAQQBDAEEAQQBJAEEAQQBnAEEARAB3AEEAZABBAEIAawBBAEQANABBAFAAQQBCAGkAQQBDAEEAQQBjAHcAQgAwAEEASABrAEEAYgBBAEIAbABBAEQAMABBAEoAdwBCAGoAQQBHADgAQQBiAEEAQgB2AEEASABJAEEATwBnAEEAagBBAEQAWQBBAE4AdwBBADIAQQBEAGMAQQBOAGcAQQA3AEEAQwBjAEEAUABnAEIASABBAEcAVQBBAGIAdwBCAHQAQQBHAFUAQQBkAEEAQgB5AEEARwBrAEEAWgBRAEIAegBBAEQAdwBBAEwAdwBCAGkAQQBEADQAQQBQAEEAQQB2AEEASABRAEEAWgBBAEEAKwBBAEEAbwBBAEkAQQBBAGcAQQBDAEEAQQBJAEEAQQA4AEEASABRAEEAWgBBAEEAKwBBAEQAdwBBAFkAdwBCAHYAQQBHAFEAQQBaAFEAQQArAEEARwBjAEEAWgBRAEIAdgBBAEcAMABBAFgAdwBBAHEAQQBDAGcAQQBLAFEAQQA4AEEAQwA4AEEAWQB3AEIAdgBBAEcAUQBBAFoAUQBBACsAQQBEAHcAQQBMAHcAQgAwAEEARwBRAEEAUABnAEEASwBBAEMAQQBBAEkAQQBBAGcAQQBDAEEAQQBQAEEAQgAwAEEARwBRAEEAUABnAEEAcQBBAEYAUQBBAGEAQQBCAGwAQQBDAEEAQQBaAHcAQgBsAEEARwA4AEEAYgBRAEIAbABBAEgAUQBBAGMAZwBCAHAAQQBHAE0AQQBJAEEAQgB6AEEARwBnAEEAWQBRAEIAdwBBAEcAVQBBAGMAdwBBAGcAQQBIAEkAQQBaAFEAQgB3AEEASABJAEEAWgBRAEIAegBBAEcAVQBBAGIAZwBCADAAQQBHAGsAQQBiAGcAQgBuAEEAQwBBAEEAZABBAEIAbwBBAEcAVQBBAEkAQQBCAGsAQQBHAEUAQQBkAEEAQgBoAEEAQwA0AEEASwBnAEEAOABBAEMAOABBAGQAQQBCAGsAQQBEADQAQQBDAGcAQQBnAEEAQwBBAEEAUABBAEEAdgBBAEgAUQBBAGMAZwBBACsAQQBBAG8AQQBQAEEAQQB2AEEASABRAEEAWQBRAEIAaQBBAEcAdwBBAFoAUQBBACsAQQBBAD0APQAKAHMAdQBmAGYAaQB4ADoA:31b8e172-b470-440e-83d8-e6b185028602"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#the-grammar-of-ggplot2-2",
    "href": "materials/02_concepts_pt1.html#the-grammar-of-ggplot2-2",
    "title": "Graphic Design with ggplot2",
    "section": "The Grammar of {ggplot2}",
    "text": "The Grammar of {ggplot2}\n 31b8e172-b470-440e-83d8-e6b185028602::31b8e172-b470-440e-83d8-e6b185028602"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#the-data",
    "href": "materials/02_concepts_pt1.html#the-data",
    "title": "Graphic Design with ggplot2",
    "section": "The Data",
    "text": "The Data\nBike sharing counts in London, UK, powered by TfL Open Data\n\n\ncovers the years 2015 and 2016\nincl. weather data acquired from freemeteo.com\nprepared by Hristo Mavrodiev for Kaggle\nfurther modification by myself\n\n\n\n\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  ## or: \"https://raw.githubusercontent.com/z3tt/graphic-design-ggplot2/main/data/london-bikes-custom.csv\"\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#ggplot2ggplot",
    "href": "materials/02_concepts_pt1.html#ggplot2ggplot",
    "title": "Graphic Design with ggplot2",
    "section": "ggplot2::ggplot()",
    "text": "ggplot2::ggplot()"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#data",
    "href": "materials/02_concepts_pt1.html#data",
    "title": "Graphic Design with ggplot2",
    "section": "Data",
    "text": "Data\n\n\nggplot(data = bikes)"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#aesthetic-mapping",
    "href": "materials/02_concepts_pt1.html#aesthetic-mapping",
    "title": "Graphic Design with ggplot2",
    "section": "Aesthetic Mapping",
    "text": "Aesthetic Mapping\n\n= link variables to graphical properties\n\n\npositions (x, y)\ncolors (color, fill)\nshapes (shape, linetype)\nsize (size)\ntransparency (alpha)\ngroupings (group)"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#aesthetic-mapping-1",
    "href": "materials/02_concepts_pt1.html#aesthetic-mapping-1",
    "title": "Graphic Design with ggplot2",
    "section": "Aesthetic Mapping",
    "text": "Aesthetic Mapping\n\n\nggplot(data = bikes) +\n  aes(x = temp_feel, y = count)"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#aesthetics",
    "href": "materials/02_concepts_pt1.html#aesthetics",
    "title": "Graphic Design with ggplot2",
    "section": "aesthetics",
    "text": "aesthetics\naes() outside as component\n\nggplot(data = bikes) +\n  aes(x = temp_feel, y = count)\n\n\n\naes() inside, explicit matching\n\nggplot(data = bikes, mapping = aes(x = temp_feel, y = count))\n\n\n\n\naes() inside, implicit matching\n\nggplot(bikes, aes(temp_feel, count))\n\n\n\n\naes() inside, mixed matching\n\nggplot(bikes, aes(x = temp_feel, y = count))"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#geometries",
    "href": "materials/02_concepts_pt1.html#geometries",
    "title": "Graphic Design with ggplot2",
    "section": "Geometries",
    "text": "Geometries\n\n= interpret aesthetics as graphical representations\n\n\npoints\nlines\npolygons\ntext labels\n…"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#geometries-1",
    "href": "materials/02_concepts_pt1.html#geometries-1",
    "title": "Graphic Design with ggplot2",
    "section": "Geometries",
    "text": "Geometries\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#visual-properties-of-layers",
    "href": "materials/02_concepts_pt1.html#visual-properties-of-layers",
    "title": "Graphic Design with ggplot2",
    "section": "Visual Properties of Layers",
    "text": "Visual Properties of Layers\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point(\n    color = \"#28a87d\",\n    alpha = .5,\n    shape = \"X\",\n    stroke = 1,\n    size = 4\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#setting-vs-mapping-of-visual-properties",
    "href": "materials/02_concepts_pt1.html#setting-vs-mapping-of-visual-properties",
    "title": "Graphic Design with ggplot2",
    "section": "Setting vs Mapping of Visual Properties",
    "text": "Setting vs Mapping of Visual Properties\n\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point(\n    color = \"#28a87d\",\n    alpha = .5\n  )\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#mapping-expressions",
    "href": "materials/02_concepts_pt1.html#mapping-expressions",
    "title": "Graphic Design with ggplot2",
    "section": "Mapping Expressions",
    "text": "Mapping Expressions\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point(\n    aes(color = temp_feel > 20),\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#your-turn",
    "href": "materials/02_concepts_pt1.html#your-turn",
    "title": "Graphic Design with ggplot2",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n\nCreate a scatter plot of temp_feel vs temp.\n\nMap the color of the points to clear weather.\nMap the size of the points to count.\nTurn the points into diamonds.\nBonus: What do you notice in the legend? How could you fix it?\n\n\n\n\n\n\n05:00"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#mapping-expressions-1",
    "href": "materials/02_concepts_pt1.html#mapping-expressions-1",
    "title": "Graphic Design with ggplot2",
    "section": "Mapping Expressions",
    "text": "Mapping Expressions\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point(\n    aes(color = weather_type == \"clear\"),\n    alpha = .5,\n    size = 2\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#mapping-to-size",
    "href": "materials/02_concepts_pt1.html#mapping-to-size",
    "title": "Graphic Design with ggplot2",
    "section": "Mapping to Size",
    "text": "Mapping to Size\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point(\n    aes(color = weather_type == \"clear\",\n        size = count),\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#setting-a-constant-property",
    "href": "materials/02_concepts_pt1.html#setting-a-constant-property",
    "title": "Graphic Design with ggplot2",
    "section": "Setting a Constant Property",
    "text": "Setting a Constant Property\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point(\n    aes(color = weather_type == \"clear\",\n        size = count),\n    shape = 18,\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#setting-a-constant-property-1",
    "href": "materials/02_concepts_pt1.html#setting-a-constant-property-1",
    "title": "Graphic Design with ggplot2",
    "section": "Setting a Constant Property",
    "text": "Setting a Constant Property\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point(\n    aes(color = weather_type == \"clear\",\n        size = count),\n    shape = 5,\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#setting-a-constant-property-2",
    "href": "materials/02_concepts_pt1.html#setting-a-constant-property-2",
    "title": "Graphic Design with ggplot2",
    "section": "Setting a Constant Property",
    "text": "Setting a Constant Property\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point(\n    aes(color = weather_type == \"clear\",\n        size = count),\n    shape = 9,\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#setting-a-constant-property-3",
    "href": "materials/02_concepts_pt1.html#setting-a-constant-property-3",
    "title": "Graphic Design with ggplot2",
    "section": "Setting a Constant Property",
    "text": "Setting a Constant Property\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point(\n    aes(color = weather_type == \"clear\",\n        size = count),\n    shape = 23,\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#setting-a-constant-property-4",
    "href": "materials/02_concepts_pt1.html#setting-a-constant-property-4",
    "title": "Graphic Design with ggplot2",
    "section": "Setting a Constant Property",
    "text": "Setting a Constant Property\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point(\n    aes(fill = weather_type == \"clear\",\n        size = count),\n    shape = 23,\n    color = \"black\",\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#filter-data",
    "href": "materials/02_concepts_pt1.html#filter-data",
    "title": "Graphic Design with ggplot2",
    "section": "Filter Data",
    "text": "Filter Data\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point(\n    aes(color = weather_type == \"clear\",\n        size = count),\n    shape = 18,\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#filter-data-1",
    "href": "materials/02_concepts_pt1.html#filter-data-1",
    "title": "Graphic Design with ggplot2",
    "section": "Filter Data",
    "text": "Filter Data\n\n\nggplot(\n    bikes %>% filter(!is.na(weather_type)),\n    aes(x = temp, y = temp_feel)\n  ) +\n  geom_point(\n    aes(color = weather_type == \"clear\",\n        size = count),\n    shape = 18,\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#local-vs.-global-encoding",
    "href": "materials/02_concepts_pt1.html#local-vs.-global-encoding",
    "title": "Graphic Design with ggplot2",
    "section": "Local vs. Global Encoding",
    "text": "Local vs. Global Encoding\n\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  )\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#adding-more-layers",
    "href": "materials/02_concepts_pt1.html#adding-more-layers",
    "title": "Graphic Design with ggplot2",
    "section": "Adding More Layers",
    "text": "Adding More Layers\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#global-color-encoding",
    "href": "materials/02_concepts_pt1.html#global-color-encoding",
    "title": "Graphic Design with ggplot2",
    "section": "Global Color Encoding",
    "text": "Global Color Encoding\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#local-color-encoding",
    "href": "materials/02_concepts_pt1.html#local-color-encoding",
    "title": "Graphic Design with ggplot2",
    "section": "Local Color Encoding",
    "text": "Local Color Encoding\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#the-group-aesthetic",
    "href": "materials/02_concepts_pt1.html#the-group-aesthetic",
    "title": "Graphic Design with ggplot2",
    "section": "The `group` Aesthetic",
    "text": "The `group` Aesthetic\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point(\n    aes(color = season),\n    alpha = .5\n  ) +\n  geom_smooth(\n    aes(group = day_night),\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#set-both-as-global-aesthetics",
    "href": "materials/02_concepts_pt1.html#set-both-as-global-aesthetics",
    "title": "Graphic Design with ggplot2",
    "section": "Set Both as Global Aesthetics",
    "text": "Set Both as Global Aesthetics\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season,\n        group = day_night)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#overwrite-global-aesthetics",
    "href": "materials/02_concepts_pt1.html#overwrite-global-aesthetics",
    "title": "Graphic Design with ggplot2",
    "section": "Overwrite Global Aesthetics",
    "text": "Overwrite Global Aesthetics\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season,\n        group = day_night)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    color = \"black\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#store-a-ggplot-as-object",
    "href": "materials/02_concepts_pt1.html#store-a-ggplot-as-object",
    "title": "Graphic Design with ggplot2",
    "section": "Store a ggplot as Object",
    "text": "Store a ggplot as Object\n\ng <-\n  ggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season,\n        group = day_night)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    color = \"black\"\n  )\n\nclass(g)\n\n[1] \"gg\"     \"ggplot\""
  },
  {
    "objectID": "materials/02_concepts_pt1.html#inspect-a-ggplot-object",
    "href": "materials/02_concepts_pt1.html#inspect-a-ggplot-object",
    "title": "Graphic Design with ggplot2",
    "section": "Inspect a ggplot Object",
    "text": "Inspect a ggplot Object\n\ng$data\n\n# A tibble: 1,454 × 14\n   date       day_night year  month season count is_workday is_weekend\n   <date>     <chr>     <fct> <fct> <fct>  <int> <lgl>      <lgl>     \n 1 2015-01-04 day       2015  1     winter  6830 FALSE      TRUE      \n 2 2015-01-04 night     2015  1     winter  2404 FALSE      TRUE      \n 3 2015-01-05 day       2015  1     winter 14763 TRUE       FALSE     \n 4 2015-01-05 night     2015  1     winter  5609 TRUE       FALSE     \n 5 2015-01-06 day       2015  1     winter 14501 TRUE       FALSE     \n 6 2015-01-06 night     2015  1     winter  6112 TRUE       FALSE     \n 7 2015-01-07 day       2015  1     winter 16358 TRUE       FALSE     \n 8 2015-01-07 night     2015  1     winter  4706 TRUE       FALSE     \n 9 2015-01-08 day       2015  1     winter  9971 TRUE       FALSE     \n10 2015-01-08 night     2015  1     winter  5630 TRUE       FALSE     \n# … with 1,444 more rows, and 6 more variables: is_holiday <lgl>, temp <dbl>,\n#   temp_feel <dbl>, humidity <dbl>, wind_speed <dbl>, weather_type <chr>"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#inspect-a-ggplot-object-1",
    "href": "materials/02_concepts_pt1.html#inspect-a-ggplot-object-1",
    "title": "Graphic Design with ggplot2",
    "section": "Inspect a ggplot Object",
    "text": "Inspect a ggplot Object\n\ng$mapping\n\nAesthetic mapping: \n* `x`      -> `temp_feel`\n* `y`      -> `count`\n* `colour` -> `season`\n* `group`  -> `day_night`"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-layers",
    "href": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-layers",
    "title": "Graphic Design with ggplot2",
    "section": "Extend a ggplot Object: Add Layers",
    "text": "Extend a ggplot Object: Add Layers\n\n\ng +\n  geom_rug(\n    alpha = .2\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#remove-a-layer-from-the-legend",
    "href": "materials/02_concepts_pt1.html#remove-a-layer-from-the-legend",
    "title": "Graphic Design with ggplot2",
    "section": "Remove a Layer from the Legend",
    "text": "Remove a Layer from the Legend\n\n\ng +\n  geom_rug(\n    alpha = .2,\n    show.legend = FALSE\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels",
    "href": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\ng +\n  xlab(\"Feels-like temperature (°F)\") +\n  ylab(\"Reported bike shares\") +\n  ggtitle(\"TfL bike sharing trends\")"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels-1",
    "href": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels-1",
    "title": "Graphic Design with ggplot2",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\ng +\n  labs(\n    x = \"Feels-like temperature (°F)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels-2",
    "href": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels-2",
    "title": "Graphic Design with ggplot2",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\ng <- g +\n  labs(\n    x = \"Feels-like temperature (°F)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\",\n    color = \"Season:\"\n  )\n\ng"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels-3",
    "href": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels-3",
    "title": "Graphic Design with ggplot2",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\ng +\n  labs(\n    x = \"Feels-like temperature (°F)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\",\n    subtitle = \"Reported bike rents versus feels-like temperature in London\",\n    caption = \"Data: TfL\",\n    color = \"Season:\",\n    tag = \"Fig. 1\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels-4",
    "href": "materials/02_concepts_pt1.html#extend-a-ggplot-object-add-labels-4",
    "title": "Graphic Design with ggplot2",
    "section": "Extend a ggplot Object: Add Labels",
    "text": "Extend a ggplot Object: Add Labels\n\n\n\ng +\n  labs(\n    x = \"\",\n    caption = \"Data: TfL\"\n  )\n\n\n\n\n\ng +\n  labs(\n    x = NULL,\n    caption = \"Data: TfL\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#extend-a-ggplot-object-themes",
    "href": "materials/02_concepts_pt1.html#extend-a-ggplot-object-themes",
    "title": "Graphic Design with ggplot2",
    "section": "Extend a ggplot Object: Themes",
    "text": "Extend a ggplot Object: Themes\n\n\n\ng + theme_light()\n\n\n\n\n\n\ng + theme_minimal()"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#change-the-theme-base-settings",
    "href": "materials/02_concepts_pt1.html#change-the-theme-base-settings",
    "title": "Graphic Design with ggplot2",
    "section": "Change the Theme Base Settings",
    "text": "Change the Theme Base Settings\n\n\ng + theme_light(\n  base_size = 14,\n  base_family = \"Roboto Condensed\"\n)"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#set-a-theme-globally",
    "href": "materials/02_concepts_pt1.html#set-a-theme-globally",
    "title": "Graphic Design with ggplot2",
    "section": "Set a Theme Globally",
    "text": "Set a Theme Globally\n\n\ntheme_set(theme_light())\n\ng"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#change-the-theme-base-settings-1",
    "href": "materials/02_concepts_pt1.html#change-the-theme-base-settings-1",
    "title": "Graphic Design with ggplot2",
    "section": "Change the Theme Base Settings",
    "text": "Change the Theme Base Settings\n\n\ntheme_set(theme_light(\n  base_size = 14,\n  base_family = \"Roboto Condensed\"\n))\n\ng"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#systemfonts",
    "href": "materials/02_concepts_pt1.html#systemfonts",
    "title": "Graphic Design with ggplot2",
    "section": "{systemfonts}",
    "text": "{systemfonts}\n\n# install.packages(\"systemfonts\")\n\nlibrary(systemfonts)\n\nsystem_fonts() %>%\n  filter(str_detect(family, \"Cabinet\")) %>%\n  pull(name) %>%\n  sort()\n\n[1] \"false\" \"false\""
  },
  {
    "objectID": "materials/02_concepts_pt1.html#systemfonts-1",
    "href": "materials/02_concepts_pt1.html#systemfonts-1",
    "title": "Graphic Design with ggplot2",
    "section": "{systemfonts}",
    "text": "{systemfonts}\n\n# install.packages(\"systemfonts\")\nregister_variant(\n  name = \"Cabinet Grotesk Black\",\n  family = \"Cabinet Grotesk\",\n  weight = \"heavy\",\n  features = font_feature(letters = \"stylistic\")\n)"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#systemfonts-ggplot2",
    "href": "materials/02_concepts_pt1.html#systemfonts-ggplot2",
    "title": "Graphic Design with ggplot2",
    "section": "{systemfonts} + {ggplot2}",
    "text": "{systemfonts} + {ggplot2}\n\n\ng +\n  theme_light(\n    base_size = 18,\n    base_family = \"Cabinet Grotesk Black\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#overwrite-specific-theme-settings",
    "href": "materials/02_concepts_pt1.html#overwrite-specific-theme-settings",
    "title": "Graphic Design with ggplot2",
    "section": "Overwrite Specific Theme Settings",
    "text": "Overwrite Specific Theme Settings\n\n\ng +\n  theme(\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#overwrite-specific-theme-settings-1",
    "href": "materials/02_concepts_pt1.html#overwrite-specific-theme-settings-1",
    "title": "Graphic Design with ggplot2",
    "section": "Overwrite Specific Theme Settings",
    "text": "Overwrite Specific Theme Settings\n\n\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\")\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#overwrite-specific-theme-settings-2",
    "href": "materials/02_concepts_pt1.html#overwrite-specific-theme-settings-2",
    "title": "Graphic Design with ggplot2",
    "section": "Overwrite Specific Theme Settings",
    "text": "Overwrite Specific Theme Settings\n\n\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"top\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#overwrite-specific-theme-settings-3",
    "href": "materials/02_concepts_pt1.html#overwrite-specific-theme-settings-3",
    "title": "Graphic Design with ggplot2",
    "section": "Overwrite Specific Theme Settings",
    "text": "Overwrite Specific Theme Settings\n\n\ng +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title = element_text(face = \"bold\"),\n    legend.position = \"top\",\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#overwrite-theme-settings-globally",
    "href": "materials/02_concepts_pt1.html#overwrite-theme-settings-globally",
    "title": "Graphic Design with ggplot2",
    "section": "Overwrite Theme Settings Globally",
    "text": "Overwrite Theme Settings Globally\n\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  legend.position = \"top\",\n  plot.title.position = \"plot\"\n)\n\ng"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#save-the-graphic",
    "href": "materials/02_concepts_pt1.html#save-the-graphic",
    "title": "Graphic Design with ggplot2",
    "section": "Save the Graphic",
    "text": "Save the Graphic\n\nggsave(g, filename = \"my_plot.png\")\n\n\n\nggsave(\"my_plot.png\")\n\n\n\n\nggsave(\"my_plot.png\", width = 8, height = 5, dpi = 600)\n\n\n\n\nggsave(\"my_plot.pdf\", width = 20, height = 12, unit = \"cm\", device = cairo_pdf)\n\n\n\n\ngrDevices::cairo_pdf(\"my_plot.pdf\", width = 10, height = 7)\ng\ndev.off()"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#how-to-work-with-aspect-ratios",
    "href": "materials/02_concepts_pt1.html#how-to-work-with-aspect-ratios",
    "title": "Graphic Design with ggplot2",
    "section": "How to Work with Aspect Ratios",
    "text": "How to Work with Aspect Ratios\n\n\ndon’t rely on the Rstudio viewer pane!\nonce you have a “it’s getting close” prototype, settle on a plot size\nApproach 1: save the file to disk and inspect it; go back to your IDE\n\ntedious and time-consuming…\n\nApproach 2: use a qmd or rmd with inline output and chunk settings\n\nset fig.width and fig.height per chunk or globally\n\nApproach 3: use our {camcorder} package\n\nsaves output from all ggplot() calls and displays it in the viewer pane"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#setting-plot-sizes-in-rmds",
    "href": "materials/02_concepts_pt1.html#setting-plot-sizes-in-rmds",
    "title": "Graphic Design with ggplot2",
    "section": "Setting Plot Sizes in Rmd’s",
    "text": "Setting Plot Sizes in Rmd’s"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#setting-plot-sizes-via-camcorder",
    "href": "materials/02_concepts_pt1.html#setting-plot-sizes-via-camcorder",
    "title": "Graphic Design with ggplot2",
    "section": "Setting Plot Sizes via {camcorder}",
    "text": "Setting Plot Sizes via {camcorder}"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#recap",
    "href": "materials/02_concepts_pt1.html#recap",
    "title": "Graphic Design with ggplot2",
    "section": "Recap",
    "text": "Recap\n\n\n\n{ggplot2} is a powerful library for reproducible graphic design\nthe components follow a consistent syntax\neach ggplot needs at least data, some aesthetics, and a layer\nwe set constant propeties outside aes()\n… and map data-related properties inside aes()\nlocal settings and mappings override global properties\ngrouping allows applying layers for subsets\nwe can store a ggplot object and extend it afterwards\nwe can change the appearance for all plots with theme_set() and theme_update()"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#exercise-1",
    "href": "materials/02_concepts_pt1.html#exercise-1",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nOpen the script exercises/02_concepts_pt1_ex1.qmd.\nExplore the TfL bike share data visually:create a timeseries of reported bike shares on weekend days\n\nHighlight day and night encoded by colors and shapes.\nConnect the points of each period with lines.\n\nWhat is the difference between geom_line() and geom_path()?\n\nApply your favorite theme to the plot.\nAdd meaningful labels.\n\nSave the plot as a vector graphic with a decent plot size.\n\n\n\n\n\n15:00"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#exercise-2",
    "href": "materials/02_concepts_pt1.html#exercise-2",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nOpen the script exercises/02_concepts_pt1_ex2.qmd.\nExplore the TfL bike sharing data visually:create a boxplot of counts per weather type\n\nTurn the plot into a jitter strips plot (random noise across the x axis)\nCombine both chart types (jittered points on top of the boxplots)\nBonus: Sort the boxplot-jitter hybrid by median counts\nApply your favorite theme to the plot.\nAdd meaningful labels.\nBonus: Explore other chart types to visualize the distributions.\n\nSave the plot as a vector graphic with a decent plot size.\n\n\n\n\n\n25:00"
  },
  {
    "objectID": "materials/02_concepts_pt1.html#section-3",
    "href": "materials/02_concepts_pt1.html#section-3",
    "title": "Graphic Design with ggplot2",
    "section": "",
    "text": "Cédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#setup",
    "href": "materials/03_concepts_pt2.html#setup",
    "title": "Graphic Design with ggplot2",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Roboto Condensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  legend.position = \"top\",\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facets-1",
    "href": "materials/03_concepts_pt2.html#facets-1",
    "title": "Graphic Design with ggplot2",
    "section": "Facets",
    "text": "Facets\n\n= split variables to multiple panels\n\nFacets are also known as:\n\nsmall multiples\ntrellis graphs\nlattice plots\nconditioning"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#setup-1",
    "href": "materials/03_concepts_pt2.html#setup-1",
    "title": "Graphic Design with ggplot2",
    "section": "Setup",
    "text": "Setup\n\n\ng <-\n  ggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .3,\n    guide = \"none\"\n  )\n\ng"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#wrapped-facet",
    "href": "materials/03_concepts_pt2.html#wrapped-facet",
    "title": "Graphic Design with ggplot2",
    "section": "Wrapped Facet",
    "text": "Wrapped Facet\n\n\ng +\n  facet_wrap(\n    vars(day_night)\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#wrapped-facet-1",
    "href": "materials/03_concepts_pt2.html#wrapped-facet-1",
    "title": "Graphic Design with ggplot2",
    "section": "Wrapped Facet",
    "text": "Wrapped Facet\n\n\ng +\n  facet_wrap(\n    ~ day_night\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-multiple-variables",
    "href": "materials/03_concepts_pt2.html#facet-multiple-variables",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Multiple Variables",
    "text": "Facet Multiple Variables\n\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-options-cols-rows",
    "href": "materials/03_concepts_pt2.html#facet-options-cols-rows",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Options: Cols + Rows",
    "text": "Facet Options: Cols + Rows\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-options-free-scaling",
    "href": "materials/03_concepts_pt2.html#facet-options-free-scaling",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Options: Free Scaling",
    "text": "Facet Options: Free Scaling\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1,\n    scales = \"free\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-options-free-scaling-1",
    "href": "materials/03_concepts_pt2.html#facet-options-free-scaling-1",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Options: Free Scaling",
    "text": "Facet Options: Free Scaling\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1,\n    scales = \"free_y\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-options-switch-labels",
    "href": "materials/03_concepts_pt2.html#facet-options-switch-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Options: Switch Labels",
    "text": "Facet Options: Switch Labels\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    ncol = 1,\n    switch = \"x\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#gridded-facet",
    "href": "materials/03_concepts_pt2.html#gridded-facet",
    "title": "Graphic Design with ggplot2",
    "section": "Gridded Facet",
    "text": "Gridded Facet\n\n\ng +\n  facet_grid(\n    rows = vars(day_night),\n    cols = vars(is_workday)\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#gridded-facet-1",
    "href": "materials/03_concepts_pt2.html#gridded-facet-1",
    "title": "Graphic Design with ggplot2",
    "section": "Gridded Facet",
    "text": "Gridded Facet\n\n\ng +\n  facet_grid(\n    day_night ~ is_workday\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-multiple-variables-1",
    "href": "materials/03_concepts_pt2.html#facet-multiple-variables-1",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Multiple Variables",
    "text": "Facet Multiple Variables\n\n\ng +\n  facet_grid(\n    day_night ~ is_workday + season\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-options-free-scaling-2",
    "href": "materials/03_concepts_pt2.html#facet-options-free-scaling-2",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Options: Free Scaling",
    "text": "Facet Options: Free Scaling\n\n\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-options-switch-labels-1",
    "href": "materials/03_concepts_pt2.html#facet-options-switch-labels-1",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Options: Switch Labels",
    "text": "Facet Options: Switch Labels\n\n\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free\",\n    switch = \"y\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-options-proportional-spacing",
    "href": "materials/03_concepts_pt2.html#facet-options-proportional-spacing",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Options: Proportional Spacing",
    "text": "Facet Options: Proportional Spacing\n\n\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free\",\n    space = \"free\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#facet-options-proportional-spacing-1",
    "href": "materials/03_concepts_pt2.html#facet-options-proportional-spacing-1",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Options: Proportional Spacing",
    "text": "Facet Options: Proportional Spacing\n\n\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free_y\",\n    space = \"free_y\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#your-turn",
    "href": "materials/03_concepts_pt2.html#your-turn",
    "title": "Graphic Design with ggplot2",
    "section": "Your Turn!",
    "text": "Your Turn!\n\nCreate the following facet from the diamonds data."
  },
  {
    "objectID": "materials/03_concepts_pt2.html#your-turn-1",
    "href": "materials/03_concepts_pt2.html#your-turn-1",
    "title": "Graphic Design with ggplot2",
    "section": "Your Turn!",
    "text": "Your Turn!\n\nBonus: Create this bloody-dark version."
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet",
    "href": "materials/03_concepts_pt2.html#diamonds-facet",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    se = FALSE,\n    color = \"dodgerblue\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet-1",
    "href": "materials/03_concepts_pt2.html#diamonds-facet-1",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    se = FALSE,\n    color = \"dodgerblue\"\n  ) +\n  facet_grid(\n    cut ~ clarity,\n    space = \"free_x\",\n    scales = \"free_x\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet-dark-theme-bonus",
    "href": "materials/03_concepts_pt2.html#diamonds-facet-dark-theme-bonus",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet (Dark Theme Bonus)",
    "text": "Diamonds Facet (Dark Theme Bonus)\n\n\nggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3,\n    color = \"white\"\n  ) +\n  geom_smooth(\n    method = \"lm\",\n    se = FALSE,\n    color = \"dodgerblue\"\n  ) +\n  facet_grid(\n    cut ~ clarity,\n    space = \"free_x\",\n    scales = \"free_x\"\n  ) +\n  theme_dark(\n    base_size = 14,\n    base_family = \"Roboto Condensed\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scales-1",
    "href": "materials/03_concepts_pt2.html#scales-1",
    "title": "Graphic Design with ggplot2",
    "section": "Scales",
    "text": "Scales\n\n= translate between variable ranges and property ranges\n\n\nfeels-like temperature  ⇄  x\nreported bike shares  ⇄  y\nseason  ⇄  color\nyear  ⇄  shape\n…"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scales-2",
    "href": "materials/03_concepts_pt2.html#scales-2",
    "title": "Graphic Design with ggplot2",
    "section": "Scales",
    "text": "Scales\nThe scale_*() components control the properties of all theaesthetic dimensions mapped to the data.\nConsequently, there are scale_*() functions for all aesthetics such as:\n\npositions via scale_x_*() and scale_y_*()\ncolors via scale_color_*() and scale_fill_*()\nsizes via scale_size_*() and scale_radius_*()\nshapes via scale_shape_*() and scale_linetype_*()\ntransparency via scale_alpha_*()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scales-3",
    "href": "materials/03_concepts_pt2.html#scales-3",
    "title": "Graphic Design with ggplot2",
    "section": "Scales",
    "text": "Scales\nThe scale_*() components control the properties of all theaesthetic dimensions mapped to the data.\nThe extensions (*) can be filled by e.g.:\n\ncontinuous(), discrete(), reverse(), log10(), sqrt(), date() for positions\ncontinuous(), discrete(), manual(), gradient(), gradient2(), brewer() for colors\ncontinuous(), discrete(), manual(), ordinal(), area(), date() for sizes\ncontinuous(), discrete(), manual(), ordinal() for shapes\ncontinuous(), discrete(), manual(), ordinal(), date() for transparency"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#continuous-vs.-discrete-in-ggplot2",
    "href": "materials/03_concepts_pt2.html#continuous-vs.-discrete-in-ggplot2",
    "title": "Graphic Design with ggplot2",
    "section": "Continuous vs. Discrete in {ggplot2}",
    "text": "Continuous vs. Discrete in {ggplot2}\n\n\n\nContinuous:quantitative or numerical data\n\nheight\nweight\nage\ncounts\n\n\n\nDiscrete:qualitative or categorical data\n\nspecies\nsex\nstudy sites\nage group"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#continuous-vs.-discrete-in-ggplot2-1",
    "href": "materials/03_concepts_pt2.html#continuous-vs.-discrete-in-ggplot2-1",
    "title": "Graphic Design with ggplot2",
    "section": "Continuous vs. Discrete in {ggplot2}",
    "text": "Continuous vs. Discrete in {ggplot2}\n\n\n\nContinuous:quantitative or numerical data\n\nheight (continuous)\nweight (continuous)\nage (continuous or discrete)\ncounts (discrete)\n\n\n\nDiscrete:qualitative or categorical data\n\nspecies (nominal)\nsex (nominal)\nstudy site (nominal or ordinal)\nage group (ordinal)"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#aesthetics-scales",
    "href": "materials/03_concepts_pt2.html#aesthetics-scales",
    "title": "Graphic Design with ggplot2",
    "section": "Aesthetics + Scales",
    "text": "Aesthetics + Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#aesthetics-scales-1",
    "href": "materials/03_concepts_pt2.html#aesthetics-scales-1",
    "title": "Graphic Design with ggplot2",
    "section": "Aesthetics + Scales",
    "text": "Aesthetics + Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous() +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scales-4",
    "href": "materials/03_concepts_pt2.html#scales-4",
    "title": "Graphic Design with ggplot2",
    "section": "Scales",
    "text": "Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_continuous() +\n  scale_y_continuous() +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scales-5",
    "href": "materials/03_concepts_pt2.html#scales-5",
    "title": "Graphic Design with ggplot2",
    "section": "Scales",
    "text": "Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_continuous() +\n  scale_y_log10() +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scales-6",
    "href": "materials/03_concepts_pt2.html#scales-6",
    "title": "Graphic Design with ggplot2",
    "section": "Scales",
    "text": "Scales\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_continuous() +\n  scale_y_log10() +\n  scale_color_viridis_d()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    trans = \"log10\"\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-1",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-1",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    name = \"Reported bike shares\"\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-2",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-2",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = seq(0, 60000, by = 15000)\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-3",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-3",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-4",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-4",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = c(0, seq(5000, 30000, by = 2500), 40000, 50000)\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-5",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-5",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    name = \"Reported bike shares in thousands\",\n    breaks = 0:4*15000,\n    labels = 0:4*15\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-6",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-6",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    name = \"Reported bike shares in thousands\",\n    breaks = 0:4,\n    labels = paste(0:4*15000, \"bikes\")\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-7",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-7",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000,\n    limits = c(NA, 60000)\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-8",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-8",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000,\n    expand = c(0, 0)\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-9",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-9",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = -1:5*15000,\n    expand = c(.5, .5)\n  ) +\n  scale_color_discrete()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_continuous-10",
    "href": "materials/03_concepts_pt2.html#scale_xy_continuous-10",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_continuous`",
    "text": "`scale_x|y_continuous`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_y_continuous(\n    name = \"Reported bike shares\",\n    breaks = 0:4*15000,\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_date",
    "href": "materials/03_concepts_pt2.html#scale_xy_date",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_date`",
    "text": "`scale_x|y_date`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"3 months\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_date-1",
    "href": "materials/03_concepts_pt2.html#scale_xy_date-1",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_date`",
    "text": "`scale_x|y_date`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"20 weeks\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_date-with-strftime",
    "href": "materials/03_concepts_pt2.html#scale_xy_date-with-strftime",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_date` with `strftime()`",
    "text": "`scale_x|y_date` with `strftime()`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"4 months\",\n    date_labels = \"%Y/%m/%d\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_date-with-strftime-1",
    "href": "materials/03_concepts_pt2.html#scale_xy_date-with-strftime-1",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_date` with `strftime()`",
    "text": "`scale_x|y_date` with `strftime()`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count)\n  ) +\n  geom_point() +\n  scale_x_date(\n    name = NULL,\n    date_breaks = \"4 months\",\n    date_labels = \"%b '%y\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_discrete",
    "href": "materials/03_concepts_pt2.html#scale_xy_discrete",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_discrete`",
    "text": "`scale_x|y_discrete`\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete(\n    name = \"Period\",\n    labels = c(\"Dec-Feb\", \"Mar-May\", \"Jun-Aug\", \"Sep-Nov\")\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_xy_discrete-1",
    "href": "materials/03_concepts_pt2.html#scale_xy_discrete-1",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_x|y_discrete`",
    "text": "`scale_x|y_discrete`\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete(\n    name = \"Season\",\n    expand = c(.5, .5)\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#discrete-or-continuous",
    "href": "materials/03_concepts_pt2.html#discrete-or-continuous",
    "title": "Graphic Design with ggplot2",
    "section": "Discrete or Continuous?",
    "text": "Discrete or Continuous?\n\n\nggplot(\n    bikes,\n    aes(x = as.numeric(season), y = count)\n  ) +\n  geom_boxplot(\n    aes(group = season)\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#discrete-or-continuous-1",
    "href": "materials/03_concepts_pt2.html#discrete-or-continuous-1",
    "title": "Graphic Design with ggplot2",
    "section": "Discrete or Continuous?",
    "text": "Discrete or Continuous?\n\n\nggplot(\n    bikes,\n    aes(x = as.numeric(season),\n        y = count)\n  ) +\n  geom_boxplot(\n    aes(group = season)\n  ) +\n  scale_x_continuous(\n    name = \"Season\",\n    breaks = 1:4,\n    labels = levels(bikes$season)\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#discrete-or-continuous-2",
    "href": "materials/03_concepts_pt2.html#discrete-or-continuous-2",
    "title": "Graphic Design with ggplot2",
    "section": "Discrete or Continuous?",
    "text": "Discrete or Continuous?\n\n\nggplot(\n    bikes,\n    aes(x = as.numeric(season) + as.numeric(season) / 8,\n        y = count)\n  ) +\n  geom_boxplot(\n    aes(group = season)\n  ) +\n  scale_x_continuous(\n    name = \"Season\",\n    breaks = 1:4,\n    labels = levels(bikes$season)\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_colorfill_discrete",
    "href": "materials/03_concepts_pt2.html#scale_colorfill_discrete",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_color|fill_discrete`",
    "text": "`scale_color|fill_discrete`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = c(\"#69b0d4\", \"#00CB79\", \"#F7B01B\", \"#a78f5f\")\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#inspect-assigned-colors",
    "href": "materials/03_concepts_pt2.html#inspect-assigned-colors",
    "title": "Graphic Design with ggplot2",
    "section": "Inspect Assigned Colors",
    "text": "Inspect Assigned Colors\n\n\ng <- ggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = c(\"#3ca7d9\", \"#1ec99b\", \"#F7B01B\", \"#bb7e8f\")\n  )\n\ngb <- ggplot_build(g)\n\ngb$data[[1]][1:10,]\n\n\n    colour     x     y PANEL group shape size fill alpha stroke\n1  #3ca7d9 16439  6830     1     1    19  1.5   NA    NA    0.5\n2  #3ca7d9 16439  2404     1     1    19  1.5   NA    NA    0.5\n3  #3ca7d9 16440 14763     1     1    19  1.5   NA    NA    0.5\n4  #3ca7d9 16440  5609     1     1    19  1.5   NA    NA    0.5\n5  #3ca7d9 16441 14501     1     1    19  1.5   NA    NA    0.5\n6  #3ca7d9 16441  6112     1     1    19  1.5   NA    NA    0.5\n7  #3ca7d9 16442 16358     1     1    19  1.5   NA    NA    0.5\n8  #3ca7d9 16442  4706     1     1    19  1.5   NA    NA    0.5\n9  #3ca7d9 16443  9971     1     1    19  1.5   NA    NA    0.5\n10 #3ca7d9 16443  5630     1     1    19  1.5   NA    NA    0.5"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_colorfill_discrete-1",
    "href": "materials/03_concepts_pt2.html#scale_colorfill_discrete-1",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_color|fill_discrete`",
    "text": "`scale_color|fill_discrete`\n\n\nmy_colors <- c(\n  `winter` = \"#3c89d9\",\n  `spring` = \"#1ec99b\",\n  `summer` = \"#F7B01B\",\n  `autumn` = \"#a26e7c\"\n)\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = my_colors\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_colorfill_discrete-2",
    "href": "materials/03_concepts_pt2.html#scale_colorfill_discrete-2",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_color|fill_discrete`",
    "text": "`scale_color|fill_discrete`\n\n\nmy_colors_alphabetical <- c(\n  `autumn` = \"#a26e7c\",\n  `spring` = \"#1ec99b\",\n  `summer` = \"#F7B01B\",\n  `winter` = \"#3c89d9\"\n)\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = my_colors_alphabetical\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_colorfill_discrete-3",
    "href": "materials/03_concepts_pt2.html#scale_colorfill_discrete-3",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_color|fill_discrete`",
    "text": "`scale_color|fill_discrete`\n\n\nlibrary(RColorBrewer)\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_discrete(\n    name = \"Season:\",\n    type = brewer.pal(\n      n = 4, name = \"Dark2\"\n    )\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_colorfill_manual",
    "href": "materials/03_concepts_pt2.html#scale_colorfill_manual",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_color|fill_manual`",
    "text": "`scale_color|fill_manual`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = weather_type)\n  ) +\n  geom_point() +\n  scale_color_manual(\n    name = \"Season:\",\n    values = brewer.pal(n = 6, name = \"Pastel1\"),\n    na.value = \"black\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#scale_colorfill_carto_d",
    "href": "materials/03_concepts_pt2.html#scale_colorfill_carto_d",
    "title": "Graphic Design with ggplot2",
    "section": "`scale_color|fill_carto_d`",
    "text": "`scale_color|fill_carto_d`\n\n\nggplot(\n    bikes,\n    aes(x = date, y = count,\n        color = weather_type)\n  ) +\n  geom_point() +\n  rcartocolor::scale_color_carto_d(\n    name = \"Season:\",\n    palette = \"Pastel\",\n    na.value = \"black\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#your-turn-2",
    "href": "materials/03_concepts_pt2.html#your-turn-2",
    "title": "Graphic Design with ggplot2",
    "section": "Your Turn!",
    "text": "Your Turn!\n\n**Modify our dianmonds facet like this:"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet-2",
    "href": "materials/03_concepts_pt2.html#diamonds-facet-2",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet <-\n  ggplot(\n    diamonds,\n    aes(x = carat, y = price)\n  ) +\n  geom_point(\n    alpha = .3\n  ) +\n  geom_smooth(\n    aes(color = cut),\n    method = \"lm\",\n    se = FALSE\n  ) +\n  facet_grid(\n    cut ~ clarity,\n    space = \"free_x\",\n    scales = \"free_x\"\n  )\n\nfacet"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet-3",
    "href": "materials/03_concepts_pt2.html#diamonds-facet-3",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = c(\"$0\", \"$10,000\", \"$20,000\", \"$30,000\")\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet-4",
    "href": "materials/03_concepts_pt2.html#diamonds-facet-4",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = paste0(\n      \"$\", format(0:3*10000, big.mark = \",\")\n    )\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet-5",
    "href": "materials/03_concepts_pt2.html#diamonds-facet-5",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = function(y) paste0(\n      \"$\", format(y, big.mark=\",\")\n    )\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet-6",
    "href": "materials/03_concepts_pt2.html#diamonds-facet-6",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = scales::dollar_format()\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet-7",
    "href": "materials/03_concepts_pt2.html#diamonds-facet-7",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = scales::dollar_format()\n  ) +\n  scale_color_brewer(\n    palette = \"Set2\",\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#diamonds-facet-8",
    "href": "materials/03_concepts_pt2.html#diamonds-facet-8",
    "title": "Graphic Design with ggplot2",
    "section": "Diamonds Facet",
    "text": "Diamonds Facet\n\n\nfacet +\n  scale_x_continuous(\n    breaks = 0:5\n  ) +\n  scale_y_continuous(\n    limits = c(0, 30000),\n    breaks = 0:3*10000,\n    labels = scales::dollar_format()\n  ) +\n  scale_color_brewer(\n    palette = \"Set2\"\n  ) +\n  theme(\n    legend.position = \"none\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#coordinate-systems-1",
    "href": "materials/03_concepts_pt2.html#coordinate-systems-1",
    "title": "Graphic Design with ggplot2",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\n\n= interpret the position aesthetics\n\n\nlinear coordinate systems:preserve the geometrical shapes\n\ncoord_cartesian()\ncoord_fixed()\ncoord_flip()\n\nlinear coordinate systems:likely change the geometrical shapes\n\ncoord_polar()\ncoord_map() and coord_sf()\ncoord_trans()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#cartesian-coordinate-system",
    "href": "materials/03_concepts_pt2.html#cartesian-coordinate-system",
    "title": "Graphic Design with ggplot2",
    "section": "Cartesian Coordinate System",
    "text": "Cartesian Coordinate System\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#cartesian-coordinate-system-1",
    "href": "materials/03_concepts_pt2.html#cartesian-coordinate-system-1",
    "title": "Graphic Design with ggplot2",
    "section": "Cartesian Coordinate System",
    "text": "Cartesian Coordinate System\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian(\n    ylim = c(NA, 15000)\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#changing-limits",
    "href": "materials/03_concepts_pt2.html#changing-limits",
    "title": "Graphic Design with ggplot2",
    "section": "Changing Limits",
    "text": "Changing Limits\n\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian(\n    ylim = c(NA, 15000)\n  )\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_y_continuous(\n    limits = c(NA, 15000)\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#clipping",
    "href": "materials/03_concepts_pt2.html#clipping",
    "title": "Graphic Design with ggplot2",
    "section": "Clipping",
    "text": "Clipping\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  coord_cartesian(\n    ylim = c(NA, 15000),\n    clip = \"off\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#clipping-1",
    "href": "materials/03_concepts_pt2.html#clipping-1",
    "title": "Graphic Design with ggplot2",
    "section": "Clipping",
    "text": "Clipping\n\n\nggplot(\n    filter(bikes, is_holiday == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point() +\n  geom_text(\n    aes(label = season),\n    nudge_x = .3,\n    hjust = 0\n  ) +\n  coord_cartesian(\n    clip = \"off\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#or-better-use-ggrepel",
    "href": "materials/03_concepts_pt2.html#or-better-use-ggrepel",
    "title": "Graphic Design with ggplot2",
    "section": "… or better use {ggrepel}",
    "text": "… or better use {ggrepel}\n\n\nggplot(\n    filter(bikes, is_holiday == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point() +\n  ggrepel::geom_text_repel(\n    aes(label = season),\n    nudge_x = .3,\n    hjust = 0\n  ) +\n  coord_cartesian(\n    clip = \"off\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#remove-all-padding",
    "href": "materials/03_concepts_pt2.html#remove-all-padding",
    "title": "Graphic Design with ggplot2",
    "section": "Remove All Padding",
    "text": "Remove All Padding\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_point() +\n  coord_cartesian(\n    expand = FALSE,\n    clip = \"off\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#fixed-coordinate-system",
    "href": "materials/03_concepts_pt2.html#fixed-coordinate-system",
    "title": "Graphic Design with ggplot2",
    "section": "Fixed Coordinate System",
    "text": "Fixed Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = temp)\n  ) +\n  geom_point() +\n  coord_fixed()\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = temp)\n  ) +\n  geom_point() +\n  coord_fixed(ratio = 4)"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#flipped-coordinate-system",
    "href": "materials/03_concepts_pt2.html#flipped-coordinate-system",
    "title": "Graphic Design with ggplot2",
    "section": "Flipped Coordinate System",
    "text": "Flipped Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = weather_type)\n  ) +\n  geom_bar() +\n  coord_cartesian()\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = weather_type)\n  ) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#flipped-coordinate-system-1",
    "href": "materials/03_concepts_pt2.html#flipped-coordinate-system-1",
    "title": "Graphic Design with ggplot2",
    "section": "Flipped Coordinate System",
    "text": "Flipped Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(y = weather_type)\n  ) +\n  geom_bar() +\n  coord_cartesian()\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = weather_type)\n  ) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#reminder-sort-your-bars",
    "href": "materials/03_concepts_pt2.html#reminder-sort-your-bars",
    "title": "Graphic Design with ggplot2",
    "section": "Reminder: Sort Your Bars!",
    "text": "Reminder: Sort Your Bars!\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(y = fct_infreq(weather_type))\n  ) +\n  geom_bar()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#reminder-sort-your-bars-1",
    "href": "materials/03_concepts_pt2.html#reminder-sort-your-bars-1",
    "title": "Graphic Design with ggplot2",
    "section": "Reminder: Sort Your Bars!",
    "text": "Reminder: Sort Your Bars!\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(y = fct_rev(\n      fct_infreq(weather_type)\n    ))\n  ) +\n  geom_bar()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#circular-corrdinate-system",
    "href": "materials/03_concepts_pt2.html#circular-corrdinate-system",
    "title": "Graphic Design with ggplot2",
    "section": "Circular Corrdinate System",
    "text": "Circular Corrdinate System\n\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = weather_type,\n        fill = weather_type)\n  ) +\n  geom_bar() +\n  coord_polar()\n\n\n\n\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = weather_type,\n        fill = weather_type)\n  ) +\n  geom_bar() +\n  coord_cartesian()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#circular-corrdinate-system-1",
    "href": "materials/03_concepts_pt2.html#circular-corrdinate-system-1",
    "title": "Graphic Design with ggplot2",
    "section": "Circular Corrdinate System",
    "text": "Circular Corrdinate System\n\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = fct_infreq(weather_type),\n        fill = weather_type)\n  ) +\n  geom_bar(width = 1) +\n  coord_polar()\n\n\n\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = fct_infreq(weather_type),\n        fill = weather_type)\n  ) +\n  geom_bar(width = 1) +\n  coord_cartesian()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#circular-corrdinate-system-2",
    "href": "materials/03_concepts_pt2.html#circular-corrdinate-system-2",
    "title": "Graphic Design with ggplot2",
    "section": "Circular Corrdinate System",
    "text": "Circular Corrdinate System\n\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = fct_infreq(weather_type),\n        fill = weather_type)\n  ) +\n  geom_bar() +\n  coord_polar(theta = \"x\")\n\n\n\n\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = fct_infreq(weather_type),\n        fill = weather_type)\n  ) +\n  geom_bar() +\n  coord_polar(theta = \"y\")"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#circular-corrdinate-system-3",
    "href": "materials/03_concepts_pt2.html#circular-corrdinate-system-3",
    "title": "Graphic Design with ggplot2",
    "section": "Circular Corrdinate System",
    "text": "Circular Corrdinate System\n\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = 1,\n        fill = fct_rev(fct_infreq(weather_type)))\n  ) +\n  geom_bar(position = \"stack\") +\n  coord_polar(theta = \"y\")\n\n\n\n\n\n\nggplot(\n    filter(bikes, !is.na(weather_type)),\n    aes(x = 1,\n        fill = fct_rev(fct_infreq(weather_type)))\n  ) +\n  geom_bar(position = \"stack\") +\n  coord_cartesian()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#transform-a-coordinate-system",
    "href": "materials/03_concepts_pt2.html#transform-a-coordinate-system",
    "title": "Graphic Design with ggplot2",
    "section": "Transform a Coordinate System",
    "text": "Transform a Coordinate System\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count)\n  ) +\n  geom_point() +\n  coord_trans(y = \"log10\")"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#transform-a-coordinate-system-1",
    "href": "materials/03_concepts_pt2.html#transform-a-coordinate-system-1",
    "title": "Graphic Design with ggplot2",
    "section": "Transform a Coordinate System",
    "text": "Transform a Coordinate System\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        group = day_night)\n  ) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  coord_trans(y = \"log10\")\n\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = temp, y = count,\n        group = day_night)\n  ) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_y_log10()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#recap",
    "href": "materials/03_concepts_pt2.html#recap",
    "title": "Graphic Design with ggplot2",
    "section": "Recap",
    "text": "Recap\n\n\n\nfacet_*() functions allow to create small multiples\nscale_*() functions translate between aesthetics and properties\nuse *_continuous() for numerical data\n… and *_discrete() for categorical data\nuse scale_color|fill_*() to customize data-related colors\ncoord_*() functions interpret the positional aesthetics\n\ne.g. create polar plots or work with spatial projections\n\nbe careful when adjusting axis limits:\n\nscale_*_continuous(limits) removes the data outside the range\ncoord_*(*lim) keeps the data and zooms into the range"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#exercise-1",
    "href": "materials/03_concepts_pt2.html#exercise-1",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nHave a look at the following visualization of the cumulative time that cosmo- and astronauts have spent in outer space. The data also contains information on the year of their first and last travel, respectively.\nTogether with your group, discuss which layers and modifications are needed to create such a chart with {ggplot2}.\nNote down the aesthetics, geometries, and scales used for each element of this graphic.\nWhat is the coordinate system? Have any adjustments been made?\nWhich theme was used and how was it modified?\n\n\n\n\n\n10:00"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#section",
    "href": "materials/03_concepts_pt2.html#section",
    "title": "Graphic Design with ggplot2",
    "section": "",
    "text": "10:00"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#exercise-2",
    "href": "materials/03_concepts_pt2.html#exercise-2",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nOpen the script exercises/03_concepts_pt2_ex2.qmd.\nCreate a circular lollipop plot of reported bike shares per season.\nThe data is not in the right format as there are no totals.How can you solve it?\nRemove all legend elements (with a single line of code).\nHow can you add the labels next to the starting point of each lollipop?\nHow could you add a baseline?\n\n\n\n\n\n30:00"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#spatial-coordinate-reference-systems",
    "href": "materials/03_concepts_pt2.html#spatial-coordinate-reference-systems",
    "title": "Graphic Design with ggplot2",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\n\ncountries <- rnaturalearth::ne_countries(\n  returnclass = \"sf\"\n)\n\nggplot() +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    size = .3\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#spatial-coordinate-reference-systems-1",
    "href": "materials/03_concepts_pt2.html#spatial-coordinate-reference-systems-1",
    "title": "Graphic Design with ggplot2",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\n\nggplot() +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=moll\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#spatial-coordinate-reference-systems-2",
    "href": "materials/03_concepts_pt2.html#spatial-coordinate-reference-systems-2",
    "title": "Graphic Design with ggplot2",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\n\nggplot() +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=bonne +lat_1=10\"\n  )"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#spatial-coordinate-reference-systems-3",
    "href": "materials/03_concepts_pt2.html#spatial-coordinate-reference-systems-3",
    "title": "Graphic Design with ggplot2",
    "section": "Spatial Coordinate (Reference) Systems",
    "text": "Spatial Coordinate (Reference) Systems\n\n\noceans <- rnaturalearth::ne_download(\n  category = \"physical\", type = \"ocean\", returnclass = \"sf\"\n)\n\n\nOGR data source with driver: ESRI Shapefile \nSource: \"/private/var/folders/md/ms6zrv3d6rd4506k3hd7dt140000gn/T/RtmpXCJAmH\", layer: \"ne_110m_ocean\"\nwith 2 features\nIt has 3 fields\n\nggplot() +\n  geom_sf(\n    data = oceans,\n    fill = \"#d8f1f6\"\n  ) +\n  geom_sf(\n    data = countries,\n    color = \"#79dfbd\",\n    fill = \"#28a87d\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=bonne +lat_1=10\"\n  ) +\n  theme_void()"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#mapping-of-visual-properties",
    "href": "materials/03_concepts_pt2.html#mapping-of-visual-properties",
    "title": "Graphic Design with ggplot2",
    "section": "Mapping of Visual Properties",
    "text": "Mapping of Visual Properties\n\n\nggplot() +\n  geom_sf(\n    data = oceans,\n    fill = \"#d8f1f6\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = countries,\n    aes(fill = economy),\n    color = \"white\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=bonne +lat_1=10\"\n  ) +\n  scale_fill_viridis_d(option = \"magma\") +\n  theme_void() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "materials/03_concepts_pt2.html#better-borders",
    "href": "materials/03_concepts_pt2.html#better-borders",
    "title": "Graphic Design with ggplot2",
    "section": "Better Borders",
    "text": "Better Borders\n\n\nborders <- rmapshaper::ms_innerlines(countries)\n\nggplot() +\n  geom_sf(\n    data = oceans,\n    fill = \"#d8f1f6\",\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = countries,\n    aes(fill = economy),\n    color = \"transparent\"\n  ) +\n  geom_sf(\n    data = borders,\n    fill = \"transparent\",\n    color = \"white\",\n    size = .3\n  ) +\n  coord_sf(\n    crs = \"+proj=bonne +lat_1=10\"\n  ) +\n  scale_fill_viridis_d(option = \"magma\") +\n  theme_void() +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nCédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "materials/05_annotations.html#setup",
    "href": "materials/05_annotations.html#setup",
    "title": "Graphic Design with ggplot2",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\n#bikes$season <- factor(bikes$season, levels = c(\"spring\", \"summer\", \"autumn\", \"winter\"))\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Roboto Condensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  legend.position = \"top\"\n)"
  },
  {
    "objectID": "materials/05_annotations.html#working-with-labels",
    "href": "materials/05_annotations.html#working-with-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Working with Labels",
    "text": "Working with Labels\n\n\ng <- ggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season)\n  ) +\n  geom_point(\n    alpha = .5\n  ) +\n  labs(\n    x = \"Feels-like temperature (°F)\",\n    y = \"Reported bike shares\",\n    title = \"TfL bike sharing trends\",\n    subtitle = \"Reported bike rents versus feels-like temperature in London\",\n    caption = \"Data: TfL\",\n    color = \"Season:\",\n    tag = \"1.\"\n  )\n\ng"
  },
  {
    "objectID": "materials/05_annotations.html#customize-labels-via-theme",
    "href": "materials/05_annotations.html#customize-labels-via-theme",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "materials/05_annotations.html#customize-labels-via-theme-1",
    "href": "materials/05_annotations.html#customize-labels-via-theme-1",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"grey40\"\n  )\n)"
  },
  {
    "objectID": "materials/05_annotations.html#customize-labels-via-theme-2",
    "href": "materials/05_annotations.html#customize-labels-via-theme-2",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"grey40\",\n    family = \"Tabular\",\n    face = \"italic\",\n    hjust = 1,\n    vjust = 0,\n    angle = 45,\n    lineheight = 1.3, ## no effect here\n    margin = margin(10, 0, 20, 0)\n  )\n)"
  },
  {
    "objectID": "materials/05_annotations.html#customize-labels-via-theme-3",
    "href": "materials/05_annotations.html#customize-labels-via-theme-3",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"grey40\",\n    family = \"Tabular\",\n    face = \"italic\",\n    colour = NULL,\n    size = NULL,\n    hjust = 1,\n    vjust = 0,\n    angle = 45,\n    lineheight = 1.3, ## no effect here\n    margin = margin(10, 0, 20, 0) ## no effect here\n  ),\n  axis.text.x = element_text(\n    margin = margin(10, 0, 20, 0) ## trbl\n  )\n)"
  },
  {
    "objectID": "materials/05_annotations.html#customize-labels-via-theme-4",
    "href": "materials/05_annotations.html#customize-labels-via-theme-4",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"grey40\",\n    family = \"Tabular\",\n    face = \"italic\",\n    colour = NULL,\n    size = NULL,\n    hjust = 1,\n    vjust = 0,\n    angle = 45,\n    lineheight = 1.3, ## no effect here\n    margin = margin(10, 0, 20, 0) ## no effect here\n  ),\n  plot.tag = element_text(\n    margin = margin(0, 12, -8, 0) ## trbl\n  )\n)"
  },
  {
    "objectID": "materials/05_annotations.html#customize-labels-via-theme-5",
    "href": "materials/05_annotations.html#customize-labels-via-theme-5",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Labels via `theme()`",
    "text": "Customize Labels via `theme()`\n\n\ng + theme(\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\",\n  axis.text = element_text(\n    color = \"grey40\",\n    family = \"Tabular\",\n    face = \"italic\",\n    colour = NULL,\n    size = NULL,\n    hjust = 1,\n    vjust = 0,\n    angle = 45,\n    lineheight = 1.3, ## no effect here\n    margin = margin(10, 0, 20, 0), ## no effect here\n    debug = TRUE\n  ),\n  plot.tag = element_text(\n    margin = margin(0, 12, -8, 0), ## trbl\n    debug = TRUE\n  )\n)"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_",
    "href": "materials/05_annotations.html#format-labels-via-scale_",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng <- g + labs(title = NULL, subtitle = NULL, tag = NULL)\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_-1",
    "href": "materials/05_annotations.html#format-labels-via-scale_-1",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format()\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_-2",
    "href": "materials/05_annotations.html#format-labels-via-scale_-2",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format(\n      suffix = \" bikes\"\n    ),\n    name = NULL\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_-3",
    "href": "materials/05_annotations.html#format-labels-via-scale_-3",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format(\n      suffix = \"\\nbikes shared\"\n    ),\n    name = NULL\n  ) +\n  theme(\n    axis.text.y = element_text(\n      hjust = .5\n    )\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_-4",
    "href": "materials/05_annotations.html#format-labels-via-scale_-4",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = scales::comma_format(\n      scale = .001\n    ),\n    name = \"Reported bike shares in thousands\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_-5",
    "href": "materials/05_annotations.html#format-labels-via-scale_-5",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_y_continuous(\n    breaks = 0:4*15000,\n    labels = function(y) y / 1000,\n    name = \"Reported bike shares in thousands\",\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_-6",
    "href": "materials/05_annotations.html#format-labels-via-scale_-6",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_x_continuous(\n    labels = function(y) paste0(y, \"°F\"),\n    name = \"Feels-Like Temperature\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_-7",
    "href": "materials/05_annotations.html#format-labels-via-scale_-7",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete()"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_-8",
    "href": "materials/05_annotations.html#format-labels-via-scale_-8",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  geom_boxplot() +\n  scale_x_discrete(\n    name = NULL,\n    labels = stringr::str_to_title\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#format-labels-via-scale_-9",
    "href": "materials/05_annotations.html#format-labels-via-scale_-9",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels via `scale_*`",
    "text": "Format Labels via `scale_*`\n\n\ng +\n  scale_color_discrete(\n    name = NULL,\n    labels = stringr::str_to_title\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#styling-labels-with-ggtext",
    "href": "materials/05_annotations.html#styling-labels-with-ggtext",
    "title": "Graphic Design with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\ng +\n  ggtitle(\"**TfL bike sharing trends by _season_**\")"
  },
  {
    "objectID": "materials/05_annotations.html#styling-labels-with-ggtext-1",
    "href": "materials/05_annotations.html#styling-labels-with-ggtext-1",
    "title": "Graphic Design with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\n# install.packages(\"ggtext\")\n\ng +\n  ggtitle(\"**TfL bike sharing trends by _season_**\") +\n  theme(\n    plot.title = ggtext::element_markdown()\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#styling-labels-with-ggtext-2",
    "href": "materials/05_annotations.html#styling-labels-with-ggtext-2",
    "title": "Graphic Design with ggplot2",
    "section": "Styling Labels with {ggtext}",
    "text": "Styling Labels with {ggtext}\n\n\n# install.packages(\"ggtext\")\n\ng +\n  ggtitle(\"<b style='font-family:tabular;font-size:25pt'>TfL</b> bike sharing trends by <i style='color:#28a87d;'>season</i>\") +\n  theme(\n    plot.title = ggtext::element_markdown()\n  )\n\n\n\n\n\n\n\n<b style='font-family:tabular;font-size:25pt'>TfL</b> bike sharing trends by <i style='color:#28a87d;'>season</i>"
  },
  {
    "objectID": "materials/05_annotations.html#facet-labellers",
    "href": "materials/05_annotations.html#facet-labellers",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ng +\n  facet_wrap(\n    ~ day_night,\n    labeller = label_both\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#facet-labellers-1",
    "href": "materials/05_annotations.html#facet-labellers-1",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = label_both\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#facet-labellers-2",
    "href": "materials/05_annotations.html#facet-labellers-2",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = labeller(\n      day_night = stringr::str_to_title\n    )\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#facet-labellers-3",
    "href": "materials/05_annotations.html#facet-labellers-3",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ncodes <- c(\n  `TRUE` = \"Workday\",\n  `FALSE` = \"Weekend or Holiday\"\n)\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = labeller(\n      day_night = stringr::str_to_title,\n      is_workday = codes\n    )\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#facet-labellers-4",
    "href": "materials/05_annotations.html#facet-labellers-4",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Labellers",
    "text": "Facet Labellers\n\n\ncodes <- c(\n  `TRUE` = \"Workday\",\n  `FALSE` = \"Weekend or Holiday\"\n)\n\ng +\n  facet_wrap(\n    ~ is_workday + day_night,\n    labeller = labeller(\n      .default = stringr::str_to_title,\n      is_workday = codes\n    )\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#facet-labeller",
    "href": "materials/05_annotations.html#facet-labeller",
    "title": "Graphic Design with ggplot2",
    "section": "Facet Labeller",
    "text": "Facet Labeller\n\n\ng +\n  facet_grid(\n    day_night ~ is_workday,\n    scales = \"free\",\n    space = \"free\",\n    labeller = labeller(\n      day_night = stringr::str_to_title,\n      is_workday = codes\n    )\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#handling-long-labels-with-stringr",
    "href": "materials/05_annotations.html#handling-long-labels-with-stringr",
    "title": "Graphic Design with ggplot2",
    "section": "Handling Long Labels with {stringr}",
    "text": "Handling Long Labels with {stringr}\n\n\nggplot(\n    bikes,\n    aes(x = weather_type,\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/05_annotations.html#handling-long-labels-with-stringr-1",
    "href": "materials/05_annotations.html#handling-long-labels-with-stringr-1",
    "title": "Graphic Design with ggplot2",
    "section": "Handling Long Labels with {stringr}",
    "text": "Handling Long Labels with {stringr}\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/05_annotations.html#handling-long-labels-with-ggtext",
    "href": "materials/05_annotations.html#handling-long-labels-with-ggtext",
    "title": "Graphic Design with ggplot2",
    "section": "Handling Long Labels with {ggtext}",
    "text": "Handling Long Labels with {ggtext}\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = element_text(size = 20),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#handling-long-labels-1",
    "href": "materials/05_annotations.html#handling-long-labels-1",
    "title": "Graphic Design with ggplot2",
    "section": "Handling Long Labels",
    "text": "Handling Long Labels\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title =\n      ggtext::element_textbox_simple(size = 20),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#handling-long-labels-2",
    "href": "materials/05_annotations.html#handling-long-labels-2",
    "title": "Graphic Design with ggplot2",
    "section": "Handling Long Labels",
    "text": "Handling Long Labels\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = ggtext::element_textbox_simple(\n      margin = margin(t = 12, b = 12),\n      lineheight = .9\n    ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#handling-long-labels-3",
    "href": "materials/05_annotations.html#handling-long-labels-3",
    "title": "Graphic Design with ggplot2",
    "section": "Handling Long Labels",
    "text": "Handling Long Labels\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = ggtext::element_textbox_simple(\n      margin = margin(t = 12, b = 12),\n      fill = \"grey90\",\n      lineheight = .9\n    ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#handling-long-labels-4",
    "href": "materials/05_annotations.html#handling-long-labels-4",
    "title": "Graphic Design with ggplot2",
    "section": "Handling Long Labels",
    "text": "Handling Long Labels\n\n\ng +\n  ggtitle(\"TfL bike sharing trends in 2015 and 2016 by season for day and night periods\") +\n  theme(\n    plot.title = ggtext::element_textbox_simple(\n      margin = margin(t = 12, b = 12),\n      padding = margin(rep(12, 4)),\n      fill = \"grey90\",\n      box.color = \"grey40\",\n      r = unit(9, \"pt\"),\n      halign = .5,\n      face = \"bold\",\n      lineheight = .9\n    ),\n    plot.title.position = \"plot\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#add-single-text-annotations",
    "href": "materials/05_annotations.html#add-single-text-annotations",
    "title": "Graphic Design with ggplot2",
    "section": "Add Single Text Annotations",
    "text": "Add Single Text Annotations\n\n\nggplot(bikes, aes(humidity, temp)) +\n  geom_point(size = 2, color = \"grey\") +\n  annotate(\n    geom = \"text\",\n    x = 90,\n    y = 27.5,\n    label = \"Some\\nadditional\\ntext\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#style-text-annotations",
    "href": "materials/05_annotations.html#style-text-annotations",
    "title": "Graphic Design with ggplot2",
    "section": "Style Text Annotations",
    "text": "Style Text Annotations\n\n\nggplot(bikes, aes(humidity, temp)) +\n  geom_point(size = 2, color = \"grey\") +\n  annotate(\n    geom = \"text\",\n    x = 90,\n    y = 27.5,\n    label = \"Some\\nadditional\\ntext\",\n    size = 6,\n    color = \"firebrick\",\n    fontface = \"bold\",\n    lineheight = .9\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#add-multiple-text-annotations",
    "href": "materials/05_annotations.html#add-multiple-text-annotations",
    "title": "Graphic Design with ggplot2",
    "section": "Add Multiple Text Annotations",
    "text": "Add Multiple Text Annotations\n\n\nggplot(bikes, aes(humidity, temp)) +\n  geom_point(size = 2, color = \"grey\") +\n  annotate(\n    geom = \"text\",\n    x = c(90, 50),\n    y = c(27.5, 3.5),\n    label = c(\"Text A\", \"Text B\"),\n    color = c(\"black\", \"firebrick\"),\n    size = c(5, 10),\n    fontface = c(\"plain\", \"bold\")\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#add-boxes-rectangles",
    "href": "materials/05_annotations.html#add-boxes-rectangles",
    "title": "Graphic Design with ggplot2",
    "section": "Add Boxes (Rectangles)",
    "text": "Add Boxes (Rectangles)\n\n\nggplot(bikes, aes(humidity, temp)) +\n  geom_point(size = 2, color = \"grey\") +\n  annotate(\n    geom = \"rect\",\n    xmin = -Inf,\n    xmax = 60,\n    ymin = 20,\n    ymax = Inf,\n    fill = \"#663399\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#add-boxes-rectangles-1",
    "href": "materials/05_annotations.html#add-boxes-rectangles-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Boxes (Rectangles)",
    "text": "Add Boxes (Rectangles)\n\n\nggplot(bikes, aes(humidity, temp)) +\n  annotate(\n    geom = \"rect\",\n    xmin = -Inf,\n    xmax = 60,\n    ymin = 20,\n    ymax = Inf,\n    fill = \"#663399\"\n  ) +\n  geom_point(size = 2, color = \"grey\")"
  },
  {
    "objectID": "materials/05_annotations.html#add-lines-segments",
    "href": "materials/05_annotations.html#add-lines-segments",
    "title": "Graphic Design with ggplot2",
    "section": "Add Lines (Segments)",
    "text": "Add Lines (Segments)\n\n\nggplot(bikes, aes(humidity, temp)) +\n  geom_point(size = 2, color = \"grey\") +\n  annotate(\n    geom = \"text\",\n    x = 90,\n    y = 27.5,\n    label = \"Some\\nadditional\\ntext\",\n    size = 6,\n    lineheight = .9\n  ) +\n  annotate(\n    geom = \"segment\",\n    x = 90, xend = 82,\n    y = 25, yend = 18.5\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#add-curves",
    "href": "materials/05_annotations.html#add-curves",
    "title": "Graphic Design with ggplot2",
    "section": "Add Curves",
    "text": "Add Curves\n\n\nggplot(bikes, aes(humidity, temp)) +\n  geom_point(size = 2, color = \"grey\") +\n  annotate(\n    geom = \"text\",\n    x = 90,\n    y = 27.5,\n    label = \"Some\\nadditional\\ntext\",\n    size = 6,\n    lineheight = .9\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 90, xend = 82,\n    y = 25, yend = 18.5\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#add-arrows",
    "href": "materials/05_annotations.html#add-arrows",
    "title": "Graphic Design with ggplot2",
    "section": "Add Arrows",
    "text": "Add Arrows\n\n\nggplot(bikes, aes(humidity, temp)) +\n  geom_point(size = 2, color = \"grey\") +\n  annotate(\n    geom = \"text\",\n    x = 90,\n    y = 27.5,\n    label = \"Some\\nadditional\\ntext\",\n    size = 6,\n    lineheight = .9\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 90, xend = 82,\n    y = 25, yend = 18.5,\n    curvature = -.3,\n    arrow = arrow()\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#add-arrows-1",
    "href": "materials/05_annotations.html#add-arrows-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Arrows",
    "text": "Add Arrows\n\n\nggplot(bikes, aes(humidity, temp)) +\n  geom_point(size = 2, color = \"grey\") +\n  annotate(\n    geom = \"text\",\n    x = 90,\n    y = 27.5,\n    label = \"Some\\nadditional\\ntext\",\n    size = 6,\n    lineheight = .9\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 90, xend = 82,\n    y = 25, yend = 18.5,\n    curvature = -.3,\n    arrow = arrow(\n      length = unit(10, \"pt\"),\n      type = \"closed\",\n      ends = \"both\"\n    )\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#add-arrows-2",
    "href": "materials/05_annotations.html#add-arrows-2",
    "title": "Graphic Design with ggplot2",
    "section": "Add Arrows",
    "text": "Add Arrows\n\n\nggplot(bikes, aes(humidity, temp)) +\n  geom_point(size = 2, color = \"grey\") +\n  annotate(\n    geom = \"text\",\n    x = 90,\n    y = 27.5,\n    label = \"Some\\nadditional\\ntext\",\n    size = 6,\n    lineheight = .9\n  ) +\n  annotate(\n    geom = \"curve\",\n    x = 94, xend = 82,\n    y = 26, yend = 18.5,\n    curvature = -.8,\n    angle = 140,\n    arrow = arrow(\n      length = unit(10, \"pt\"),\n      type = \"closed\"\n    )\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#highlight-hot-periods",
    "href": "materials/05_annotations.html#highlight-hot-periods",
    "title": "Graphic Design with ggplot2",
    "section": "Highlight Hot Periods",
    "text": "Highlight Hot Periods\n\n\ng <- ggplot(\n    filter(bikes, temp >= 27),\n    aes(x = humidity, y = temp)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5)"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-geom_text",
    "href": "materials/05_annotations.html#annotations-with-geom_text",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with `geom_text()`",
    "text": "Annotations with `geom_text()`\n\n\nggplot(\n    filter(bikes, temp >= 27),\n    aes(x = humidity, y = temp)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5) +\n  geom_text(\n    aes(label = season),\n    nudge_x = .3,\n    hjust = 0\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-geom_label",
    "href": "materials/05_annotations.html#annotations-with-geom_label",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with `geom_label()`",
    "text": "Annotations with `geom_label()`\n\n\nggplot(\n    filter(bikes, temp >= 27),\n    aes(x = humidity, y = temp)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5) +\n  geom_label(\n    aes(label = season),\n    nudge_x = .3,\n    hjust = 0\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggrepel",
    "href": "materials/05_annotations.html#annotations-with-ggrepel",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\nggplot(\n    filter(bikes, temp >= 27),\n    aes(x = humidity, y = temp)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5) +\n  ggrepel::geom_text_repel(\n    aes(label = season)\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggrepel-1",
    "href": "materials/05_annotations.html#annotations-with-ggrepel-1",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\nggplot(\n    filter(bikes, temp >= 27),\n    aes(x = humidity, y = temp,\n        color = season == \"summer\")\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5) +\n  ggrepel::geom_text_repel(\n    aes(label = str_to_title(season))\n  ) +\n  scale_color_manual(\n    values = c(\"firebrick\", \"black\"),\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggrepel-2",
    "href": "materials/05_annotations.html#annotations-with-ggrepel-2",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\nggplot(\n    filter(bikes, temp >= 27),\n    aes(x = humidity, y = temp,\n        color = season == \"summer\")\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5) +\n  ggrepel::geom_text_repel(\n    aes(label = str_to_title(season)),\n    ## space between points + labels\n    box.padding = .4,\n    ## always draw segments\n    min.segment.length = 0\n  ) +\n  scale_color_manual(\n    values = c(\"firebrick\", \"black\"),\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggrepel-3",
    "href": "materials/05_annotations.html#annotations-with-ggrepel-3",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\nggplot(\n    filter(bikes, temp >= 27),\n    aes(x = humidity, y = temp,\n        color = season == \"summer\")\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5) +\n  ggrepel::geom_text_repel(\n    aes(label = str_to_title(season)),\n    ## force to the right\n    xlim = c(NA, 35), hjust = 1\n  ) +\n  scale_color_manual(\n    values = c(\"firebrick\", \"black\"),\n    guide = \"none\"\n  ) +\n  xlim(25, NA)"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggrepel-4",
    "href": "materials/05_annotations.html#annotations-with-ggrepel-4",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\nggplot(\n    filter(bikes, temp >= 27),\n    aes(x = humidity, y = temp,\n        color = season == \"summer\")\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5) +\n  ggrepel::geom_text_repel(\n    aes(label = str_to_title(season)),\n    ## force to the right\n    xlim = c(NA, 35),\n    ## style segment\n    segment.curvature = .01,\n    arrow = arrow(length = unit(.02, \"npc\"), type = \"closed\")\n  ) +\n  scale_color_manual(\n    values = c(\"firebrick\", \"black\"),\n    guide = \"none\"\n  ) +\n  xlim(25, NA)"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggrepel-5",
    "href": "materials/05_annotations.html#annotations-with-ggrepel-5",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggrepel}",
    "text": "Annotations with {ggrepel}\n\n\nggplot(\n    filter(bikes, temp >= 27),\n    aes(x = humidity, y = temp,\n        color = season == \"summer\")\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point(size = 2.5) +\n  ggrepel::geom_text_repel(\n    aes(label = str_to_title(season)),\n    ## force to the right\n    xlim = c(NA, 35),\n    ## style segment\n    segment.curvature = .001,\n    segment.inflect = TRUE\n  ) +\n  scale_color_manual(\n    values = c(\"firebrick\", \"black\"),\n    guide = \"none\"\n  ) +\n  xlim(25, NA)"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggforce",
    "href": "materials/05_annotations.html#annotations-with-ggforce",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\nggplot(\n    filter(bikes, temp > 20 & season != \"summer\"),\n    aes(x = humidity, y = temp,\n        color = season)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point() +\n  scale_color_brewer(\n    palette = \"Dark2\",\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggforce-1",
    "href": "materials/05_annotations.html#annotations-with-ggforce-1",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\nggplot(\n    filter(bikes, temp > 20 & season != \"summer\"),\n    aes(x = humidity, y = temp,\n        color = season)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point() +\n  ggforce::geom_mark_rect(\n    aes(label = str_to_title(season))\n  ) +\n  scale_color_brewer(\n    palette = \"Dark2\",\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggforce-2",
    "href": "materials/05_annotations.html#annotations-with-ggforce-2",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\nggplot(\n    filter(bikes, temp > 20 & season != \"summer\"),\n    aes(x = humidity, y = temp,\n        color = season)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point() +\n  ggforce::geom_mark_rect(\n    aes(label = str_to_title(season))\n  ) +\n  scale_color_brewer(\n    palette = \"Dark2\",\n    guide = \"none\"\n  ) +\n  ylim(NA, 35)"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggforce-3",
    "href": "materials/05_annotations.html#annotations-with-ggforce-3",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\nggplot(\n    filter(bikes, temp > 20 & season != \"summer\"),\n    aes(x = humidity, y = temp,\n        color = season)\n  ) +\n  geom_point(\n    data = bikes,\n    color = \"grey65\", alpha = .3\n  ) +\n  geom_point() +\n  ggforce::geom_mark_rect(\n    aes(label = str_to_title(season)),\n    expand = unit(5, \"pt\"),\n    radius = unit(0, \"pt\"),\n    con.cap = unit(0, \"pt\"),\n    label.buffer = unit(15, \"pt\"),\n    con.type = \"straight\",\n    label.fill = \"transparent\"\n  ) +\n  scale_color_brewer(\n    palette = \"Dark2\",\n    guide = \"none\"\n  ) +\n  ylim(NA, 35)"
  },
  {
    "objectID": "materials/05_annotations.html#annotations-with-ggforce-4",
    "href": "materials/05_annotations.html#annotations-with-ggforce-4",
    "title": "Graphic Design with ggplot2",
    "section": "Annotations with {ggforce}",
    "text": "Annotations with {ggforce}\n\n\nggplot(\n    bikes,\n    aes(x = humidity, y = temp,\n        color = season == \"summer\")\n  ) +\n  geom_point(alpha = .4) +\n  ggforce::geom_mark_hull(\n    aes(label = str_to_title(season),\n        filter = season == \"summer\",\n        description = \"June to August\"),\n    expand = unit(10, \"pt\")\n  ) +\n  scale_color_manual(\n    values = c(\"grey65\", \"firebrick\"),\n    guide = \"none\"\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#load-and-modify-image",
    "href": "materials/05_annotations.html#load-and-modify-image",
    "title": "Graphic Design with ggplot2",
    "section": "Load and Modify Image",
    "text": "Load and Modify Image\n\nurl <- \"https://d33wubrfki0l68.cloudfront.net/dbb07b06a7b3fe056db386fef0b158cc2fd33cb9/8b491/assets/img/2022conf/logo-rstudio-conf.png\"\nimg <- magick::image_read(url)\nimg <- magick::image_negate(img)\n\nimg"
  },
  {
    "objectID": "materials/05_annotations.html#add-background-image",
    "href": "materials/05_annotations.html#add-background-image",
    "title": "Graphic Design with ggplot2",
    "section": "Add Background Image",
    "text": "Add Background Image\n\n\nggplot(bikes, aes(date, temp_feel)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = img\n    )\n  ) +\n  geom_point(color = \"#71a5d4\")"
  },
  {
    "objectID": "materials/05_annotations.html#adjust-position",
    "href": "materials/05_annotations.html#adjust-position",
    "title": "Graphic Design with ggplot2",
    "section": "Adjust Position",
    "text": "Adjust Position\n\n\nggplot(bikes, aes(date, temp_feel)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = img,\n      x = .5,\n      y = .9,\n      width = .9\n    )\n  ) +\n  geom_point(color = \"#71a5d4\") +\n  ylim(NA, 37)"
  },
  {
    "objectID": "materials/05_annotations.html#place-image-outside",
    "href": "materials/05_annotations.html#place-image-outside",
    "title": "Graphic Design with ggplot2",
    "section": "Place Image Outside",
    "text": "Place Image Outside\n\n\nggplot(bikes, aes(date, temp_feel)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = img,\n      x = .47,\n      y = 1.15,\n      width = .9\n    )\n  ) +\n  geom_point(color = \"#71a5d4\") +\n  coord_cartesian(clip = \"off\") +\n  theme(\n    plot.margin = margin(90, 10, 10, 10)\n  )"
  },
  {
    "objectID": "materials/05_annotations.html#recap",
    "href": "materials/05_annotations.html#recap",
    "title": "Graphic Design with ggplot2",
    "section": "Recap",
    "text": "Recap\n\n\n\nstyle labels such as title, axis and legend texts with theme()\nformat data-related labels with the labels argument of scale_*()\nadjust strip text with the facet_*(labeller) functionality\nadd data-related annotations with geom_text|label()\n… and data-unrelated annotations with annotate()\nannotation_custom(rasterGrob()) is a basic way to add images\n{ggtext} allows to render labels with markdown and basic html\n{ggtext} also allows to add dynamic linebreaks and images\n{ggrepel} ensures clever placement of annotations\nggforce::geom_mark_*() provide a set of advanced annotations"
  },
  {
    "objectID": "materials/05_annotations.html#exercise-1",
    "href": "materials/05_annotations.html#exercise-1",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\n{ggtext} also comes with some new geom’s. Explore those and other options on the package webpage: wilkelab.rg/ggtext.\nCreate the following visualization, as close as possible, with the penguins dataset which is provided by the {palmerpenguins} package.\n\nFor the species labels, you likely have to create a summary data set.\nUse the {ggtext} geometries and theme elements to format the labels.\nAlso, make use of the other components such as scales, original theme, and theme customization."
  },
  {
    "objectID": "materials/05_annotations.html#exercise-2",
    "href": "materials/05_annotations.html#exercise-2",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate this logo with the image file exercises/rstudioconf-washington-bg.png:\n\n\n\n\n\n\n\n10:00\n\n\n\n\n\nCédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "materials/06_colors.html#setup",
    "href": "materials/06_colors.html#setup",
    "title": "Graphic Design with ggplot2",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\nlibrary(tidyverse)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"), \n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Roboto Condensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  legend.position = \"top\",\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "materials/06_colors.html#pre-defined-color-palettes-viridis",
    "href": "materials/06_colors.html#pre-defined-color-palettes-viridis",
    "title": "Graphic Design with ggplot2",
    "section": "Pre-Defined Color Palettes: Viridis",
    "text": "Pre-Defined Color Palettes: Viridis\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_viridis_d(\n    option = \"plasma\",\n    begin = .3\n  )"
  },
  {
    "objectID": "materials/06_colors.html#pre-defined-color-palettes-viridis-1",
    "href": "materials/06_colors.html#pre-defined-color-palettes-viridis-1",
    "title": "Graphic Design with ggplot2",
    "section": "Pre-Defined Color Palettes: Viridis",
    "text": "Pre-Defined Color Palettes: Viridis\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = month)\n  ) +\n  geom_boxplot() +\n  scale_fill_viridis_d(\n    option = \"plasma\",\n    begin = .3\n  )"
  },
  {
    "objectID": "materials/06_colors.html#pre-defined-color-palettes-viridis-2",
    "href": "materials/06_colors.html#pre-defined-color-palettes-viridis-2",
    "title": "Graphic Design with ggplot2",
    "section": "Pre-Defined Color Palettes: Viridis",
    "text": "Pre-Defined Color Palettes: Viridis\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    option = \"plasma\",\n    end = .9\n  )"
  },
  {
    "objectID": "materials/06_colors.html#pre-defined-color-palettes-viridis-3",
    "href": "materials/06_colors.html#pre-defined-color-palettes-viridis-3",
    "title": "Graphic Design with ggplot2",
    "section": "Pre-Defined Color Palettes: Viridis",
    "text": "Pre-Defined Color Palettes: Viridis\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    option = \"plasma\",\n    end = .9,\n    direction = -1\n  )"
  },
  {
    "objectID": "materials/06_colors.html#pre-defined-color-palettes-brewer",
    "href": "materials/06_colors.html#pre-defined-color-palettes-brewer",
    "title": "Graphic Design with ggplot2",
    "section": "Pre-Defined Color Palettes: Brewer",
    "text": "Pre-Defined Color Palettes: Brewer\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_brewer(\n    palette = \"Set1\"\n  )"
  },
  {
    "objectID": "materials/06_colors.html#pre-defined-color-palettes-brewer-1",
    "href": "materials/06_colors.html#pre-defined-color-palettes-brewer-1",
    "title": "Graphic Design with ggplot2",
    "section": "Pre-Defined Color Palettes: Brewer",
    "text": "Pre-Defined Color Palettes: Brewer\n\nRColorBrewer::display.brewer.all()"
  },
  {
    "objectID": "materials/06_colors.html#pre-defined-color-palettes-brewer-2",
    "href": "materials/06_colors.html#pre-defined-color-palettes-brewer-2",
    "title": "Graphic Design with ggplot2",
    "section": "Pre-Defined Color Palettes: Brewer",
    "text": "Pre-Defined Color Palettes: Brewer\n\nRColorBrewer::display.brewer.all(colorblindFriendly = TRUE)"
  },
  {
    "objectID": "materials/06_colors.html#rcartocolor",
    "href": "materials/06_colors.html#rcartocolor",
    "title": "Graphic Design with ggplot2",
    "section": "{rcartocolor}",
    "text": "{rcartocolor}\n\n\n# install.packages(\"rcartocolor\")\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  rcartocolor::scale_fill_carto_d(\n    name = \"Vivid\" \n  )"
  },
  {
    "objectID": "materials/06_colors.html#rcartocolor-1",
    "href": "materials/06_colors.html#rcartocolor-1",
    "title": "Graphic Design with ggplot2",
    "section": "{rcartocolor}",
    "text": "{rcartocolor}\n\nrcartocolor::display_carto_all()"
  },
  {
    "objectID": "materials/06_colors.html#rcartocolor-2",
    "href": "materials/06_colors.html#rcartocolor-2",
    "title": "Graphic Design with ggplot2",
    "section": "{rcartocolor}",
    "text": "{rcartocolor}\n\nrcartocolor::display_carto_all(colorblind_friendly = TRUE)"
  },
  {
    "objectID": "materials/06_colors.html#scico",
    "href": "materials/06_colors.html#scico",
    "title": "Graphic Design with ggplot2",
    "section": "{scico}",
    "text": "{scico}\n\n\n# install.packages(\"scico\")\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scico::scale_fill_scico_d(\n    palette = \"hawaii\"\n  )"
  },
  {
    "objectID": "materials/06_colors.html#scico-1",
    "href": "materials/06_colors.html#scico-1",
    "title": "Graphic Design with ggplot2",
    "section": "{scico}",
    "text": "{scico}\n\nscico::scico_palette_show()"
  },
  {
    "objectID": "materials/06_colors.html#ggsci-and-ggthemes",
    "href": "materials/06_colors.html#ggsci-and-ggthemes",
    "title": "Graphic Design with ggplot2",
    "section": "{ggsci} and {ggthemes}",
    "text": "{ggsci} and {ggthemes}\n\n\n\n# install.packages(\"ggsci\")\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  ggsci::scale_fill_npg()\n\n\n\n\n\n# install.packages(\"ggthemes\")\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  ggthemes::scale_fill_gdocs()"
  },
  {
    "objectID": "materials/06_colors.html#nord",
    "href": "materials/06_colors.html#nord",
    "title": "Graphic Design with ggplot2",
    "section": "{nord}",
    "text": "{nord}\n\n\n# install.packages(\"nord\")\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  nord::scale_fill_nord(\n    palette = \"aurora\"\n  )"
  },
  {
    "objectID": "materials/06_colors.html#nord-1",
    "href": "materials/06_colors.html#nord-1",
    "title": "Graphic Design with ggplot2",
    "section": "{nord}",
    "text": "{nord}\n\n\n# install.packages(\"nord\")\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  nord::scale_color_nord(\n    palette = \"silver_mine\",\n    discrete = FALSE\n  )"
  },
  {
    "objectID": "materials/06_colors.html#metbrewer",
    "href": "materials/06_colors.html#metbrewer",
    "title": "Graphic Design with ggplot2",
    "section": "{MetBrewer}",
    "text": "{MetBrewer}\n\n\n# install.packages(\"MetBrewer\")\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  MetBrewer::scale_fill_met_d(\n    name = \"Klimt\"\n  )"
  },
  {
    "objectID": "materials/06_colors.html#metbrewer-1",
    "href": "materials/06_colors.html#metbrewer-1",
    "title": "Graphic Design with ggplot2",
    "section": "{MetBrewer}",
    "text": "{MetBrewer}\n\nMetBrewer::display_all()"
  },
  {
    "objectID": "materials/06_colors.html#metbrewer-2",
    "href": "materials/06_colors.html#metbrewer-2",
    "title": "Graphic Design with ggplot2",
    "section": "{MetBrewer}",
    "text": "{MetBrewer}\n\nMetBrewer::display_all(colorblind_only = TRUE)"
  },
  {
    "objectID": "materials/06_colors.html#metbrewer-3",
    "href": "materials/06_colors.html#metbrewer-3",
    "title": "Graphic Design with ggplot2",
    "section": "{MetBrewer}",
    "text": "{MetBrewer}\n\n\n# install.packages(\"MetBrewer\")\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  MetBrewer::scale_color_met_c(\n    name = \"Hiroshige\" \n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes",
    "href": "materials/06_colors.html#customize-existing-palettes",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nlibrary(\"rcartocolor\")\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  rcartocolor::scale_fill_carto_d(\n    name = \"Vivid\" \n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-1",
    "href": "materials/06_colors.html#customize-existing-palettes-1",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nlibrary(\"rcartocolor\")\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_pal(\n      name = \"Vivid\", n = 4\n    )\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-2",
    "href": "materials/06_colors.html#customize-existing-palettes-2",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nlibrary(\"rcartocolor\")\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_pal(\n      name = \"Vivid\", n = 5\n    )[1:4]\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-3",
    "href": "materials/06_colors.html#customize-existing-palettes-3",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nlibrary(\"rcartocolor\")\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_pal(\n      name = \"Vivid\", n = 6\n    )[c(1, 3:5)]\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-4",
    "href": "materials/06_colors.html#customize-existing-palettes-4",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nlibrary(\"rcartocolor\")\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_pal(\n      name = \"Vivid\", n = 6\n    )[c(1, 3:5)]\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-5",
    "href": "materials/06_colors.html#customize-existing-palettes-5",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\ncarto_custom <- \n  carto_pal(\n    name = \"Vivid\", n = 6\n  )[c(1, 3:5)]\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-6",
    "href": "materials/06_colors.html#customize-existing-palettes-6",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\n# install.packages(\"colorspace\")\nlibrary(colorspace)\n\ncarto_light <- lighten(carto_custom, .8)\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_light\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-7",
    "href": "materials/06_colors.html#customize-existing-palettes-7",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(fill = season,\n        fill = after_scale(\n          lighten(fill, .8)\n        ))\n  ) +\n  scale_fill_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-8",
    "href": "materials/06_colors.html#customize-existing-palettes-8",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(\n      fill = stage(\n        season,\n        after_scale =\n          lighten(fill, .8)\n      )\n    )\n  ) +\n  scale_fill_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-9",
    "href": "materials/06_colors.html#customize-existing-palettes-9",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          lighten(color, .8)\n        ))\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-10",
    "href": "materials/06_colors.html#customize-existing-palettes-10",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          lighten(color, .8)\n        ))\n  ) +\n  geom_jitter(\n    aes(color = season), \n    position = position_jitterdodge(\n      dodge.width = .75, \n      jitter.width = .2\n    ),\n    alpha = .4\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-11",
    "href": "materials/06_colors.html#customize-existing-palettes-11",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          lighten(color, .8)\n        ))\n  ) +\n  geom_jitter(\n    aes(color = season,\n        color = after_scale(\n          darken(color, .3)\n        )), \n    position = position_jitterdodge(\n      dodge.width = .75, \n      jitter.width = .2\n    ),\n    alpha = .4\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/06_colors.html#customize-existing-palettes-12",
    "href": "materials/06_colors.html#customize-existing-palettes-12",
    "title": "Graphic Design with ggplot2",
    "section": "Customize Existing Palettes",
    "text": "Customize Existing Palettes\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count)\n  ) +\n  geom_boxplot(\n    aes(color = season,\n        fill = after_scale(\n          lighten(color, .8)\n        ))\n  ) +\n  geom_jitter(\n    aes(color = season,\n        color = after_scale(\n          darken(color, .3)\n        )), \n    position = position_jitterdodge(\n      dodge.width = .75, \n      jitter.width = .2\n    ),\n    alpha = .4\n  ) +\n  scale_color_manual(\n    values = carto_custom\n  )"
  },
  {
    "objectID": "materials/06_colors.html#create-sequential-palettes",
    "href": "materials/06_colors.html#create-sequential-palettes",
    "title": "Graphic Design with ggplot2",
    "section": "Create Sequential Palettes",
    "text": "Create Sequential Palettes\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradient(\n    low = \"#28A87D\",\n    high = \"#FFD166\"\n  )"
  },
  {
    "objectID": "materials/06_colors.html#create-diverging-palettes",
    "href": "materials/06_colors.html#create-diverging-palettes",
    "title": "Graphic Design with ggplot2",
    "section": "Create Diverging Palettes",
    "text": "Create Diverging Palettes\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradient2(\n    low = \"#663399\",\n    high = \"#993334\",\n    mid = \"grey95\"\n  )"
  },
  {
    "objectID": "materials/06_colors.html#create-diverging-palettes-1",
    "href": "materials/06_colors.html#create-diverging-palettes-1",
    "title": "Graphic Design with ggplot2",
    "section": "Create Diverging Palettes",
    "text": "Create Diverging Palettes\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradient2(\n    low = \"#663399\",\n    high = \"#993334\",\n    mid = \"grey92\",\n    midpoint = 10    \n  )"
  },
  {
    "objectID": "materials/06_colors.html#create-diverging-palettes-2",
    "href": "materials/06_colors.html#create-diverging-palettes-2",
    "title": "Graphic Design with ggplot2",
    "section": "Create Diverging Palettes",
    "text": "Create Diverging Palettes\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradient2(\n    low = \"#663399\",\n    high = \"#993334\",\n    mid = \"grey92\",\n    midpoint = 10,\n    limits = c(-10, 30)   \n  )"
  },
  {
    "objectID": "materials/06_colors.html#create-any-palette",
    "href": "materials/06_colors.html#create-any-palette",
    "title": "Graphic Design with ggplot2",
    "section": "Create Any Palette",
    "text": "Create Any Palette\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradientn(\n    colors = carto_custom  \n  )"
  },
  {
    "objectID": "materials/06_colors.html#create-any-palette-1",
    "href": "materials/06_colors.html#create-any-palette-1",
    "title": "Graphic Design with ggplot2",
    "section": "Create Any Palette",
    "text": "Create Any Palette\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradientn(\n    colors = carto_custom,\n    values = c(0, .2, .8, 1)\n  )"
  },
  {
    "objectID": "materials/06_colors.html#build-your-own-scale_colorfill_-1",
    "href": "materials/06_colors.html#build-your-own-scale_colorfill_-1",
    "title": "Graphic Design with ggplot2",
    "section": "Build Your Own scale_color|fill_*()",
    "text": "Build Your Own scale_color|fill_*()\n\ndubois_colors <- function(...) {\n  dubois_cols <- c(\n    `black`    = \"#000000\",\n    `purple`   = \"#582f6c\",\n    `violet`   = \"#94679C\",\n    `pink`     = \"#ef849f\",\n    `softred`  = \"#f4b7a7\",\n    `iceblue`  = \"#bccbf3\",\n    `palegrey` = \"#e4e4e4\"\n  )\n\n  cols <- c(...)\n\n  if (is.null(cols))\n    return (dubois_cols)\n\n  dubois_cols[cols]\n}\n\ndubois_colors(\"black\", \"pink\", \"softred\", \"iceblue\")\n\n    black      pink   softred   iceblue \n\"#000000\" \"#ef849f\" \"#f4b7a7\" \"#bccbf3\""
  },
  {
    "objectID": "materials/06_colors.html#build-your-own-scale_colorfill__d",
    "href": "materials/06_colors.html#build-your-own-scale_colorfill__d",
    "title": "Graphic Design with ggplot2",
    "section": "Build Your Own scale_color|fill_*_d()",
    "text": "Build Your Own scale_color|fill_*_d()\n\ndubois_pal_d <- function(palette = \"default\", reverse = FALSE) {\n  function(n) {\n    if(n > 5) stop('Palettes only contains 5 colors')\n\n    if (palette == \"default\") { pal <- dubois_colors(\"black\", \"violet\", \"softred\", \"iceblue\", \"palegrey\")[1:n] }\n    if (palette == \"dark\") { pal <- dubois_colors(1:5)[1:n] }\n    if (palette == \"light\") { pal <- dubois_colors(3:7)[1:n] }\n    \n    pal <- unname(pal)\n\n    if (reverse) rev(pal) else pal\n  }\n}\n\ndubois_pal_d()(3)\n\n[1] \"#000000\" \"#94679C\" \"#f4b7a7\""
  },
  {
    "objectID": "materials/06_colors.html#build-your-own-scale_fillcolor__d",
    "href": "materials/06_colors.html#build-your-own-scale_fillcolor__d",
    "title": "Graphic Design with ggplot2",
    "section": "Build Your Own scale_fill|color_*_d()",
    "text": "Build Your Own scale_fill|color_*_d()\n\nscale_color_dubois_d <- function(palette = \"default\", reverse = FALSE, ...) {\n  if (!palette %in% c(\"default\", \"dark\", \"light\")) stop('Palette should be \"default\", \"dark\" or \"light\".')\n\n  pal <- dubois_pal_d(palette = palette, reverse = reverse)\n\n  ggplot2::discrete_scale(\"colour\", paste0(\"dubois_\", palette), palette = pal, ...)\n}\n\nscale_fill_dubois_d <- function(palette = \"default\", reverse = FALSE, ...) {\n  if (!palette %in% c(\"default\", \"dark\", \"light\")) stop('Palette should be \"default\", \"dark\" or \"light\".')\n\n  pal <- dubois_pal_d(palette = palette, reverse = reverse)\n\n  ggplot2::discrete_scale(\"fill\", paste0(\"dubois_\", palette), palette = pal, ...)\n}"
  },
  {
    "objectID": "materials/06_colors.html#use-your-own-scale_fill__d",
    "href": "materials/06_colors.html#use-your-own-scale_fill__d",
    "title": "Graphic Design with ggplot2",
    "section": "Use Your Own scale_fill_*_d()",
    "text": "Use Your Own scale_fill_*_d()\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_dubois_d()"
  },
  {
    "objectID": "materials/06_colors.html#use-your-own-scale_color__d",
    "href": "materials/06_colors.html#use-your-own-scale_color__d",
    "title": "Graphic Design with ggplot2",
    "section": "Use Your Own scale_color_*_d()",
    "text": "Use Your Own scale_color_*_d()\n\n\nggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        color = season)\n  ) +\n  geom_boxplot() +\n  scale_color_dubois_d(\n    palette = \"dark\",\n    reverse = TRUE\n  )"
  },
  {
    "objectID": "materials/06_colors.html#emulate-cvd",
    "href": "materials/06_colors.html#emulate-cvd",
    "title": "Graphic Design with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n\ndeut <- \n  colorspace::deutan(\n    viridis::turbo(\n      n = 100, direction = -1\n    )\n  )\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count,\n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_gradientn(\n    colors = deut\n  )"
  },
  {
    "objectID": "materials/06_colors.html#emulate-cvd-1",
    "href": "materials/06_colors.html#emulate-cvd-1",
    "title": "Graphic Design with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n\ng <- \n  ggplot(\n    bikes, \n    aes(x = day_night, y = count, \n        fill = season)\n  ) +\n  geom_boxplot() +\n  scale_fill_manual(\n    values = carto_custom\n  )\n\ng"
  },
  {
    "objectID": "materials/06_colors.html#emulate-cvd-2",
    "href": "materials/06_colors.html#emulate-cvd-2",
    "title": "Graphic Design with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n\n# devtools::install_github(\"clauswilke/colorblindr\")\n\ncolorblindr::cvd_grid(g)"
  },
  {
    "objectID": "materials/06_colors.html#emulate-cvd-3",
    "href": "materials/06_colors.html#emulate-cvd-3",
    "title": "Graphic Design with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD"
  },
  {
    "objectID": "materials/06_colors.html#emulate-cvd-4",
    "href": "materials/06_colors.html#emulate-cvd-4",
    "title": "Graphic Design with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n# devtools::install_github(\"clauswilke/colorblindr\")\n\ncolorblindr::cvd_grid(g2)"
  },
  {
    "objectID": "materials/06_colors.html#emulate-cvd-5",
    "href": "materials/06_colors.html#emulate-cvd-5",
    "title": "Graphic Design with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n\ng3 <- \n  g2 +\n  scale_color_manual(\n    values = c(\"#3c89d9\", \"#1ec99b\", \"#F7B01B\", \"#a26e7c\")\n  )"
  },
  {
    "objectID": "materials/06_colors.html#emulate-cvd-6",
    "href": "materials/06_colors.html#emulate-cvd-6",
    "title": "Graphic Design with ggplot2",
    "section": "Emulate CVD",
    "text": "Emulate CVD\n\n# devtools::install_github(\"clauswilke/colorblindr\")\n\ncolorblindr::cvd_grid(g3)"
  },
  {
    "objectID": "materials/06_colors.html#recap",
    "href": "materials/06_colors.html#recap",
    "title": "Graphic Design with ggplot2",
    "section": "Recap",
    "text": "Recap\n\n\n\nuse categorical palettes for qualitative data\n\ne.g. scale_*_discrete() and scale_*_manual() for custom options\ne.g. scale_*_viridis_d and scale_*_brewer() for pre-defined options\n\nuse sequential or diverging palettes for quantitative data\n\ne.g. scale_*_gradient() or scale_*_gradient2() for custom options\ne.g. scale_*_viridis_c and scale_*_distiller() for pre-defined options\n\nvarious packages provide palettes incl. scale_* components\n\ne.g. {rcartocolors}, {scico}, {ggsci}, {ggthemes}, {nord}\n\nthose and even more packages return palettes as vectors\n\nmodify and supply thehm to scale_*_manual() and scale_*_gradientn()\n\nuse after_scale to modify and recycle color scales"
  },
  {
    "objectID": "materials/06_colors.html#exercise-1",
    "href": "materials/06_colors.html#exercise-1",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise",
    "text": "Exercise\n\n\nCreate a similar visualization as close as possible:\n\n\n\n\n\n\n20:00"
  },
  {
    "objectID": "materials/06_colors.html#evaluate-hcl-spectrum",
    "href": "materials/06_colors.html#evaluate-hcl-spectrum",
    "title": "Graphic Design with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\n\n\ncolorspace::specplot(\n  colorspace::diverging_hcl(\n    n = 100, palette = \"Blue-Red\"\n  )\n)"
  },
  {
    "objectID": "materials/06_colors.html#evaluate-hcl-spectrum-1",
    "href": "materials/06_colors.html#evaluate-hcl-spectrum-1",
    "title": "Graphic Design with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\n\n\n\ncolorspace::specplot(\n  scico::scico(\n    n = 100, palette = \"hawaii\"\n  )\n)\n\n\n\n\n\ncolorspace::specplot(\n  MetBrewer::met.brewer(\n     n = 100, name = \"Hiroshige\"\n  )\n)"
  },
  {
    "objectID": "materials/06_colors.html#evaluate-hcl-spectrum-2",
    "href": "materials/06_colors.html#evaluate-hcl-spectrum-2",
    "title": "Graphic Design with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\n\n\n\ncolorspace::specplot(\n  rcartocolor::carto_pal(\n    n = 7, name = \"TealRose\"\n  )\n)\n\n\n\n\n\ncolorspace::specplot(\n  MetBrewer::met.brewer(\n     n = 100, name = \"Cassatt2\"\n  )\n)"
  },
  {
    "objectID": "materials/06_colors.html#evaluate-hcl-spectrum-3",
    "href": "materials/06_colors.html#evaluate-hcl-spectrum-3",
    "title": "Graphic Design with ggplot2",
    "section": "Evaluate HCL Spectrum",
    "text": "Evaluate HCL Spectrum\n\n\n\ncolorspace::specplot(\n  rainbow(\n    n = 100\n  )\n)\n\n\n\n\n\ncolorspace::specplot(\n  viridis::turbo(\n     n = 100, direction = -1\n  )\n)"
  },
  {
    "objectID": "materials/06_colors.html#build-your-own-scale_colorfill__c",
    "href": "materials/06_colors.html#build-your-own-scale_colorfill__c",
    "title": "Graphic Design with ggplot2",
    "section": "Build Your Own scale_color|fill_*_c()",
    "text": "Build Your Own scale_color|fill_*_c()\n\ndubois_pal_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  dubois_palettes <- list(\n    `dark`    = dubois_colors(\"black\", \"purple\", \"violet\", \"pink\"),\n    `light`   = dubois_colors(\"purple\", \"violet\", \"pink\", \"palered\")\n  )\n\n  pal <- dubois_palettes[[palette]]\n  pal <- unname(pal)\n\n  if (reverse) pal <- rev(pal)\n\n  grDevices::colorRampPalette(pal, ...)\n}\n\ndubois_pal_c(palette = \"light\", reverse = TRUE)(3)\n\n[1] \"#FFFFFF\" \"#C1759D\" \"#582F6C\""
  },
  {
    "objectID": "materials/06_colors.html#build-your-own-scale_colorfill__c-1",
    "href": "materials/06_colors.html#build-your-own-scale_colorfill__c-1",
    "title": "Graphic Design with ggplot2",
    "section": "Build Your Own scale_color|fill_*_c()",
    "text": "Build Your Own scale_color|fill_*_c()\n\nscale_fill_dubois_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  if (!palette %in% c(\"dark\", \"light\")) stop('Palette should be \"dark\" or \"light\".')\n\n  pal <- dubois_pal_c(palette = palette, reverse = reverse)\n\n  ggplot2::scale_fill_gradientn(colours = pal(256), ...)\n}\n\nscale_color_dubois_c <- function(palette = \"dark\", reverse = FALSE, ...) {\n  if (!palette %in% c(\"dark\", \"light\")) stop('Palette should be \"dark\" or \"light\".')\n\n  pal <- dubois_pal_c(palette = palette, reverse = reverse)\n\n  ggplot2::scale_color_gradientn(colours = pal(256), ...)\n}"
  },
  {
    "objectID": "materials/06_colors.html#use-your-own-scale_colorfill__c",
    "href": "materials/06_colors.html#use-your-own-scale_colorfill__c",
    "title": "Graphic Design with ggplot2",
    "section": "Use Your Own scale_color|fill_*_c()",
    "text": "Use Your Own scale_color|fill_*_c()\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_dubois_c()"
  },
  {
    "objectID": "materials/06_colors.html#use-your-own-scale_colorfill__c-1",
    "href": "materials/06_colors.html#use-your-own-scale_colorfill__c-1",
    "title": "Graphic Design with ggplot2",
    "section": "Use Your Own scale_color|fill_*_c()",
    "text": "Use Your Own scale_color|fill_*_c()\n\n\nggplot(\n    bikes, \n    aes(x = temp_feel, y = count, \n        color = temp_feel)\n  ) +\n  geom_point() +\n  scale_color_dubois_c(\n    palette = \"light\",\n    reverse = TRUE\n  )\n\n\n\n\n\n\n\n\nCédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "materials/07_layout.html#setup",
    "href": "materials/07_layout.html#setup",
    "title": "Graphic Design with ggplot2",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Roboto Condensed\"))\n\ntheme_update(\n  panel.grid.minor = element_blank(),\n  plot.title = element_text(face = \"bold\"),\n  plot.title.position = \"plot\"\n)"
  },
  {
    "objectID": "materials/07_layout.html#discrete-legend",
    "href": "materials/07_layout.html#discrete-legend",
    "title": "Graphic Design with ggplot2",
    "section": "Discrete Legend",
    "text": "Discrete Legend\n\n\npal <- c(\"#3c89d9\", \"#1ec99b\", \"#F7B01B\", \"#a26e7c\")\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = season)\n  ) +\n  geom_point() +\n  scale_color_manual(values = pal)"
  },
  {
    "objectID": "materials/07_layout.html#continuous-legend",
    "href": "materials/07_layout.html#continuous-legend",
    "title": "Graphic Design with ggplot2",
    "section": "Continuous Legend",
    "text": "Continuous Legend\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c()"
  },
  {
    "objectID": "materials/07_layout.html#legend-position",
    "href": "materials/07_layout.html#legend-position",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Position",
    "text": "Legend Position\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = \"bottom\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-justification",
    "href": "materials/07_layout.html#legend-justification",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Justification",
    "text": "Legend Justification\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = \"bottom\",\n    legend.justification = \"left\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-position-1",
    "href": "materials/07_layout.html#legend-position-1",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Position",
    "text": "Legend Position\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = c(.25, .85)\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-direction",
    "href": "materials/07_layout.html#legend-direction",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Direction",
    "text": "Legend Direction\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c() +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-types",
    "href": "materials/07_layout.html#legend-types",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Types",
    "text": "Legend Types\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    guide = \"colorbar\"\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-types-1",
    "href": "materials/07_layout.html#legend-types-1",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Types",
    "text": "Legend Types\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    guide = \"colorsteps\"\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-types-2",
    "href": "materials/07_layout.html#legend-types-2",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Types",
    "text": "Legend Types\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = \"colorsteps\"\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-types-3",
    "href": "materials/07_layout.html#legend-types-3",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Types",
    "text": "Legend Types\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = guide_colorsteps()\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-styling",
    "href": "materials/07_layout.html#legend-styling",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = guide_colorsteps(\n      title.position = \"top\",\n      title.hjust = .5\n    )\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-styling-1",
    "href": "materials/07_layout.html#legend-styling-1",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_b(\n    guide = guide_colorsteps(\n      title.position = \"top\",\n      title.hjust = .5,\n      show.limits = TRUE,\n      frame.colour = \"black\",\n      frame.linewidth = 3,\n      barwidth = unit(8, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = c(.25, .85),\n    legend.direction = \"horizontal\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-styling-2",
    "href": "materials/07_layout.html#legend-styling-2",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    breaks = 3:10*10,\n    limits = c(30, 100),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = .5,\n      ticks.linewidth = 3,\n      barwidth = unit(20, \"lines\"),\n      barheight = unit(.6, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-styling-3",
    "href": "materials/07_layout.html#legend-styling-3",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    breaks = 3:10*10,\n    limits = c(30, 100),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = .5,\n      ticks.linewidth = 3,\n      draw.ulim = FALSE,\n      draw.llim = FALSE,\n      barwidth = unit(20, \"lines\"),\n      barheight = unit(.6, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#legend-styling-4",
    "href": "materials/07_layout.html#legend-styling-4",
    "title": "Graphic Design with ggplot2",
    "section": "Legend Styling",
    "text": "Legend Styling\n\n\nggplot(\n    bikes,\n    aes(x = temp_feel, y = count,\n        color = humidity)\n  ) +\n  geom_point() +\n  scale_color_viridis_c(\n    breaks = 4:10*10,\n    limits = c(30, 100),\n    guide = guide_colorbar(\n      title.position = \"top\",\n      title.hjust = .5,\n      ticks = FALSE,\n      barwidth = unit(20, \"lines\"),\n      barheight = unit(.6, \"lines\")\n    )\n  ) +\n  theme(\n    legend.position = \"top\"\n  )"
  },
  {
    "objectID": "materials/07_layout.html#key-glyphs",
    "href": "materials/07_layout.html#key-glyphs",
    "title": "Graphic Design with ggplot2",
    "section": "Key Glyphs",
    "text": "Key Glyphs\n\n\nggplot(\n    bikes,\n    aes(x = lubridate::week(date),\n        y = count,\n        color = day_night)\n  ) +\n  stat_summary(\n    geom = \"line\",\n    fun = sum,\n    size = 1\n  ) +\n  scale_color_manual(\n    values = c(\"#28A87D\", \"#663399\"),\n    name = NULL\n  ) +\n  theme(\n    legend.text = element_text(size = 16)\n  )"
  },
  {
    "objectID": "materials/07_layout.html#key-glyphs-1",
    "href": "materials/07_layout.html#key-glyphs-1",
    "title": "Graphic Design with ggplot2",
    "section": "Key Glyphs",
    "text": "Key Glyphs\n\n\nggplot(\n    bikes,\n    aes(x = lubridate::week(date),\n        y = count,\n        color = day_night)\n  ) +\n  stat_summary(\n    geom = \"line\",\n    fun = sum,\n    key_glyph = \"timeseries\",\n    size = 1\n  ) +\n  scale_color_manual(\n    values = c(\"#28A87D\", \"#663399\"),\n    name = NULL\n  ) +\n  theme(\n    legend.text = element_text(size = 16)\n  )"
  },
  {
    "objectID": "materials/07_layout.html#key-glyphs-2",
    "href": "materials/07_layout.html#key-glyphs-2",
    "title": "Graphic Design with ggplot2",
    "section": "Key Glyphs",
    "text": "Key Glyphs\n\n\nggplot(\n    bikes,\n    aes(x = lubridate::week(date),\n        y = count,\n        color = day_night)\n  ) +\n  stat_summary(\n    geom = \"line\",\n    fun = sum,\n    key_glyph = \"vline\",\n    size = 1\n  ) +\n  scale_color_manual(\n    values = c(\"#28A87D\", \"#663399\"),\n    name = NULL\n  ) +\n  theme(\n    legend.text = element_text(size = 16)\n  )"
  },
  {
    "objectID": "materials/07_layout.html#patchwork",
    "href": "materials/07_layout.html#patchwork",
    "title": "Graphic Design with ggplot2",
    "section": "{patchwork}",
    "text": "{patchwork}\n\n# install.packages(\"patchwork\")\nlibrary(patchwork)\n(p1 + p2) / p3"
  },
  {
    "objectID": "materials/07_layout.html#collect-guides",
    "href": "materials/07_layout.html#collect-guides",
    "title": "Graphic Design with ggplot2",
    "section": "“Collect Guides”",
    "text": "“Collect Guides”\n\n(p1 + p2) / p3 + plot_layout(guides = \"collect\")"
  },
  {
    "objectID": "materials/07_layout.html#apply-theming",
    "href": "materials/07_layout.html#apply-theming",
    "title": "Graphic Design with ggplot2",
    "section": "Apply Theming",
    "text": "Apply Theming\n\n((p1 + p2) / p3 & theme(legend.justification = \"top\")) + plot_layout(guides = \"collect\")"
  },
  {
    "objectID": "materials/07_layout.html#apply-theming-1",
    "href": "materials/07_layout.html#apply-theming-1",
    "title": "Graphic Design with ggplot2",
    "section": "Apply Theming",
    "text": "Apply Theming\n\n(p1 + p2) / p3 & theme(legend.position = \"none\", plot.background = element_rect(color = \"black\", size = 3))"
  },
  {
    "objectID": "materials/07_layout.html#adjust-widths-and-heights",
    "href": "materials/07_layout.html#adjust-widths-and-heights",
    "title": "Graphic Design with ggplot2",
    "section": "Adjust Widths and Heights",
    "text": "Adjust Widths and Heights\n\n((p1 + p2) / p3 & theme(legend.position = \"none\")) +\n  plot_layout(heights = c(.2, .15), widths = c(1.4, 1))"
  },
  {
    "objectID": "materials/07_layout.html#use-a-custom-layout",
    "href": "materials/07_layout.html#use-a-custom-layout",
    "title": "Graphic Design with ggplot2",
    "section": "Use A Custom Layout",
    "text": "Use A Custom Layout\n\npicasso <- \"\nAAAAAA#BBBB\nCCCCCCCCCCC\nCCCCCCCCCCC\"\n(p1 + p2 + p3 & theme(legend.position = \"none\")) + plot_layout(design = picasso)"
  },
  {
    "objectID": "materials/07_layout.html#add-labels",
    "href": "materials/07_layout.html#add-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Add Labels",
    "text": "Add Labels\n\npl1 <- p1 + labs(tag = NULL, title = \"Plot One\") + theme(legend.position = \"none\")\npl2 <- p2 + labs(tag = NULL, title = \"Plot Two\") + theme(legend.position = \"none\")\npl3 <- p3 + labs(tag = NULL, title = \"Plot Three\") + theme(legend.position = \"none\")"
  },
  {
    "objectID": "materials/07_layout.html#add-labels-1",
    "href": "materials/07_layout.html#add-labels-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Labels",
    "text": "Add Labels\n\n(pl1 + pl2) / pl3 +\n  plot_annotation(tag_levels = \"1\", tag_prefix = \"P\", title = \"An overarching title for all 3 plots, placed on the very top while all other titles are sitting below the tags.\")"
  },
  {
    "objectID": "materials/07_layout.html#add-text",
    "href": "materials/07_layout.html#add-text",
    "title": "Graphic Design with ggplot2",
    "section": "Add Text",
    "text": "Add Text\n\nGraphicCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntext <- tibble(\n  x = 0, y = 0, label = \"Lorem ipsum dolor sit amet, **consectetur adipiscing elit**, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation <b style='color:#000080;'>ullamco laboris nisi</b> ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat <b style='color:#cc0000;'>cupidatat non proident</b>, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n)\n\npt <- ggplot(text, aes(x = x, y = y)) +\n  ggtext::geom_textbox(\n    aes(label = label),\n    box.color = NA, width = unit(23, \"lines\"),\n    family = \"Pally\", color = \"grey40\", size = 6.5, lineheight = 1.4\n  ) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  theme_void()\n\npt"
  },
  {
    "objectID": "materials/07_layout.html#add-text-1",
    "href": "materials/07_layout.html#add-text-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Text",
    "text": "Add Text\n\n(p1 + pt) / p3"
  },
  {
    "objectID": "materials/07_layout.html#add-inset-plots",
    "href": "materials/07_layout.html#add-inset-plots",
    "title": "Graphic Design with ggplot2",
    "section": "Add Inset Plots",
    "text": "Add Inset Plots\n\npl1 + inset_element(pl2, l = .6, b = .1, r = 1, t = .6)"
  },
  {
    "objectID": "materials/07_layout.html#add-inset-plots-1",
    "href": "materials/07_layout.html#add-inset-plots-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Inset Plots",
    "text": "Add Inset Plots\n\npl1 + inset_element(pl2, l = .6, b = 0, r = 1, t = .5, align_to = 'full')"
  },
  {
    "objectID": "materials/07_layout.html#add-inset-plots-2",
    "href": "materials/07_layout.html#add-inset-plots-2",
    "title": "Graphic Design with ggplot2",
    "section": "Add Inset Plots",
    "text": "Add Inset Plots\n\n(pl1 + inset_element(pl2, l = .6, b = .1, r = 1, t = .6) + pt) / pl3"
  },
  {
    "objectID": "materials/07_layout.html#recap",
    "href": "materials/07_layout.html#recap",
    "title": "Graphic Design with ggplot2",
    "section": "Recap",
    "text": "Recap\n\n\n\nguides are the combination of scales and legends\nlegends can be either modified with the guide_* function in scale_*() or guides() and with the theme() component qualitative\n… while quantitative guides are colorbar, colorsteps or bins\n{patchwork} is the most modern and simplest way to compose plots\n\nuse +, / and | to combine plots\nuse plot_layout() to adjust the layout, widths and heights\nuse plot_annotation() to add tags and general labels\nuse inset_element() to add inset graphics"
  },
  {
    "objectID": "materials/07_layout.html#legend-with-color-shading",
    "href": "materials/07_layout.html#legend-with-color-shading",
    "title": "Graphic Design with ggplot2",
    "section": "Legend with Color Shading",
    "text": "Legend with Color Shading\n\n\nlibrary(colorspace)\nshades <- c(lighten(pal, .3),\n                  darken(pal, .3))\n\ng <-\n  bikes %>%\n  arrange(day_night, date) %>%\n  mutate(\n    season_day = paste(\n      str_to_title(season), day_night\n    ),\n    season_day = forcats::fct_inorder(season_day)\n  ) %>%\n  ggplot(\n    aes(x = season, y = count,\n        fill = season_day)\n  ) +\n  stat_summary(\n    geom = \"col\", fun = sum,\n    position = position_dodge2(\n      width = .2, padding = .1\n    )\n  ) +\n  scale_fill_manual(\n    values = shades, name = NULL\n  ) +\n  scale_x_discrete(\n    labels = str_to_title\n  ) +\n  scale_y_continuous(\n    labels = scales::comma_format(),\n    expand = c(0, 0),\n    limits = c(NA, 4500000)\n  ) +\n  theme(\n    panel.grid.major.x = element_blank(),\n    axis.title = element_blank()\n  )\n\ng"
  },
  {
    "objectID": "materials/07_layout.html#legend-on-top",
    "href": "materials/07_layout.html#legend-on-top",
    "title": "Graphic Design with ggplot2",
    "section": "Legend on Top",
    "text": "Legend on Top\n\ng +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "materials/07_layout.html#resort-legend",
    "href": "materials/07_layout.html#resort-legend",
    "title": "Graphic Design with ggplot2",
    "section": "Resort Legend",
    "text": "Resort Legend\n\ng +\n  guides(fill = guide_legend(byrow = TRUE)) +\n  theme(legend.position = \"top\")\n\n\n\n\nCédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#exercise-1",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#exercise-1",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nExplore the TfL bike share data visually:create a timeseries of reported bike shares on weekend days\n\nHighlight day and night encoded by colors and shapes.\nConnect the points of each period with lines.\n\nWhat is the difference between geom_line() and geom_path()?\n\nApply your favorite theme to the plot.\nAdd meaningful labels.\nBonus: use shape to encode Saturday vs Sunday instead.\n\nSave the plot as a vector graphic with a decent plot size."
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#import-the-data-set",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#import-the-data-set",
    "title": "Graphic Design with ggplot2",
    "section": "Import the Data Set",
    "text": "Import the Data Set\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#scatterplot-counts-vs.-date",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#scatterplot-counts-vs.-date",
    "title": "Graphic Design with ggplot2",
    "section": "Scatterplot Counts vs. Date",
    "text": "Scatterplot Counts vs. Date\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point()"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#encode-day-period-by-colors-and-shapes",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#encode-day-period-by-colors-and-shapes",
    "title": "Graphic Design with ggplot2",
    "section": "Encode Day Period by Colors and Shapes",
    "text": "Encode Day Period by Colors and Shapes\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#add-line",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#add-line",
    "title": "Graphic Design with ggplot2",
    "section": "Add Line",
    "text": "Add Line\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  ) +\n  geom_line(\n    color = \"grey\"\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#group-lines-by-day-period",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#group-lines-by-day-period",
    "title": "Graphic Design with ggplot2",
    "section": "Group Lines by Day Period",
    "text": "Group Lines by Day Period\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#order-layers",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#order-layers",
    "title": "Graphic Design with ggplot2",
    "section": "Order Layers",
    "text": "Order Layers\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#use-geom_path-instead",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#use-geom_path-instead",
    "title": "Graphic Design with ggplot2",
    "section": "Use `geom_path()` instead",
    "text": "Use `geom_path()` instead\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_path(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#geom_line-vs.-geom_path",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#geom_line-vs.-geom_path",
    "title": "Graphic Design with ggplot2",
    "section": "`geom_line()` vs. `geom_path()`",
    "text": "`geom_line()` vs. `geom_path()`\n\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_path(\n    aes(color = day_night)\n  )\n\n\n\n\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = temp_feel, y = count)\n  ) +\n  geom_line(\n    aes(color = day_night)\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#apply-a-theme",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#apply-a-theme",
    "title": "Graphic Design with ggplot2",
    "section": "Apply a Theme",
    "text": "Apply a Theme\n\n\ng <- ggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = day_night)\n  )\n\ng +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#add-meaningful-labels",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#add-meaningful-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = \"Part of the Day:\"\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#add-meaningful-labels-1",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#add-meaningful-labels-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = \"Part of the Day:\",\n    shape = \"Part of the Day:\"\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#add-meaningful-labels-2",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#add-meaningful-labels-2",
    "title": "Graphic Design with ggplot2",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\ng +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#save-the-plot",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#save-the-plot",
    "title": "Graphic Design with ggplot2",
    "section": "Save the Plot",
    "text": "Save the Plot\n\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex1.pdf\"),\n       width = 9, height = 5, device = cairo_pdf)"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#bonus-use-shape-to-encode-sat-vs-sun",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#bonus-use-shape-to-encode-sat-vs-sun",
    "title": "Graphic Design with ggplot2",
    "section": "Bonus: Use Shape to Encode Sat vs Sun",
    "text": "Bonus: Use Shape to Encode Sat vs Sun\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::day(date) == 6)\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#bonus-use-shape-to-encode-sat-vs-sun-1",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#bonus-use-shape-to-encode-sat-vs-sun-1",
    "title": "Graphic Design with ggplot2",
    "section": "Bonus: Use Shape to Encode Sat vs Sun",
    "text": "Bonus: Use Shape to Encode Sat vs Sun\n\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::wday(date, label = TRUE))\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#bonus-use-shape-to-encode-sat-vs-sun-2",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#bonus-use-shape-to-encode-sat-vs-sun-2",
    "title": "Graphic Design with ggplot2",
    "section": "Bonus: Use Shape to Encode Sat vs Sun",
    "text": "Bonus: Use Shape to Encode Sat vs Sun\n\n\ninvisible(\n  Sys.setlocale(\"LC_TIME\", \"C\")\n)\n\nggplot(\n    filter(bikes, is_weekend == TRUE),\n    aes(x = date, y = count)\n  ) +\n  geom_line(\n    aes(group = day_night),\n    color = \"grey\"\n  ) +\n  geom_point(\n    aes(color = day_night,\n        shape = lubridate::wday(date, label = TRUE))\n  ) +\n  labs(\n    x = \"Weekend date\",\n    y = \"Reported bike shares\",\n    color = NULL,\n    shape = NULL\n  ) +\n  theme_minimal(\n    base_size = 15,\n    base_family = \"Lora\"\n  ) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex1_solution.html#save-the-plot-1",
    "href": "materials/solutions/02_concepts_pt1_ex1_solution.html#save-the-plot-1",
    "title": "Graphic Design with ggplot2",
    "section": "Save the Plot",
    "text": "Save the Plot\n\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex1_bonus.pdf\"),\n       width = 9, height = 5, device = cairo_pdf)\n\n\n\n\n\n\n\nCédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#exercise-2",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#exercise-2",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nExplore the TfL bike sharing data visually:create a boxplot of counts per weather type\n\nTurn the plot into a jitter strips plot (random noise across the x axis)\nCombine both chart types (jittered points on top of the boxplots)\nBonus: Sort the boxplot-jitter hybrid by median counts\nApply your favorite theme to the plot.\nAdd meaningful labels.\nBonus: Explore other chart types to visualize the distributions.\n\nSave the plot as a vector graphic with a decent plot size."
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#import-data-if-not-yet",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#import-data-if-not-yet",
    "title": "Graphic Design with ggplot2",
    "section": "Import Data (if not yet)",
    "text": "Import Data (if not yet)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#boxplot-of-counts-vs.-weather-type",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#boxplot-of-counts-vs.-weather-type",
    "title": "Graphic Design with ggplot2",
    "section": "Boxplot of Counts vs. Weather Type",
    "text": "Boxplot of Counts vs. Weather Type\n\n\nggplot(\n    bikes,\n    aes(x = weather_type, y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#avoid-overlapping-axis-labels",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#avoid-overlapping-axis-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Avoid Overlapping Axis Labels",
    "text": "Avoid Overlapping Axis Labels\n\n\nggplot(\n    bikes,\n    aes(x = count, y = weather_type)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#avoid-overlapping-axis-labels-1",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#avoid-overlapping-axis-labels-1",
    "title": "Graphic Design with ggplot2",
    "section": "Avoid Overlapping Axis Labels",
    "text": "Avoid Overlapping Axis Labels\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#apply-a-theme",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#apply-a-theme",
    "title": "Graphic Design with ggplot2",
    "section": "Apply a Theme",
    "text": "Apply a Theme\n\n\ntheme_set(theme_minimal(\n  base_size = 14,\n  base_family = \"Roboto Condensed\"\n))\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#customize-the-theme",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#customize-the-theme",
    "title": "Graphic Design with ggplot2",
    "section": "Customize the Theme",
    "text": "Customize the Theme\n\n\ntheme_set(theme_minimal(\n  base_size = 14,\n  base_family = \"Roboto Condensed\"\n))\n\ntheme_update(\n  panel.grid.major.x = element_blank(),\n  panel.grid.minor = element_blank()\n)\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot()"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#add-meaningful-labels",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#add-meaningful-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  labs(x = NULL, y = \"Reported bike shares\")"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#add-meaningful-labels-1",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#add-meaningful-labels-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  labs(\n    x = NULL, y = NULL,\n    title = \"Reported bike shares by weather type\"\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#add-meaningful-labels-2",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#add-meaningful-labels-2",
    "title": "Graphic Design with ggplot2",
    "section": "Add Meaningful Labels",
    "text": "Add Meaningful Labels\n\n\ntheme_update(\n  plot.title.position = \"plot\",\n  axis.title = element_blank()\n)\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#jitter-strips-of-counts-per-weather-type",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#jitter-strips-of-counts-per-weather-type",
    "title": "Graphic Design with ggplot2",
    "section": "Jitter Strips of Counts per Weather Type",
    "text": "Jitter Strips of Counts per Weather Type\n\n\nggplot(\n    bikes,\n    aes(x = stringr::str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_jitter(\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#jitter-strips-of-counts-per-weather-type-1",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#jitter-strips-of-counts-per-weather-type-1",
    "title": "Graphic Design with ggplot2",
    "section": "Jitter Strips of Counts per Weather Type",
    "text": "Jitter Strips of Counts per Weather Type\n\n\n\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = \"jitter\",\n    alpha = .2\n  )\n\n\n\n\n\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = position_jitter(),\n    alpha = .2\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#jitter-strips-of-counts-vs.-weather-type",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#jitter-strips-of-counts-vs.-weather-type",
    "title": "Graphic Design with ggplot2",
    "section": "Jitter Strips of Counts vs. Weather Type",
    "text": "Jitter Strips of Counts vs. Weather Type\n\n\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#boxplot-jitter-strip-hybrid",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#boxplot-jitter-strip-hybrid",
    "title": "Graphic Design with ggplot2",
    "section": "Boxplot + Jitter Strip Hybrid",
    "text": "Boxplot + Jitter Strip Hybrid\n\n\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot() +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#boxplot-jitter-strip-hybrid-1",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#boxplot-jitter-strip-hybrid-1",
    "title": "Graphic Design with ggplot2",
    "section": "Boxplot + Jitter Strip Hybrid",
    "text": "Boxplot + Jitter Strip Hybrid\n\n\nggplot(\n    bikes,\n    aes(x = str_wrap(weather_type, 6),\n        y = count)\n  ) +\n  geom_boxplot(\n     outlier.shape = NA\n     # outlier.color = \"transparent\"\n     # outlier.alpha = 0\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#bonus-sort-weather-types",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#bonus-sort-weather-types",
    "title": "Graphic Design with ggplot2",
    "section": "Bonus: Sort Weather Types",
    "text": "Bonus: Sort Weather Types\n\n\nggplot(\n    bikes,\n    aes(\n      x = forcats::fct_reorder(\n        str_wrap(weather_type, 6), -count\n      ),\n      y = count)\n  ) +\n  geom_boxplot(\n     outlier.shape = NA\n     # outlier.color = \"transparent\"\n     # outlier.alpha = 0\n  ) +\n  geom_point(\n    position = position_jitter(\n      seed = 2022,\n      width = .2,\n      height = 0\n    ),\n    alpha = .2\n  ) +\n  ggtitle(\"Reported bike shares by weather type\")"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#save-the-plot",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#save-the-plot",
    "title": "Graphic Design with ggplot2",
    "section": "Save the Plot",
    "text": "Save the Plot\n\nggsave(here::here(\"exercises\", \"plots\", \"02_concepts_pt1_ex2.pdf\"),\n       width = 5, height = 6.5, device = cairo_pdf)"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#lets-update-our-data-set",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#lets-update-our-data-set",
    "title": "Graphic Design with ggplot2",
    "section": "Let’s Update our Data Set",
    "text": "Let’s Update our Data Set\n\nbikes <-\n  bikes %>%\n  mutate(\n    weather_type_fct = stringr::str_wrap(\n      weather_type, 6\n    ),\n    weather_type_fct = forcats::fct_reorder(\n      weather_type_fct, -count\n    )\n  )\n\nlevels(bikes$weather_type_fct)\n\n[1] \"scattered\\nclouds\" \"broken\\nclouds\"    \"clear\"            \n[4] \"cloudy\"            \"rain\"              \"snowfall\""
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#lets-store-our-ggplot-setup",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#lets-store-our-ggplot-setup",
    "title": "Graphic Design with ggplot2",
    "section": "Let’s Store Our ggplot Setup",
    "text": "Let’s Store Our ggplot Setup\n\ng <-\n  ggplot(\n    bikes,\n    aes(x = weather_type_fct,\n        y = count)\n  ) +\n  ggtitle(\n    \"Reported bike shares by weather type\"\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#beeswarm-plots-with-ggbeeswarm",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#beeswarm-plots-with-ggbeeswarm",
    "title": "Graphic Design with ggplot2",
    "section": "Beeswarm Plots with {ggbeeswarm}",
    "text": "Beeswarm Plots with {ggbeeswarm}\n\n\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggbeeswarm::geom_beeswarm(\n    size = .3,\n    alpha = .2,\n    cex = .6\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#beeswarm-plots-with-ggbeeswarm-1",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#beeswarm-plots-with-ggbeeswarm-1",
    "title": "Graphic Design with ggplot2",
    "section": "Beeswarm Plots with {ggbeeswarm}",
    "text": "Beeswarm Plots with {ggbeeswarm}\n\n\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggbeeswarm::geom_quasirandom(\n    size = .3,\n    alpha = .2,\n    width = .3,\n    varwidth = TRUE\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#sina-plots-with-ggforce",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#sina-plots-with-ggforce",
    "title": "Graphic Design with ggplot2",
    "section": "Sina Plots with {ggforce}",
    "text": "Sina Plots with {ggforce}\n\n\ng +\n  geom_boxplot(\n     outlier.shape = NA\n  ) +\n  ggforce::geom_sina(\n    size = .5,\n    alpha = .2,\n    maxwidth = 1.2\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#barcode-strips",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#barcode-strips",
    "title": "Graphic Design with ggplot2",
    "section": "Barcode Strips",
    "text": "Barcode Strips\n\n\ng +\n  geom_boxplot(\n     position = position_nudge(x = .15),\n     width = .35\n  ) +\n  geom_point(\n    shape = \"-\",\n    size = 8,\n    alpha = .1,\n    position = position_nudge(x = -.15)\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots",
    "title": "Graphic Design with ggplot2",
    "section": "Violin Plots",
    "text": "Violin Plots\n\n\ng +\n  geom_violin()"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-1",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-1",
    "title": "Graphic Design with ggplot2",
    "section": "Violin Plots",
    "text": "Violin Plots\n\n\ng +\n  geom_violin(\n    scale = \"count\",\n    draw_quantiles = c(.5),\n    fill = \"grey80\"\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-2",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-2",
    "title": "Graphic Design with ggplot2",
    "section": "Violin Plots",
    "text": "Violin Plots\n\n\ng +\n  geom_violin(\n    scale = \"width\",\n    draw_quantiles = c(.5),\n    trim = FALSE,\n    bw = 250,\n    fill = \"grey80\"\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-with-ggdist",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-with-ggdist",
    "title": "Graphic Design with ggplot2",
    "section": "Violin Plots with {ggdist}",
    "text": "Violin Plots with {ggdist}\n\n\ng +\n  ggdist::stat_eye()"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-with-ggdist-1",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-with-ggdist-1",
    "title": "Graphic Design with ggplot2",
    "section": "Violin Plots with {ggdist}",
    "text": "Violin Plots with {ggdist}\n\n\ng +\n  ggdist::stat_eye(\n    .width = c(0.5, 0.95),\n    width = 1.5,\n    adjust = .33\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-with-ggdist-2",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-with-ggdist-2",
    "title": "Graphic Design with ggplot2",
    "section": "Violin Plots with {ggdist}",
    "text": "Violin Plots with {ggdist}\n\n\ng +\n  ggdist::stat_eye(\n    aes(thickness = stat(f*n)),\n    .width = c(0.5, 0.95),\n    adjust = .33\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-with-ggdist-3",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#violin-plots-with-ggdist-3",
    "title": "Graphic Design with ggplot2",
    "section": "Violin Plots with {ggdist}",
    "text": "Violin Plots with {ggdist}\n\n\ng +\n  ggdist::stat_eye(\n    aes(thickness = stat(f*n)),\n    .width = c(0.5, 0.95),\n    adjust = .5,\n    interval_size_range = c(.4, 2.5),\n    point_size = 1.2,\n    point_color = \"white\"\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#raincloud-plots-with-ggdist",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#raincloud-plots-with-ggdist",
    "title": "Graphic Design with ggplot2",
    "section": "Raincloud Plots with {ggdist}",
    "text": "Raincloud Plots with {ggdist}\n\n\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    .width = 0,\n    width = .5,\n    position = position_nudge(x = .2)\n  ) +\n  geom_jitter(\n    width = .1,\n    size = .5,\n    alpha = .1\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#raincloud-plots-with-ggdist-1",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#raincloud-plots-with-ggdist-1",
    "title": "Graphic Design with ggplot2",
    "section": "Raincloud Plots with {ggdist}",
    "text": "Raincloud Plots with {ggdist}\n\n\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .2)\n  ) +\n  geom_boxplot(\n    width = .3,\n    outlier.color = NA\n  ) +\n  geom_jitter(\n    width = .1,\n    size = .5,\n    alpha = .1\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#raincloud-plots-with-gghalves",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#raincloud-plots-with-gghalves",
    "title": "Graphic Design with ggplot2",
    "section": "Raincloud Plots with {gghalves}",
    "text": "Raincloud Plots with {gghalves}\n\n\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .1)\n  ) +\n  geom_boxplot(\n    width = .1,\n    outlier.size = .2\n  ) +\n  gghalves::geom_half_point(\n    side = \"l\",\n    range_scale = .4,\n    size = .3,\n    alpha = .1\n  )"
  },
  {
    "objectID": "materials/solutions/02_concepts_pt1_ex2_solution.html#raincloud-plots-with-gghalves-1",
    "href": "materials/solutions/02_concepts_pt1_ex2_solution.html#raincloud-plots-with-gghalves-1",
    "title": "Graphic Design with ggplot2",
    "section": "Raincloud Plots with {gghalves}",
    "text": "Raincloud Plots with {gghalves}\n\n\ng +\n  ggdist::stat_halfeye(\n    aes(thickness = stat(f*n)),\n    color = NA,\n    width = .5,\n    position = position_nudge(x = .1)\n  ) +\n  geom_boxplot(\n    width = .1,\n    outlier.size = .2\n  ) +\n  gghalves::geom_half_point(\n    side = \"l\",\n    range_scale = .4,\n    size = .3,\n    alpha = .1\n  ) +\n  coord_flip()\n\n\n\n\n\n\n\n\nCédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex1_solution.html#exercise-1",
    "href": "materials/solutions/03_concepts_pt2_ex1_solution.html#exercise-1",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\nHave a look at the following visualization of the cumulative time that cosmo- and astronauts have spent in outer space. The data also contains information on the year of their first and last travel, respectively.\nTogether with your group, discuss which layers and modifications are needed to create such a chart with {ggplot2}.\n\nNote down the aesthetics, geometries, and scales used for each element of this graphic.\nWhat is the coordinate system? Have any adjustments been made?\nWhich theme was used and how was it modified?"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex1_solution.html#data-prep",
    "href": "materials/solutions/03_concepts_pt2_ex1_solution.html#data-prep",
    "title": "Graphic Design with ggplot2",
    "section": "Data Prep",
    "text": "Data Prep\n\nlibrary(tidyverse)\n\ndf_astro <- readr::read_csv(\n  'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-14/astronauts.csv'\n)\n\ndf_missions <-\n  df_astro %>%\n  group_by(name) %>%\n  summarize(\n    hours = sum(hours_mission),\n    year = min(year_of_mission),\n    max_year = max(year_of_mission)\n  ) %>%\n  ungroup() %>%\n  mutate(year = -year) %>%\n  arrange(year) %>%\n  mutate(id = row_number())"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex1_solution.html#code-pt.-1",
    "href": "materials/solutions/03_concepts_pt2_ex1_solution.html#code-pt.-1",
    "title": "Graphic Design with ggplot2",
    "section": "Code Pt. 1",
    "text": "Code Pt. 1\n\n# install.packages(\"scico\")\n\ng1 <-\n  ggplot(df_missions, aes(x = id, y = hours, color = hours)\n    ) +\n    ## curves\n    geom_linerange(aes(ymin = 0, ymax = hours, alpha = hours), size = .25) +\n    ## baseline\n    geom_point(aes(y = 0), shape = 15, size = .1, color = \"#808080\") +\n    ## points\n    geom_point(aes(y = hours, size = hours)) +\n    ## turn into circular\n    coord_polar(theta = \"y\", start = 0, clip = \"off\") +\n    ## add axis spacings\n    scale_x_continuous(limits = c(-300, NA), expand = c(0, 0)) +\n    scale_y_continuous(limits = c(0, 23000), expand = c(0, 0)) +\n    ## change colors, transparencies, and bubble sizes\n    scale_color_distiller(palette = \"YlGnBu\", direction = -1) +\n    scale_size(range = c(.001, 3)) +\n    scale_alpha(range = c(.33, .95)) +\n    ## remove all theme components\n    theme_void() +\n    theme(\n      ## set dark background\n      plot.background = element_rect(fill = \"black\"),\n      ## remove \"white\" space\n      plot.margin = margin(-70, -70, -70, -70),\n      ## remove legends\n      legend.position = \"none\"\n    )"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex1_solution.html#data-prep-labels",
    "href": "materials/solutions/03_concepts_pt2_ex1_solution.html#data-prep-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Data Prep Labels",
    "text": "Data Prep Labels\n\ndf_labs <-\n  df_missions %>%\n  filter(year %in% -c(1961, 197:201*10, 2019)) %>%\n  group_by(year) %>%\n  filter(id == min(id))\n\ndf_max <-\n  df_missions %>%\n  arrange(-hours) %>%\n  slice(1) %>%\n  mutate(\n    first_name = str_remove(name, \".*, \"),\n    last_name = str_remove(name, \"(?<=),.*\"),\n    label = paste(\"Between\", abs(year), \"and\", max_year, \",\\n\", first_name, last_name, \"has spent\\n\", format(hours, big.mark = ','), \"hours in space.\\nThat's roughly\", round(hours / 24, 0), \"days!\")\n  )"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex1_solution.html#code-pt.-2",
    "href": "materials/solutions/03_concepts_pt2_ex1_solution.html#code-pt.-2",
    "title": "Graphic Design with ggplot2",
    "section": "Code Pt. 2",
    "text": "Code Pt. 2\n\ng2 <-\n  g1 +\n    ## labels years\n    geom_text(\n      data = df_labs, aes(y = 0, label = abs(year)),\n      family = \"Lato\", fontface = \"bold\", color = \"#808080\",\n      size = 4.5, hjust = 1.2\n    ) +\n    ## label max\n    geom_text(\n      data = df_max, aes(label = label),\n      family = \"Lato\", size = 3.9, vjust = -.35\n    ) +\n    ## title shadow\n    annotate(\n      geom = \"text\", x = -300, y = 0, label = \"Travelling to\\nOuter Space\",\n      family = \"Boska\", fontface = \"bold\", lineheight = .9,\n      size = 20, color = \"white\", hjust = .57, vjust = .45, alpha = .25\n    ) +\n    ## title\n    annotate(\n      geom = \"text\", x = -300, y = 0, label = \"Travelling to\\nOuter Space\",\n      family = \"Boska\", fontface = \"bold\", lineheight = .85,\n      size = 20, color = \"white\", hjust = .55, vjust = .4\n    ) +\n    ## caption\n    labs(caption = \"Cumulative time in outer space for all 565 cosmonauts and astronauts who participated\n    in space missions between April 23, 1961 and January 15, 2020, sorted by the year of their first mission.\n\n    Graphic: Cédric Scherer • Data: Stavnichuk & Corlett 2020 (DOI: 10.17632/86tsnnbv2w.1)\") +\n    ## modify caption + move inside plot area\n    theme(\n      plot.caption = element_text(\n        family = \"Lato\",\n        size = 15, color = \"#808080\", hjust = .5,\n        margin = margin(-100, 0, 100, 0)\n      )\n    )"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex1_solution.html#code-with-special-extensions",
    "href": "materials/solutions/03_concepts_pt2_ex1_solution.html#code-with-special-extensions",
    "title": "Graphic Design with ggplot2",
    "section": "Code with Special Extensions",
    "text": "Code with Special Extensions\n\n# install.packages(\"ggforce\")\n# install.packages(\"scico\")\n# devtools::install_github(\"coolbutuseless/ggblur\")\n\ng_ext <-\n  ggplot(df_missions, aes(x = id, y = hours, color = hours)) +\n    ## geom_link() from {ggforce} to draw smooth curves\n    ggforce::geom_link(aes(xend = id, yend = 0, alpha = hours), size = .25, n = 300) +\n    geom_point(aes(y = 0), shape = 15, size = .1, color = \"#808080\") +\n    ##geom_point_blur() from {ggblur} to add points with gradual fading\n    ggblur::geom_point_blur(aes(size = hours, blur_size = hours), blur_steps = 25) +\n    geom_text(\n      data = df_labs, aes(y = 0, label = abs(year)),\n      family = \"Lato\", fontface = \"bold\", color = \"#808080\",\n      size = 4.5, hjust = 1.2\n    ) +\n    geom_text(\n      data = df_max, aes(label = label),\n      family = \"Lato\", size = 3.9, vjust = -.35\n    ) +\n    coord_polar(theta = \"y\", start = 0, clip = \"off\") +\n    scale_x_continuous(limits = c(-300, NA), expand = c(0, 0)) +\n    scale_y_continuous(limits = c(0, 23000), expand = c(0, 0)) +\n    ## use custom color palette from {scico}\n    scico::scale_color_scico(palette = \"buda\") +\n    scale_size(range = c(.001, 3)) +\n    ggblur::scale_blur_size_continuous(range = c(.5, 10), guide = \"none\") +\n    scale_alpha(range = c(.33, .95)) +\n    annotate(\n      geom = \"text\", x = -300, y = 0, label = \"Travelling to\\nOuter Space\",\n      family = \"Boska\", fontface = \"bold\", lineheight = .9,\n      size = 20, color = \"white\", hjust = .57, vjust = .45, alpha = .25\n    ) +\n    annotate(\n      geom = \"text\", x = -300, y = 0, label = \"Travelling to\\nOuter Space\",\n      family = \"Boska\", fontface = \"bold\", lineheight = .85,\n      size = 20, color = \"white\", hjust = .55, vjust = .4\n    ) +\n    labs(caption = \"Cumulative time in outer space for all 565 cosmonauts and astronauts who participated\n    in space missions between April 23, 1961 and January 15, 2020, sorted by the year of their first mission.\n\n    Graphic: Cédric Scherer • Data: Stavnichuk & Corlett 2020 (DOI: 10.17632/86tsnnbv2w.1)\") +\n    theme_void() +\n    theme(\n      plot.background = element_rect(fill = \"black\"),\n      plot.margin = margin(-70, -70, -70, -70),\n      legend.position = \"none\",\n      plot.caption = element_text(\n        family = \"Lato\",\n        size = 15, color = \"#808080\", hjust = .5,\n        margin = margin(-100, 0, 100, 0)\n      )\n    )"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#exercise-2",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#exercise-2",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 2",
    "text": "Exercise 2\n\n\nCreate a circular lollipop plot of reported bike shares per season.\n\nThe data is not in the right format as there are no totals.How can you solve it?\nRemove all legend elements (with a single line of code).\nHow can you add the labels next to the starting point of each lollipop?\nHow could you add a baseline?"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#preparation",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#preparation",
    "title": "Graphic Design with ggplot2",
    "section": "Preparation",
    "text": "Preparation\n\nlibrary(tidyverse)\n\nbikes <- readr::read_csv(\n  here::here(\"data\", \"london-bikes-custom.csv\"),\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- stringr::str_to_title(bikes$season)\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ntheme_set(theme_light(base_size = 14, base_family = \"Roboto Condensed\"))"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#lollipop-plot-with-pre-calculated-sums",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#lollipop-plot-with-pre-calculated-sums",
    "title": "Graphic Design with ggplot2",
    "section": "Lollipop Plot with Pre-Calculated Sums",
    "text": "Lollipop Plot with Pre-Calculated Sums\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count))\n\n# A tibble: 4 × 2\n  season   count\n  <fct>    <int>\n1 Winter 3520407\n2 Spring 4850236\n3 Summer 6424609\n4 Autumn 5073040"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#lollipop-plot-with-pre-calculated-sums-1",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#lollipop-plot-with-pre-calculated-sums-1",
    "title": "Graphic Design with ggplot2",
    "section": "Lollipop Plot with Pre-Calculated Sums",
    "text": "Lollipop Plot with Pre-Calculated Sums\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  )"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#calculate-sums-via-stat_summary",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#calculate-sums-via-stat_summary",
    "title": "Graphic Design with ggplot2",
    "section": "Calculate Sums via stat_summary()",
    "text": "Calculate Sums via stat_summary()\n\n\nggplot(bikes, aes(x = season, y = count)) +\n  stat_summary(\n    geom = \"point\", fun = \"sum\", size = 3\n  ) +\n  stat_summary(\n    geom = \"linerange\", ymin = 0,\n    fun.max = function(y) sum(y)\n  )"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#calculate-sums-via-stat_summary-1",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#calculate-sums-via-stat_summary-1",
    "title": "Graphic Design with ggplot2",
    "section": "Calculate Sums via stat_summary()",
    "text": "Calculate Sums via stat_summary()\n\n\nggplot(bikes, aes(x = season, y = count)) +\n  stat_summary(\n    geom = \"point\", fun = \"sum\", size = 3\n  ) +\n  stat_summary(\n    geom = \"linerange\", ymin = 0,\n    fun.max = function(y) sum(y)\n  ) +\n  coord_cartesian(ylim = c(0, NA))"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#apply-a-polar-coordinate-system",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#apply-a-polar-coordinate-system",
    "title": "Graphic Design with ggplot2",
    "section": "Apply a Polar Coordinate System",
    "text": "Apply a Polar Coordinate System\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  coord_polar(theta = \"y\")"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#fix-axis-ranges",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#fix-axis-ranges",
    "title": "Graphic Design with ggplot2",
    "section": "Fix Axis Ranges",
    "text": "Fix Axis Ranges\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  )"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#remove-all-theme-components",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#remove-all-theme-components",
    "title": "Graphic Design with ggplot2",
    "section": "Remove All Theme Components",
    "text": "Remove All Theme Components\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void()"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#fix-plot-margin",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#fix-plot-margin",
    "title": "Graphic Design with ggplot2",
    "section": "Fix Plot Margin",
    "text": "Fix Plot Margin\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#add-axis-text",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#add-axis-text",
    "title": "Graphic Design with ggplot2",
    "section": "Add “Axis” Text",
    "text": "Add “Axis” Text\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_text(\n    aes(label = season, y = 0)\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#style-axis-text",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#style-axis-text",
    "title": "Graphic Design with ggplot2",
    "section": "Style “Axis” Text",
    "text": "Style “Axis” Text\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#alternatively-add-direct-labels",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#alternatively-add-direct-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Alternatively: Add Direct Labels",
    "text": "Alternatively: Add Direct Labels\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  geom_text(\n    aes(label = paste0(round(count / 10^6, 1), \"M\")),\n    size = 4, vjust = -1, family = \"Cabinet Grotesk\"\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#add-a-baseline-ugly-but-simple",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#add-a-baseline-ugly-but-simple",
    "title": "Graphic Design with ggplot2",
    "section": "Add a Baseline — ugly but simple",
    "text": "Add a Baseline — ugly but simple\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_hline(yintercept = 0) +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#add-a-baseline-nice-but-unusual",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#add-a-baseline-nice-but-unusual",
    "title": "Graphic Design with ggplot2",
    "section": "Add a Baseline — nice but unusual",
    "text": "Add a Baseline — nice but unusual\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  geom_linerange(\n    xmin = .7, xmax = 4.3, y = 0\n  ) +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#add-a-baseline-yeah-thats-it",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#add-a-baseline-yeah-thats-it",
    "title": "Graphic Design with ggplot2",
    "section": "Add a Baseline — yeah, that’s it!",
    "text": "Add a Baseline — yeah, that’s it!\n\n\nbikes %>%\n  group_by(season) %>%\n  summarize(count = sum(count)) %>%\n  ggplot(aes(x = season, y = count)) +\n  geom_point(size = 3) +\n  geom_linerange(\n    aes(ymin = 0, ymax = count)\n  ) +\n  annotate(\n    geom = \"linerange\",\n    xmin = .7, xmax = 4.3, y = 0\n  )  +\n  geom_text(\n    aes(label = season, y = 0),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))"
  },
  {
    "objectID": "materials/solutions/03_concepts_pt2_ex2_solution.html#solution-using-stat_summary",
    "href": "materials/solutions/03_concepts_pt2_ex2_solution.html#solution-using-stat_summary",
    "title": "Graphic Design with ggplot2",
    "section": "Solution using stat_summary()",
    "text": "Solution using stat_summary()\n\n\nggplot(bikes, aes(x = as.numeric(season), y = count)) +\n  stat_summary(\n    geom = \"point\", fun = \"sum\", size = 3\n  ) +\n  stat_summary(\n    geom = \"linerange\", ymin = 0,\n    fun.max = function(y) sum(y)\n  ) +\n  stat_summary(\n    geom = \"text\",\n    aes(\n      label = season,\n      y = 0\n    ),\n    family = \"Cabinet Grotesk\", size = 4.5,\n    fontface = \"bold\", hjust = 1.15\n  ) +\n  annotate(\n    geom = \"linerange\",\n    xmin = .7, xmax = 4.3, y = 0\n  ) +\n  coord_polar(theta = \"y\") +\n  scale_x_discrete(\n    expand = c(.5, .5)\n  ) +\n  scale_y_continuous(\n    limits = c(0, 7.5*10^6)\n  ) +\n  theme_void() +\n  theme(plot.margin = margin(rep(-100, 4)))\n\n\n\n\n\n\n\n\nCédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#exercise-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#exercise-1",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise 1",
    "text": "Exercise 1\n\n\n{ggtext} also comes with some new geom’s. Explore those and other options on the package webpage: wilkelab.rg/ggtext.\nCreate the following visualization, as close as possible, with the penguins dataset which is provided by the {palmerpenguins} package.\n\nFor the species labels, you likely have to create a summary data set.\nUse the {ggtext} geometries and theme elements to format the labels.\nAlso, make use of the other components such as scales, original theme, and theme customization."
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#the-data-set",
    "href": "materials/solutions/05_annotations_ex1_solution.html#the-data-set",
    "title": "Graphic Design with ggplot2",
    "section": "The Data Set",
    "text": "The Data Set\n\n# install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\n\npenguins\n\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# … with 334 more rows, and 2 more variables: sex <fct>, year <int>"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#create-a-labeled-bubble-chart",
    "href": "materials/solutions/05_annotations_ex1_solution.html#create-a-labeled-bubble-chart",
    "title": "Graphic Design with ggplot2",
    "section": "Create a Labeled Bubble Chart",
    "text": "Create a Labeled Bubble Chart\n\nggplot(\n    penguins,\n    aes(x = bill_length_mm, y = bill_depth_mm,\n        color = species, size = body_mass_g)\n  ) +\n  geom_point(alpha = .2) +\n  labs(\n    x = \"Bill length (mm)\",\n    y = \"Bill depth (mm)\",\n    title = \"Bill dimensions of brush-tailed penguins Pygoscelis spec.\",\n    caption = \"Horst AM, Hill AP, Gorman KB (2020). palmerpenguins R package version 0.1.0\"\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#a-labelled-bubble-plot",
    "href": "materials/solutions/05_annotations_ex1_solution.html#a-labelled-bubble-plot",
    "title": "Graphic Design with ggplot2",
    "section": "A Labelled Bubble Plot",
    "text": "A Labelled Bubble Plot"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#add-a-custom-theme",
    "href": "materials/solutions/05_annotations_ex1_solution.html#add-a-custom-theme",
    "title": "Graphic Design with ggplot2",
    "section": "Add a Custom Theme",
    "text": "Add a Custom Theme\n\nggplot(\n    penguins,\n    aes(x = bill_length_mm, y = bill_depth_mm,\n        color = species, size = body_mass_g)\n  ) +\n  geom_point(alpha = .2) +\n  labs(\n    x = \"Bill length (mm)\",\n    y = \"Bill depth (mm)\",\n    title = \"Bill dimensions of brush-tailed penguins Pygoscelis spec.\",\n    caption = \"Horst AM, Hill AP, Gorman KB (2020). palmerpenguins R package version 0.1.0\"\n  ) +\n  theme_minimal(base_size = 10, base_family = \"Roboto Condensed\") +\n  theme(\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    panel.grid.minor = element_blank()\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#add-a-custom-theme-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#add-a-custom-theme-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add a Custom Theme",
    "text": "Add a Custom Theme"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#add-an-outline",
    "href": "materials/solutions/05_annotations_ex1_solution.html#add-an-outline",
    "title": "Graphic Design with ggplot2",
    "section": "Add an Outline",
    "text": "Add an Outline\n\np1 <-\n  ggplot(\n    penguins,\n    aes(x = bill_length_mm, y = bill_depth_mm,\n        color = species, size = body_mass_g)\n  ) +\n  geom_point(alpha = .2, stroke = .3) +\n  geom_point(shape = 1, stroke = .3) +\n  labs(\n    x = \"Bill length (mm)\",\n    y = \"Bill depth (mm)\",\n    title = \"Bill dimensions of brush-tailed penguins Pygoscelis spec.\",\n    caption = \"Horst AM, Hill AP, Gorman KB (2020). palmerpenguins R package version 0.1.0\"\n  ) +\n  theme_minimal(base_size = 10, base_family = \"Roboto Condensed\") +\n  theme(\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    panel.grid.minor = element_blank()\n  )\n\np1"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#add-an-outline-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#add-an-outline-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add an Outline",
    "text": "Add an Outline"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-color-legend",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-color-legend",
    "title": "Graphic Design with ggplot2",
    "section": "Style Color Legend",
    "text": "Style Color Legend\n\np1 +\n  scale_color_manual(\n    name = \"Species:\",\n    values = c(\"#FF8C00\", \"#A034F0\", \"#159090\")\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-color-legend-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-color-legend-1",
    "title": "Graphic Design with ggplot2",
    "section": "Style Color Legend",
    "text": "Style Color Legend"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-size-legend",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-size-legend",
    "title": "Graphic Design with ggplot2",
    "section": "Style Size Legend",
    "text": "Style Size Legend\n\np2 <- p1 +\n  scale_color_manual(\n    name = \"Species:\",\n    values = c(\"#FF8C00\", \"#A034F0\", \"#159090\")\n  ) +\n  scale_size(\n    name = \"Body mass:\",\n    breaks = 3:6 * 1000,\n    labels = function(x) paste(x / 1000, \"kg\"),\n    range = c(.5, 5)\n  )\n\np2"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-size-legend-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-size-legend-1",
    "title": "Graphic Design with ggplot2",
    "section": "Style Size Legend",
    "text": "Style Size Legend"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#adjust-axes",
    "href": "materials/solutions/05_annotations_ex1_solution.html#adjust-axes",
    "title": "Graphic Design with ggplot2",
    "section": "Adjust Axes",
    "text": "Adjust Axes\n\np2 +\n  scale_x_continuous(\n    limits = c(30, 60),\n    breaks = 6:12*5,\n    expand = c(0, 0)\n  ) +\n  scale_y_continuous(\n    limits = c(12.5, 22.5),\n    breaks = seq(12.5, 22.5, by = 2.5),\n    expand = c(0, 0)\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#adjust-axes-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#adjust-axes-1",
    "title": "Graphic Design with ggplot2",
    "section": "Adjust Axes",
    "text": "Adjust Axes"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#adjust-axes-2",
    "href": "materials/solutions/05_annotations_ex1_solution.html#adjust-axes-2",
    "title": "Graphic Design with ggplot2",
    "section": "Adjust Axes",
    "text": "Adjust Axes\n\np3 <- p2 +\n  coord_cartesian(\n    expand = FALSE,\n    clip = \"off\"\n  ) +\n  scale_x_continuous(\n    limits = c(30, 60),\n    breaks = 6:12*5\n  ) +\n  scale_y_continuous(\n    limits = c(12.5, 22.5),\n    breaks = seq(12.5, 22.5, by = 2.5)\n  )\n\np3"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#adjust-axes-3",
    "href": "materials/solutions/05_annotations_ex1_solution.html#adjust-axes-3",
    "title": "Graphic Design with ggplot2",
    "section": "Adjust Axes",
    "text": "Adjust Axes"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#fixed-coordinate-system",
    "href": "materials/solutions/05_annotations_ex1_solution.html#fixed-coordinate-system",
    "title": "Graphic Design with ggplot2",
    "section": "Fixed Coordinate System?",
    "text": "Fixed Coordinate System?\n\np2 +\n  coord_fixed(\n    expand = FALSE,\n    clip = \"off\"\n  ) +\n  scale_x_continuous(\n    limits = c(30, 60),\n    breaks = 6:12*5\n  ) +\n  scale_y_continuous(\n    limits = c(12.5, 22.5),\n    breaks = seq(12.5, 22.5, by = 2.5)\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#fixed-coordinate-system-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#fixed-coordinate-system-1",
    "title": "Graphic Design with ggplot2",
    "section": "Fixed Coordinate System?",
    "text": "Fixed Coordinate System?"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#format-labels-with-ggtext",
    "href": "materials/solutions/05_annotations_ex1_solution.html#format-labels-with-ggtext",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels with {ggtext}",
    "text": "Format Labels with {ggtext}\n\np3 +\n  labs(\n    x = \"Bill length *(mm)*\",\n    y = \"Bill depth *(mm)*\",\n    title = \"Bill dimensions of brush-tailed penguins *Pygoscelis spec.*\",\n    caption = \"Horst AM, Hill AP, Gorman KB (2020). <span style='font-family:tabular;'>palmerpenguins</span> R package version 0.1.0\"\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#format-labels-with-ggtext-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#format-labels-with-ggtext-1",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels with {ggtext}",
    "text": "Format Labels with {ggtext}"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#format-labels-with-ggtext-2",
    "href": "materials/solutions/05_annotations_ex1_solution.html#format-labels-with-ggtext-2",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels with {ggtext}",
    "text": "Format Labels with {ggtext}\n\nlibrary(ggtext)\n\np4 <- p3 +\n  labs(\n    x = \"Bill length *(mm)*\",\n    y = \"Bill depth *(mm)*\",\n    title = \"Bill dimensions of brush-tailed penguins *Pygoscelis spec.*\",\n    caption = \"Horst AM, Hill AP, Gorman KB (2020). <span style='font-family:tabular;'>palmerpenguins</span> R package version 0.1.0\"\n  ) +\n  theme(\n    plot.title = element_markdown(\n      face = \"bold\", size = 16, margin = margin(12, 0, 12, 0)\n    ),\n    plot.caption = element_markdown(\n      size = 7, color = \"grey50\", margin = margin(12, 0, 6, 0)\n    ),\n    axis.title.x = element_markdown(margin = margin(t = 8)),\n    axis.title.y = element_markdown(margin = margin(r = 8))\n  )\n\np4"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#format-labels-with-ggtext-3",
    "href": "materials/solutions/05_annotations_ex1_solution.html#format-labels-with-ggtext-3",
    "title": "Graphic Design with ggplot2",
    "section": "Format Labels with {ggtext}",
    "text": "Format Labels with {ggtext}"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-other-theme-elements",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-other-theme-elements",
    "title": "Graphic Design with ggplot2",
    "section": "Style Other Theme Elements",
    "text": "Style Other Theme Elements\n\np5 <- p4 +\n  theme(\n    axis.text = element_text(family = \"Tabular\"),\n    legend.text = element_text(color = \"grey50\"),\n    plot.margin = margin(0, 14, 0, 12),\n    plot.background = element_rect(fill = NA, color = \"grey50\", size = 1)\n  )\n\np5"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-other-theme-elements-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-other-theme-elements-1",
    "title": "Graphic Design with ggplot2",
    "section": "Style Other Theme Elements",
    "text": "Style Other Theme Elements"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#create-the-summary-data",
    "href": "materials/solutions/05_annotations_ex1_solution.html#create-the-summary-data",
    "title": "Graphic Design with ggplot2",
    "section": "Create the Summary Data",
    "text": "Create the Summary Data\n\nlibrary(tidyverse)\n\npenguins_labs <-\n  penguins %>%\n  group_by(species) %>%\n  summarize(across(starts_with(\"bill\"), ~ mean(.x, na.rm = TRUE))) %>%\n  mutate(\n    species_lab = case_when(\n      species == \"Adelie\" ~ \"<b style='font-size:15pt;'>*P. adéliae*</b><br>(Adélie penguin)\",\n      species == \"Chinstrap\" ~ \"<b style='font-size:15pt;'>*P. antarctica*</b><br>(Chinstrap penguin)\",\n      species == \"Gentoo\" ~ \"<b style='font-size:15pt;'>*P. papua*</b><br>(Gentoo penguin)\"\n    )\n  )\n\npenguins_labs\n\n# A tibble: 3 × 4\n  species   bill_length_mm bill_depth_mm species_lab                            \n  <fct>              <dbl>         <dbl> <chr>                                  \n1 Adelie              38.8          18.3 <b style='font-size:15pt;'>*P. adéliae…\n2 Chinstrap           48.8          18.4 <b style='font-size:15pt;'>*P. antarct…\n3 Gentoo              47.5          15.0 <b style='font-size:15pt;'>*P. papua*<…"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#add-species-annotations",
    "href": "materials/solutions/05_annotations_ex1_solution.html#add-species-annotations",
    "title": "Graphic Design with ggplot2",
    "section": "Add Species Annotations",
    "text": "Add Species Annotations\n\np5 +\n  geom_richtext(\n    data = penguins_labs,\n    aes(label = species_lab),\n    color = \"black\", size = 3\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#add-species-annotations-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#add-species-annotations-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Species Annotations",
    "text": "Add Species Annotations"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-species-annotations",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-species-annotations",
    "title": "Graphic Design with ggplot2",
    "section": "Style Species Annotations",
    "text": "Style Species Annotations\n\np5 +\n  geom_richtext(\n    data = penguins_labs,\n    aes(label = species_lab),\n    color = \"black\", size = 3,\n    family = \"Roboto Condensed\",\n    lineheight = .8,\n    fill = \"#ffffffab\", ## hex-alpha code\n    show.legend = FALSE\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-species-annotations-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-species-annotations-1",
    "title": "Graphic Design with ggplot2",
    "section": "Style Species Annotations",
    "text": "Style Species Annotations"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-species-annotations-2",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-species-annotations-2",
    "title": "Graphic Design with ggplot2",
    "section": "Style Species Annotations",
    "text": "Style Species Annotations\n\np5 +\n  geom_richtext(\n    data = penguins_labs,\n    aes(label = species_lab,\n        color = species,\n        color = after_scale(colorspace::darken(color, .4))),\n    family = \"Roboto Condensed\",\n    size = 3, lineheight = .8,\n    fill = \"#ffffffab\",\n    show.legend = FALSE\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#style-species-annotations-3",
    "href": "materials/solutions/05_annotations_ex1_solution.html#style-species-annotations-3",
    "title": "Graphic Design with ggplot2",
    "section": "Style Species Annotations",
    "text": "Style Species Annotations"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#and-remove-color-legend",
    "href": "materials/solutions/05_annotations_ex1_solution.html#and-remove-color-legend",
    "title": "Graphic Design with ggplot2",
    "section": "… and Remove Color Legend",
    "text": "… and Remove Color Legend\n\np5 +\n  geom_richtext(\n    data = penguins_labs,\n    aes(label = species_lab,\n        color = species,\n        color = after_scale(colorspace::darken(color, .4))),\n    family = \"Roboto Condensed\",\n    size = 3, lineheight = .8,\n    fill = \"#ffffffab\", ## hex-alpha code\n    show.legend = FALSE\n  ) +\n  scale_color_manual(\n    guide = \"none\",\n    values = c(\"#FF8C00\", \"#A034F0\", \"#159090\")\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#and-remove-color-legend-1",
    "href": "materials/solutions/05_annotations_ex1_solution.html#and-remove-color-legend-1",
    "title": "Graphic Design with ggplot2",
    "section": "… and Remove Color Legend",
    "text": "… and Remove Color Legend"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex1_solution.html#full-code",
    "href": "materials/solutions/05_annotations_ex1_solution.html#full-code",
    "title": "Graphic Design with ggplot2",
    "section": "Full Code",
    "text": "Full Code\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggtext)\n\npenguins_labs <-\n  penguins %>%\n  group_by(species) %>%\n  summarize(across(starts_with(\"bill\"), ~ mean(.x, na.rm = TRUE))) %>%\n  mutate(\n    species_lab = case_when(\n      species == \"Adelie\" ~ \"<b style='font-size:15pt;'>*P. adéliae*</b><br>(Adélie penguin)\",\n      species == \"Chinstrap\" ~ \"<b style='font-size:15pt;'>*P. antarctica*</b><br>(Chinstrap penguin)\",\n      species == \"Gentoo\" ~ \"<b style='font-size:15pt;'>*P. papua*</b><br>(Gentoo penguin)\"\n    )\n  )\n\nggplot(\n    penguins,\n    aes(x = bill_length_mm, y = bill_depth_mm,\n        color = species, size = body_mass_g)\n  ) +\n  geom_point(alpha = .2, stroke = .3) +\n  geom_point(shape = 1, stroke = .3) +\n  geom_richtext(\n    data = penguins_labs,\n    aes(label = species_lab,\n        color = species,\n        color = after_scale(colorspace::darken(color, .4))),\n    family = \"Roboto Condensed\",\n    size = 3, lineheight = .8,\n    fill = \"#ffffffab\", ## hex-alpha code\n    show.legend = FALSE\n  ) +\n  coord_cartesian(\n    expand = FALSE,\n    clip = \"off\"\n  )  +\n  scale_x_continuous(\n    limits = c(30, 60),\n    breaks = 6:12*5\n  ) +\n  scale_y_continuous(\n    limits = c(12.5, 22.5),\n    breaks = seq(12.5, 22.5, by = 2.5)\n  ) +\n  scale_color_manual(\n    guide = \"none\",\n    values = c(\"#FF8C00\", \"#A034F0\", \"#159090\")\n  ) +\n  scale_size(\n    name = \"Body mass:\",\n    breaks = 3:6 * 1000,\n    labels = function(x) paste(x / 1000, \"kg\"),\n    range = c(.25, 4.5)\n  ) +\n  labs(\n    x = \"Bill length *(mm)*\",\n    y = \"Bill depth *(mm)*\",\n    title = \"Bill dimensions of brush-tailed penguins *Pygoscelis spec.*\",\n    caption = \"Horst AM, Hill AP, Gorman KB (2020). <span style='font-family:tabular;'>palmerpenguins</span> R package version 0.1.0\"\n  ) +\n  theme_minimal(\n    base_size = 10, base_family = \"Roboto Condensed\"\n  ) +\n  theme(\n    plot.title = element_markdown(\n      face = \"bold\", size = 16, margin = margin(12, 0, 12, 0)\n    ),\n    plot.title.position = \"plot\",\n    plot.caption = element_markdown(\n      size = 7, color = \"grey50\",\n      margin = margin(12, 0, 6, 0)\n    ),\n    plot.caption.position = \"plot\",\n    axis.text = element_text(family = \"Tabular\"),\n    axis.title.x = element_markdown(margin = margin(t = 8)),\n    axis.title.y = element_markdown(margin = margin(r = 8)),\n    panel.grid.minor = element_blank(),\n    legend.text = element_text(color = \"grey50\"),\n    plot.margin = margin(0, 14, 0, 12),\n    plot.background = element_rect(fill = NA, color = \"grey50\", size = 1)\n  )\n\n\n\nCédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#load-and-modify-image",
    "href": "materials/solutions/05_annotations_ex2_solution.html#load-and-modify-image",
    "title": "Graphic Design with ggplot2",
    "section": "Load and Modify Image",
    "text": "Load and Modify Image\n\nskyline <- magick::image_read(here::here(\"materials\", \"exercises\", \"img\", \"rstudioconf-washington-bg.png\"))\n\nskyline"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#create-a-blue-dot",
    "href": "materials/solutions/05_annotations_ex2_solution.html#create-a-blue-dot",
    "title": "Graphic Design with ggplot2",
    "section": "Create a Blue Dot",
    "text": "Create a Blue Dot\n\n\nlibrary(tidyverse)\n\nggplot(mapping = aes(x = 0, y = 0)) +\n  geom_point(\n    color = \"#71a5d4\", size = 150\n  ) +\n  xlim(-5, 5) +\n  ylim(-5, 5) +\n  theme_void()"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#add-the-r",
    "href": "materials/solutions/05_annotations_ex2_solution.html#add-the-r",
    "title": "Graphic Design with ggplot2",
    "section": "Add the “R”",
    "text": "Add the “R”\n\n\nggplot(mapping = aes(x = 0, y = 0)) +\n  geom_point(\n    color = \"#71a5d4\", size = 150\n  ) +\n  geom_text(\n    label = \"R\", size = 80,\n    family = \"Tabular\",\n    color = \"white\"\n  ) +\n  xlim(-5, 5) +\n  ylim(-5, 5) +\n  theme_void()"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#add-the-rstudioconf-skyline",
    "href": "materials/solutions/05_annotations_ex2_solution.html#add-the-rstudioconf-skyline",
    "title": "Graphic Design with ggplot2",
    "section": "Add the rstudio::conf Skyline",
    "text": "Add the rstudio::conf Skyline\n\n\nggplot(mapping = aes(x = 0, y = 0)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = skyline,\n      x = .5,\n      y = .5\n    )\n  ) +\n  geom_point(\n    color = \"#71a5d4\", size = 150\n  ) +\n  geom_text(\n    label = \"R\", size = 80,\n    family = \"Tabular\",\n    color = \"white\"\n  ) +\n  xlim(-5, 5) +\n  ylim(-5, 5) +\n  theme_void()"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#position-the-rstudioconf-skyline",
    "href": "materials/solutions/05_annotations_ex2_solution.html#position-the-rstudioconf-skyline",
    "title": "Graphic Design with ggplot2",
    "section": "Position the rstudio::conf Skyline",
    "text": "Position the rstudio::conf Skyline\n\n\nggplot(mapping = aes(x = 0, y = 0)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = skyline,\n      x = .5,\n      y = .1\n    )\n  ) +\n  geom_point(\n    color = \"#71a5d4\", size = 150\n  ) +\n  geom_text(\n    label = \"R\", size = 80,\n    family = \"Tabular\",\n    color = \"white\"\n  ) +\n  xlim(-5, 5) +\n  ylim(-7.5, 5) +\n  theme_void()"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#position-the-rstudioconf-skyline-1",
    "href": "materials/solutions/05_annotations_ex2_solution.html#position-the-rstudioconf-skyline-1",
    "title": "Graphic Design with ggplot2",
    "section": "Position the rstudio::conf Skyline",
    "text": "Position the rstudio::conf Skyline\n\n\nggplot(mapping = aes(x = 0, y = 0)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = skyline,\n      x = .5,\n      y = -.2\n    )\n  )  +\n  geom_point(\n    color = \"#71a5d4\", size = 150\n  ) +\n  geom_text(\n    label = \"R\", size = 80,\n    family = \"Tabular\",\n    color = \"white\"\n  ) +\n  coord_cartesian(clip = \"off\") +\n  xlim(-5, 5) +\n  ylim(-5, 5) +\n  theme_void() +\n  theme(\n    plot.margin = margin(t = 30, b = 120)\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#change-background-color",
    "href": "materials/solutions/05_annotations_ex2_solution.html#change-background-color",
    "title": "Graphic Design with ggplot2",
    "section": "Change Background Color",
    "text": "Change Background Color\n\n\nggplot(mapping = aes(x = 0, y = 0)) +\n  annotation_custom(\n    grid::rasterGrob(\n      image = skyline,\n      x = .5,\n      y = .1\n    )\n  ) +\n  geom_point(\n    color = \"#71a5d4\", size = 150\n  ) +\n  geom_text(\n    label = \"R\", size = 80,\n    family = \"Tabular\",\n    color = \"white\"\n  ) +\n  xlim(-5, 5) +\n  ylim(-7.5, 5) +\n  theme_void() +\n  theme(\n    plot.background = element_rect(\n      fill = \"#fffdf9\", color = \"#fffdf9\"\n    )\n  )"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#save-the-plot",
    "href": "materials/solutions/05_annotations_ex2_solution.html#save-the-plot",
    "title": "Graphic Design with ggplot2",
    "section": "Save the Plot",
    "text": "Save the Plot\n\nggsave(here::here(\"exercises\", \"plots\", \"05_annotations_ex2.png\"),\n       width = 5, height = 6, dpi = 300)"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#or-combine-images-with-magick",
    "href": "materials/solutions/05_annotations_ex2_solution.html#or-combine-images-with-magick",
    "title": "Graphic Design with ggplot2",
    "section": "Or: Combine Images with {magick}",
    "text": "Or: Combine Images with {magick}\n\ng <- ggplot(mapping = aes(x = 0, y = 0)) +\n  geom_point(color = \"#71a5d4\", size = 150) +\n  geom_text(\n    label = \"R\", size = 80,\n    family = \"Tabular\", color = \"white\"\n  ) +\n  theme_void()  +\n  theme(plot.background = element_rect(fill = \"#fffdf9\", color = \"#fffdf9\"))\n\n\nggsave(plot = g, filename = here::here(\"exercises\", \"img\", \"rstudio-dot.png\"),\n       width = 5, height = 5, dpi = 3600)"
  },
  {
    "objectID": "materials/solutions/05_annotations_ex2_solution.html#or-combine-images-with-magick-1",
    "href": "materials/solutions/05_annotations_ex2_solution.html#or-combine-images-with-magick-1",
    "title": "Graphic Design with ggplot2",
    "section": "Or: Combine Images with {magick}",
    "text": "Or: Combine Images with {magick}\n\nlibrary(magick)\n\ndot <- image_read(here::here(\"exercises\", \"img\", \"rstudio-dot.png\"))\nimg <- c(dot, skyline)\nimg <- image_append(image_scale(img, \"1500\"), stack = TRUE)\nimage_write(img, path = here::here(\"exercises\", \"plots\", \"05_annotations_ex2_combined.png\"), format = \"png\")"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#exercise",
    "href": "materials/solutions/06_colors_ex1_solution.html#exercise",
    "title": "Graphic Design with ggplot2",
    "section": "Exercise",
    "text": "Exercise\n\n\nCreate a similar visualization as close as possible:"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#import-the-data-set",
    "href": "materials/solutions/06_colors_ex1_solution.html#import-the-data-set",
    "title": "Graphic Design with ggplot2",
    "section": "Import the Data Set",
    "text": "Import the Data Set\n\nlibrary(tidyverse)\n\nbikes <- readr::read_csv(\n  \"https://raw.githubusercontent.com/z3tt/graphic-design-ggplot2/main/data/london-bikes-custom.csv\",\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#create-sina-plot",
    "href": "materials/solutions/06_colors_ex1_solution.html#create-sina-plot",
    "title": "Graphic Design with ggplot2",
    "section": "Create Sina Plot",
    "text": "Create Sina Plot\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  ggforce::geom_sina(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  theme_minimal(\n    base_size = 18,\n    base_family = \"Cabinet Grotesk\"\n  )"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#create-sina-plot-1",
    "href": "materials/solutions/06_colors_ex1_solution.html#create-sina-plot-1",
    "title": "Graphic Design with ggplot2",
    "section": "Create Sina Plot",
    "text": "Create Sina Plot"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#add-errorbars",
    "href": "materials/solutions/06_colors_ex1_solution.html#add-errorbars",
    "title": "Graphic Design with ggplot2",
    "section": "Add Errorbars",
    "text": "Add Errorbars\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  ggforce::geom_sina(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  stat_summary(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    size = .8\n  ) +\n  theme_minimal(\n    base_size = 18,\n    base_family = \"Cabinet Grotesk\"\n  )"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#add-errorbars-1",
    "href": "materials/solutions/06_colors_ex1_solution.html#add-errorbars-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Errorbars",
    "text": "Add Errorbars"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#use-lighter-point-colors",
    "href": "materials/solutions/06_colors_ex1_solution.html#use-lighter-point-colors",
    "title": "Graphic Design with ggplot2",
    "section": "Use Lighter Point Colors",
    "text": "Use Lighter Point Colors\n\nggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  ggforce::geom_sina(\n    aes(color = stage(\n      day_night,\n      after_scale = lighten(color, .6)\n    )),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  stat_summary(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    size = .8\n  ) +\n  theme_minimal(\n    base_size = 18,\n    base_family = \"Cabinet Grotesk\"\n  )"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#use-lighter-point-colors-1",
    "href": "materials/solutions/06_colors_ex1_solution.html#use-lighter-point-colors-1",
    "title": "Graphic Design with ggplot2",
    "section": "Use Lighter Point Colors",
    "text": "Use Lighter Point Colors"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#use-standard-deviation",
    "href": "materials/solutions/06_colors_ex1_solution.html#use-standard-deviation",
    "title": "Graphic Design with ggplot2",
    "section": "Use Standard Deviation",
    "text": "Use Standard Deviation\n\np1 <- ggplot(\n    bikes,\n    aes(x = season, y = count)\n  ) +\n  ggforce::geom_sina(\n    aes(color = stage(\n      day_night,\n      after_scale = lighten(color, .6)\n    )),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  stat_summary(\n    aes(color = day_night),\n    fun = mean,\n    fun.max = function(y) mean(y) + sd(y),\n    fun.min = function(y) mean(y) - sd(y),\n    position = position_dodge(width = .6),\n    size = .8\n  ) +\n  theme_minimal(\n    base_size = 18,\n    base_family = \"Cabinet Grotesk\"\n  )\n\np1"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#add-annotations",
    "href": "materials/solutions/06_colors_ex1_solution.html#add-annotations",
    "title": "Graphic Design with ggplot2",
    "section": "Add Annotations",
    "text": "Add Annotations"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#add-annotations-1",
    "href": "materials/solutions/06_colors_ex1_solution.html#add-annotations-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Annotations",
    "text": "Add Annotations\n\np2 <- p1 +\n  stat_summary(\n    geom = \"text\",\n    aes(\n      color = day_night,\n      label = paste0(\n        sprintf(\"%2.1f\", stat(y) / 1000), \"K\"\n      )\n    ),\n    position = position_dodge(width = .6),\n    hjust = -.2, family = \"Tabular\",\n    size = 5.5, fontface = \"bold\"\n  )\n\np2"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#add-annotations-2",
    "href": "materials/solutions/06_colors_ex1_solution.html#add-annotations-2",
    "title": "Graphic Design with ggplot2",
    "section": "Add Annotations",
    "text": "Add Annotations"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#adjust-axes-clipping",
    "href": "materials/solutions/06_colors_ex1_solution.html#adjust-axes-clipping",
    "title": "Graphic Design with ggplot2",
    "section": "Adjust Axes + Clipping",
    "text": "Adjust Axes + Clipping\n\np3 <- p2 +\n  coord_cartesian(clip = \"off\") +\n  scale_x_discrete(\n    labels = str_to_title\n  ) +\n  scale_y_continuous(\n    labels = scales::comma_format(),\n    expand = c(0, 0),\n    limits = c(0, NA)\n  )\n\np3"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#adjust-axes-clipping-1",
    "href": "materials/solutions/06_colors_ex1_solution.html#adjust-axes-clipping-1",
    "title": "Graphic Design with ggplot2",
    "section": "Adjust Axes + Clipping",
    "text": "Adjust Axes + Clipping"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#add-colors-labels",
    "href": "materials/solutions/06_colors_ex1_solution.html#add-colors-labels",
    "title": "Graphic Design with ggplot2",
    "section": "Add Colors + Labels",
    "text": "Add Colors + Labels\n\ncolors <- c(\"#987708\", \"#663399\")\n\np4 <- p3  +\n  scale_color_manual(\n    values = colors\n  ) +\n  labs(\n    x = NULL, y = NULL,\n    title = paste0(\"Reported bike shares in London during <span style='color:\", colors[1], \";'>day</span> and <span style='color:\", colors[2], \";'>night</span> times\"),\n    subtitle = \"TfL bike sharing data from 2015 to 2016 per season and time of day.\\nErrorbars show the mean ± standard deviation.\"\n  )\n\np4"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#add-colors-labels-1",
    "href": "materials/solutions/06_colors_ex1_solution.html#add-colors-labels-1",
    "title": "Graphic Design with ggplot2",
    "section": "Add Colors + Labels",
    "text": "Add Colors + Labels"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#theme-styling",
    "href": "materials/solutions/06_colors_ex1_solution.html#theme-styling",
    "title": "Graphic Design with ggplot2",
    "section": "Theme Styling",
    "text": "Theme Styling\n\np4 +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\",\n    plot.title = ggtext::element_markdown(face = \"bold\", size = 26),\n    plot.subtitle = element_text(color = \"grey30\", margin = margin(t = 6, b = 12)),\n    axis.text.x = element_text(size = 17, face = \"bold\"),\n    axis.text.y = element_text(family = \"Tabular\"),\n    axis.line.x = element_line(size = 1.2, color = \"grey65\"),\n    plot.margin = margin(rep(15, 4))\n  )"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#theme-styling-1",
    "href": "materials/solutions/06_colors_ex1_solution.html#theme-styling-1",
    "title": "Graphic Design with ggplot2",
    "section": "Theme Styling",
    "text": "Theme Styling"
  },
  {
    "objectID": "materials/solutions/06_colors_ex1_solution.html#full-code",
    "href": "materials/solutions/06_colors_ex1_solution.html#full-code",
    "title": "Graphic Design with ggplot2",
    "section": "Full Code",
    "text": "Full Code\n\nlibrary(tidyverse)\nlibrary(colorspace)\nlibrary(ggtext)\n\nbikes <- readr::read_csv(\n  \"https://raw.githubusercontent.com/z3tt/graphic-design-ggplot2/main/data/london-bikes-custom.csv\",\n  col_types = \"Dcfffilllddddc\"\n)\n\nbikes$season <- forcats::fct_inorder(bikes$season)\n\ncolors <- c(\"#987708\", \"#663399\")\n\nggplot(bikes, aes(x = season, y = count)) +\n  ggforce::geom_sina(\n    aes(\n      color = stage(\n        day_night, after_scale = lighten(color, .6)\n    )),\n    position = position_dodge(width = .6),\n    alpha = .5\n  ) +\n  stat_summary(\n    aes(color = day_night),\n    position = position_dodge(width = .6),\n    fun = mean,\n    fun.max = function(y) mean(y) + sd(y),\n    fun.min = function(y) mean(y) - sd(y),\n    size = .8\n  ) +\n  stat_summary(\n    geom = \"text\",\n    aes(\n      color = day_night,\n      label = paste0(sprintf(\"%2.1f\", stat(y) / 1000), \"K\")\n    ),\n    position = position_dodge(width = .6),\n    hjust = -.2, size = 5.5, family = \"Tabular\", fontface = \"bold\"\n  ) +\n  coord_cartesian(clip = \"off\") +\n  scale_x_discrete(\n    labels = str_to_title\n  ) +\n  scale_y_continuous(\n    labels = scales::comma_format(),\n    expand = c(0, 0),\n    limits = c(0, NA)\n  ) +\n  scale_color_manual(values = colors) +\n  labs(\n    x = NULL, y = NULL,\n    title = paste0(\"Reported bike shares in London during <span style='color:\", colors[1], \";'>day</span> and <span style='color:\", colors[2], \";'>night</span> times\"),\n    subtitle = \"TfL bike sharing data from 2015 to 2016 per season and time of day.\\nErrorbars show the mean ± standard deviation.\"\n  ) +\n  theme_minimal(base_size = 18, base_family = \"Cabinet Grotesk\") +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\",\n    plot.title = element_markdown(face = \"bold\", size = 26),\n    plot.subtitle = element_text(color = \"grey30\", margin = margin(t = 6, b = 12)),\n    axis.text.x = element_text(size = 17, face = \"bold\"),\n    axis.text.y = element_text(family = \"Tabular\"),\n    axis.line.x = element_line(size = 1.2, color = \"grey65\"),\n    plot.margin = margin(rep(15, 4))\n  )\n\n\n\nCédric Scherer // rstudio::conf // July 2022"
  },
  {
    "objectID": "modules/d1-01_introduction.html",
    "href": "modules/d1-01_introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Introduction\n\nAdvantages of {ggplot2}\n\nThe {ggplot2} Showcase\nA Step-by-Step Example"
  },
  {
    "objectID": "modules/d1-01_introduction.html#slides",
    "href": "modules/d1-01_introduction.html#slides",
    "title": "Introduction",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "modules/d1-02_concepts_pt1.html",
    "href": "modules/d1-02_concepts_pt1.html",
    "title": "Concepts of the {ggplot2} Package Pt. 1:Data, Aesthetics, and Layers + Misc Stuff",
    "section": "",
    "text": "The Grammar of {ggplot2}\nA Basic ggplot Example\n\nThe Data\nAesthetic Mapping\naesthetics\n\nGeometrical Layers\n\nGeometries\nVisual Properties of Layers\nSetting vs Mapping of Visual Properties\nMapping Expressions\nQuick Exercise\nMapping Expressions\nMapping to Size\nSetting a Constant Property\nFilter Data\nLocal vs. Global Encoding\nAdding More Layers\nGlobal Color Encoding\nLocal Color Encoding\nThe `group` Aesthetic\nSet Both as Global Aesthetics\nOverwrite Global Aesthetics\n\nExtending a ggplot\n\nStore a ggplot as Object\nInspect a ggplot Object\nExtend a ggplot Object: Add Layers\nRemove a Layer from the Legend\nExtend a ggplot Object: Add Labels\n\nA Polished ggplot Example\n\nExtend a ggplot Object: Themes\nSet a Theme Globally\nChange the Theme Base Settings\nOverwrite Specific Theme Settings\nSave the Graphic\nHow to Work with Aspect Ratios\nSetting Plot Sizes in Rmd’s"
  },
  {
    "objectID": "modules/d1-02_concepts_pt1.html#slides",
    "href": "modules/d1-02_concepts_pt1.html#slides",
    "title": "Concepts of the {ggplot2} Package Pt. 1:Data, Aesthetics, and Layers + Misc Stuff",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "modules/d1-02_concepts_pt1.html#exercises",
    "href": "modules/d1-02_concepts_pt1.html#exercises",
    "title": "Concepts of the {ggplot2} Package Pt. 1:Data, Aesthetics, and Layers + Misc Stuff",
    "section": "Exercises",
    "text": "Exercises"
  },
  {
    "objectID": "modules/d1-03_coffee_break.html",
    "href": "modules/d1-03_coffee_break.html",
    "title": "Coffee break",
    "section": "",
    "text": "If you have questions during the break please come to any of the TAs."
  },
  {
    "objectID": "modules/d1-04_concepts_p1_ex.html",
    "href": "modules/d1-04_concepts_p1_ex.html",
    "title": "Concepts of the {ggplot2} Package Pt. 1:Continued",
    "section": "",
    "text": "Your Turn!"
  },
  {
    "objectID": "modules/d1-04_concepts_p1_ex.html#slides",
    "href": "modules/d1-04_concepts_p1_ex.html#slides",
    "title": "Concepts of the {ggplot2} Package Pt. 1:Continued",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "modules/d1-04_concepts_p1_ex.html#exercises",
    "href": "modules/d1-04_concepts_p1_ex.html#exercises",
    "title": "Concepts of the {ggplot2} Package Pt. 1:Continued",
    "section": "Exercises",
    "text": "Exercises"
  },
  {
    "objectID": "modules/d1-05_concepts_pt2.html",
    "href": "modules/d1-05_concepts_pt2.html",
    "title": "Concepts of the {ggplot2} Package Pt. 2:Facets, Scales, and Coordinate System",
    "section": "",
    "text": "Facets\nSea of Tranquility\nFacet Multiple Variables\nFacet Options: Cols + Rows\nFacet Options: Free Scaling\nFacet Options: Switch Labels\nGridded Facet\nFacet Multiple Variables\nFacet Options: Proportional Spacing"
  },
  {
    "objectID": "modules/d1-05_concepts_pt2.html#slides",
    "href": "modules/d1-05_concepts_pt2.html#slides",
    "title": "Concepts of the {ggplot2} Package Pt. 2:Facets, Scales, and Coordinate System",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "modules/d1-05_concepts_pt2.html#exercises",
    "href": "modules/d1-05_concepts_pt2.html#exercises",
    "title": "Concepts of the {ggplot2} Package Pt. 2:Facets, Scales, and Coordinate System",
    "section": "Exercises",
    "text": "Exercises"
  },
  {
    "objectID": "modules/d1-06_lunch_break.html",
    "href": "modules/d1-06_lunch_break.html",
    "title": "Lunch break",
    "section": "",
    "text": "Warning\n\n\n\nPlease avoid questions during the breaks to give us a chance to recover and reflect - anything other than course material is however strongly encouraged! 😋"
  },
  {
    "objectID": "modules/d1-07_concepts_pt2.html",
    "href": "modules/d1-07_concepts_pt2.html",
    "title": "Concepts of the {ggplot2} Package Pt. 2:Facets, Scales, and Coordinate System (Continued)",
    "section": "",
    "text": "Scales\nContinuous vs. Discrete in {ggplot2}\nContinuous:quantitative or numerical data\nDiscrete:qualitative or categorical data\nAesthetics + Scales\n`scale_x|y_continuous`\n`scale_x|y_date`\n`scale_x|y_date` with `strftime()`\n`scale_x|y_discrete`\nDiscrete or Continuous?\n`scale_color|fill_discrete`\nInspect Assigned Colors\n`scale_x|y_date` with `strftime()`\nCoordinate Systems\nCartesian Coordinate System\nChanging Limits\nClipping\nFixed Coordinate System\nFlipped Coordinate System\nCircular Corrdinate System\nTransform a Coordinate System\nSpatial Coordinate (Reference) Systems ## Slides\n\nView slides in full screen"
  },
  {
    "objectID": "modules/d1-07_concepts_pt2.html#exercises",
    "href": "modules/d1-07_concepts_pt2.html#exercises",
    "title": "Concepts of the {ggplot2} Package Pt. 2:Facets, Scales, and Coordinate System (Continued)",
    "section": "Exercises",
    "text": "Exercises"
  },
  {
    "objectID": "modules/d1-09_coffee_break.html",
    "href": "modules/d1-09_coffee_break.html",
    "title": "Coffee break",
    "section": "",
    "text": "If you have questions during the break …"
  },
  {
    "objectID": "modules/d1-10_data_com.html",
    "href": "modules/d1-10_data_com.html",
    "title": "Data Communication",
    "section": "",
    "text": "Visualize your Data\nInformation\nStory\nGoal\nVisual Form"
  },
  {
    "objectID": "modules/d1-10_data_com.html#slides",
    "href": "modules/d1-10_data_com.html#slides",
    "title": "Data Communication",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "modules/d1-10_data_com.html#exercises",
    "href": "modules/d1-10_data_com.html#exercises",
    "title": "Data Communication",
    "section": "Exercises",
    "text": "Exercises"
  },
  {
    "objectID": "modules/d2-01_lab_ann.html",
    "href": "modules/d2-01_lab_ann.html",
    "title": "Labels and Annotations",
    "section": "",
    "text": "Labels + theme()\n\nCustomize Labels via `theme()`\n\nLabels + scale_*()\n\nFormat Labels via `scale_*`\n\nLabels +ggtext::element_markdown\n\nStyling Labels with {ggtext}\n\nLabels + facet_*()\nFacet Labellers\nHandling Long Labels\n\nHandling Long Labels with {stringr}\nHandling Long Labels with {ggtext}\nHandling Long Labels\n\nAnnotations with annotate()\n\nAdd Single Text Annotations\nStyle Text Annotations\nAdd Multiple Text Annotations\nAdd Boxes (Rectangles)\nAdd Boxes (Rectangles)\nAdd Lines (Segments)\nAdd Curves\n\nAnnotations with `geom_*()`‘s’\n\nHighlight Hot Periods\nAnnotations with `geom_text()`\nAnnotations with `geom_label()`\nAnnotations with {ggrepel}\nAnnotations with {ggforce}\nHighlight Hot Periods\n\nAdding Images\n\nLoad and Modify Image\nAdd Background Image\nAdjust Position\nPlace Image Outside\nHighlight Hot Periods"
  },
  {
    "objectID": "modules/d2-01_lab_ann.html#slides",
    "href": "modules/d2-01_lab_ann.html#slides",
    "title": "Labels and Annotations",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "modules/d2-01_lab_ann.html#exercises",
    "href": "modules/d2-01_lab_ann.html#exercises",
    "title": "Labels and Annotations",
    "section": "Exercises",
    "text": "Exercises\n\n\n\n\n\n\nExercise\n\n\nTitle\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "modules/d2-02_coffee_break.html",
    "href": "modules/d2-02_coffee_break.html",
    "title": "Coffee break",
    "section": "",
    "text": "If you have questions during the break please come to any of the TAs."
  },
  {
    "objectID": "modules/d2-03_colors.html",
    "href": "modules/d2-03_colors.html",
    "title": "Working with Colors",
    "section": "",
    "text": "Challenge to encode Information\nColor Spaces\nColor Palette Choice\nUse Color wisely (and correctly)\nDesigning for Colorblindness\nBeyond the Rainbow\n\n\n\n\n\nColor Palettes\n\nPre-Defined Color Palettes: Viridis\nPre-Defined Color Palettes: Brewer\n{rcartocolor}\n{scico}\n{ggsci} and {ggthemes}\n{nord}\n{MetBrewer}\n\nCustomize Palettes\n\nCustomize Existing Palettes\n\nCreate New Palettes\n\nCreate Sequential Palettes\nCreate Diverging Palettes\nCreate Any Palette\n\nHCL Spectrum\n\nEvaluate HCL Spectrum\n\nTest Your Palettes\n\nEmulate CVD"
  },
  {
    "objectID": "modules/d2-03_colors.html#slides",
    "href": "modules/d2-03_colors.html#slides",
    "title": "Working with Colors",
    "section": "Slides",
    "text": "Slides\n\nPart 1\nView slides in full screen\n\n\n\nPart 2\nView slides in full screen"
  },
  {
    "objectID": "modules/d2-03_colors.html#exercises",
    "href": "modules/d2-03_colors.html#exercises",
    "title": "Working with Colors",
    "section": "Exercises",
    "text": "Exercises"
  },
  {
    "objectID": "modules/d2-04_lunch_break.html",
    "href": "modules/d2-04_lunch_break.html",
    "title": "Lunch break",
    "section": "",
    "text": "Warning\n\n\n\nPlease avoid questions during the breaks to give us a chance to recover and reflect - anything other than course material is however strongly encouraged! 😋"
  },
  {
    "objectID": "modules/d2-05_layout.html",
    "href": "modules/d2-05_layout.html",
    "title": "Layouts and Composition",
    "section": "",
    "text": "Legend Placement and Styling\n\nDiscrete Legend\nContinuous Legend\nLegend Position\nLegend Justification\nLegend Types\nLegend Styling\nKey Glyphs\nLegend with Color Shading\nLegend on Top\nResort Legend\nApply Theming\nAdjust Widths and Heights\nUse A Custom Layout\nAdd Labels\nAdd Inset Plots"
  },
  {
    "objectID": "modules/d2-05_layout.html#slides",
    "href": "modules/d2-05_layout.html#slides",
    "title": "Layouts and Composition",
    "section": "Slides",
    "text": "Slides\nView slides in full screen"
  },
  {
    "objectID": "modules/d2-05_layout.html#exercises",
    "href": "modules/d2-05_layout.html#exercises",
    "title": "Layouts and Composition",
    "section": "Exercises",
    "text": "Exercises"
  },
  {
    "objectID": "modules/d2-06_coffee_break.html",
    "href": "modules/d2-06_coffee_break.html",
    "title": "Coffee break",
    "section": "",
    "text": "If you have questions during the break please come to any of the TAs."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Day 2\nTuesday, July 26, 2022\n\n\n\n\n\n\n\n\nTime\n\n\nModule\n\n\n\n\n\n\n\n\n\n09:00 - 10:30\n\n\nLabels and Annotations\n\n\n\n\n\n\n\n10:30 - 11:00\n\n\nCoffee break\n\n\n\n\n\n\n\n11:00 - 12:30\n\n\nWorking with Colors\n\n\n\n\n\n\n\n15:00 - 15:30\n\n\nLunch break\n\n\n\n\n\n\n\n15:30 - 17:00\n\n\nLayouts and Composition\n\n\n\n\n\n\n\n15:00 - 15:30\n\n\nCoffee break\n\n\n\n\n\n\n\n15:30 - 17:00\n\n\nGroup Project\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "team.html",
    "href": "team.html",
    "title": "Teaching Team",
    "section": "",
    "text": "Christine Jin\n:linkedin: https://www.linkedin.com/in/jinchristine/\n\n\nThomas Lin Pedersen :twitter: @thomasp85\n\n\nAhmadou Dicko :twitter: @dickoah\n\n\nMarco Sciaini :twitter: @shinysci\n\n\nHassan Kibirige :twitter: @HKibirige"
  }
]